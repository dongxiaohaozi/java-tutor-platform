{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, View } from 'react-native';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableHeader = _ref => {\n  let {\n    children,\n    style,\n    theme,\n    ...rest\n  } = _ref;\n  const borderBottomColor = color(theme.dark ? white : black).alpha(0.12).rgb().string();\n  return /*#__PURE__*/React.createElement(View, _extends({}, rest, {\n    style: [styles.header, {\n      borderBottomColor\n    }, style]\n  }), children);\n};\n\nDataTableHeader.displayName = 'DataTable.Header';\nconst styles = StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    height: 48,\n    paddingHorizontal: 16,\n    borderBottomWidth: StyleSheet.hairlineWidth * 2\n  }\n});\nexport default withTheme(DataTableHeader); // @component-docs ignore-next-line\n\nexport { DataTableHeader };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAgCC,IAAhC,QAAuD,cAAvD;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,qBAA7B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,eAAe,GAAGC,QAAgD;EAAA,IAA/C;IAAEC,QAAF;IAAYC,KAAZ;IAAmBC,KAAnB;IAA0B,GAAGC;EAA7B,IAA+CJ;EACtE,MAAMK,iBAAiB,GAAGZ,KAAK,CAACU,KAAK,CAACG,IAANH,GAAaN,KAAbM,GAAqBP,KAAtB,CAALH,CACvBc,KADuBd,CACjB,IADiBA,EAEvBe,GAFuBf,GAGvBgB,MAHuBhB,EAA1B;EAKA,oBACED,oBAACG,IAAD,eAAUS,IAAV;IAAgBF,KAAK,EAAE,CAACQ,MAAM,CAACC,MAAR,EAAgB;MAAEN;IAAF,CAAhB,EAAuCH,KAAvC;EAAvB,IACGD,QADH,CADF;AANF;;AAaAF,eAAe,CAACa,WAAhBb,GAA8B,kBAA9BA;AAEA,MAAMW,MAAM,GAAGhB,UAAU,CAACmB,MAAXnB,CAAkB;EAC/BiB,MAAM,EAAE;IACNG,aAAa,EAAE,KADT;IAENC,MAAM,EAAE,EAFF;IAGNC,iBAAiB,EAAE,EAHb;IAINC,iBAAiB,EAAEvB,UAAU,CAACwB,aAAXxB,GAA2B;EAJxC;AADuB,CAAlBA,CAAf;AASA,eAAeI,SAAS,CAACC,eAAD,CAAxB,C,CAEA;;AACA,SAASA,eAAT","names":["React","color","StyleSheet","View","black","white","withTheme","DataTableHeader","_ref","children","style","theme","rest","borderBottomColor","dark","alpha","rgb","string","styles","header","displayName","create","flexDirection","height","paddingHorizontal","borderBottomWidth","hairlineWidth"],"sources":["/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/node_modules/react-native-paper/lib/module/components/DataTable/DataTableHeader.tsx"],"sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DataTableHeader`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableHeader = ({ children, style, theme, ...rest }: Props) => {\n  const borderBottomColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  return (\n    <View {...rest} style={[styles.header, { borderBottomColor }, style]}>\n      {children}\n    </View>\n  );\n};\n\nDataTableHeader.displayName = 'DataTable.Header';\n\nconst styles = StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    height: 48,\n    paddingHorizontal: 16,\n    borderBottomWidth: StyleSheet.hairlineWidth * 2,\n  },\n});\n\nexport default withTheme(DataTableHeader);\n\n// @component-docs ignore-next-line\nexport { DataTableHeader };\n"]},"metadata":{},"sourceType":"module"}