{"ast":null,"code":"var _jsxFileName = \"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/exercise2/Exercise2.jsx\",\n    _s = $RefreshSig$();\n\nimport './encapsulation.scss';\nimport React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { far } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport '../introduction/introduction.scss';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Exercise2 = () => {\n  _s();\n\n  ///     =()    may be changed to     =({submit})\n  const navigate = useNavigate();\n\n  const transfer = res => {\n    if (res.includes(\":)\")) {\n      alert(\"You would go to the chapter 4 Class and Objects to enhance your knowledge!\");\n      setTimeout(() => navigate('/chapter4'), 500);\n    }\n  };\n\n  const submit = e => {\n    e.preventDefault();\n    const code = document.getElementById(\"input\").value;\n    const data = {\n      code: code\n    };\n    fetch('/api/code002', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.text()).then(res => alert(res));\n    fetch('/api/code002', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()) // .then(ans=>{\n    //   document.getElementById(\"hint\").style.display=\"block\"\n    //   document.getElementById(\"hint\").innerText=ans.getkey()\n    // })\n    .then(res => {\n      transfer(res);\n    });\n  }; //   function submit (e) {\n  //     e.preventDefault();\n  //     console.log(\"hh\")\n  //     let code = document.getElementById(\"input\").value;\n  //     let answerID = Number((e.target.id).replace (/[^0-9]+/g, '')); // eg: \"1stQuestion\" => 1\n  //     //let answerID = \"0\";\n  //     let data = { code: code };\n  //     fetch(`/code/${answerID}`, {\n  //       method: \"POST\",\n  //       headers: { \"Content-Type\": \"application/json\" },\n  //       body: JSON.stringify(data),\n  //     })\n  //       .then((res) => res.text())\n  //       .then((txt) => alert(txt));\n  //   }\n\n\n  const obj1 = ` public class Person {\n        int phoneNumber; \n        \n        public int getPhoneNumber() {\n          return phoneNumber;\n         }\n        \n        public void setPhoneNumber(int phoneNumber) {\n          this.phoneNumber = phoneNumber;\n        }\n  }`;\n  const obj2 = ` public int getPhoneNumber (boolean isEmployee) {\n    if (isEmployee) {\n        return height;\n    }\n  }`;\n  const obj3 = ` public void setPhoneNumber(int phoneNumber) {\n    String phoneStr = Integer.toString(phoneNumber);\n         if(phoneStr.length() == 12) {\n             this.phoneNumber = phoneNumber;\n        }\n  }`;\n  const inputdefault = `\n//enter your code here//\n  `;\n\n  const Code = _ref => {\n    let {\n      children\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n      language: \"java\",\n      style: far,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widgets\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Exercise2:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"exercise-title\",\n          children: \"Write a class Animal, which contains private properties name, age, and public method void showInfo() outputting the animal information. Add constructors to the Animal class. Create an instance of Animal, defining its name \\u201Cdog\\u201D and age \\u201C2\\u201D then output its information (don\\u2019t need to write the main method and class to run the codes, just run it directly).  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"input\",\n          defaultValue: inputdefault\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            submit(e);\n          },\n          id: \"question1\",\n          className: \"testbutton\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 23\n    }, this)\n  }, void 0, false);\n};\n\n_s(Exercise2, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Exercise2;\nexport default Exercise2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exercise2\");","map":{"version":3,"names":["React","SyntaxHighlighter","far","useNavigate","Exercise2","navigate","transfer","res","includes","alert","setTimeout","submit","e","preventDefault","code","document","getElementById","value","data","fetch","method","headers","body","JSON","stringify","then","text","json","obj1","obj2","obj3","inputdefault","Code","children"],"sources":["/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/exercise2/Exercise2.jsx"],"sourcesContent":["import './encapsulation.scss';\nimport React from 'react';\nimport  SyntaxHighlighter  from 'react-syntax-highlighter';\nimport {far} from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport '../introduction/introduction.scss'\nimport { useNavigate } from 'react-router-dom';\n\nconst Exercise2 = () => {\n\n  ///     =()    may be changed to     =({submit})\n\n  const navigate = useNavigate();\n\n  const transfer = (res) => {\n    if (res.includes(\":)\")) {\n      alert(\"You would go to the chapter 4 Class and Objects to enhance your knowledge!\")\n      setTimeout(() => navigate('/chapter4'), 500);\n\n    }\n  }\n  const submit = (e) => {\n    e.preventDefault();\n\n    const code = document.getElementById(\"input\").value;\n    const data = { code: code };\n\n\n    fetch('/api/code002', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.text())\n      .then(res => alert(res))\n\n\n\n\n    fetch('/api/code002', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      // .then(ans=>{\n      //   document.getElementById(\"hint\").style.display=\"block\"\n      //   document.getElementById(\"hint\").innerText=ans.getkey()\n\n      // })\n      .then(res => { transfer(res) })\n\n  }\n\n//   function submit (e) {\n//     e.preventDefault();\n//     console.log(\"hh\")\n//     let code = document.getElementById(\"input\").value;\n//     let answerID = Number((e.target.id).replace (/[^0-9]+/g, '')); // eg: \"1stQuestion\" => 1\n//     //let answerID = \"0\";\n//     let data = { code: code };\n//     fetch(`/code/${answerID}`, {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(data),\n//     })\n//       .then((res) => res.text())\n//       .then((txt) => alert(txt));\n//   }\n\n\n\n    const obj1 = \n  ` public class Person {\n        int phoneNumber; \n        \n        public int getPhoneNumber() {\n          return phoneNumber;\n         }\n        \n        public void setPhoneNumber(int phoneNumber) {\n          this.phoneNumber = phoneNumber;\n        }\n  }`\n    const obj2 = \n  ` public int getPhoneNumber (boolean isEmployee) {\n    if (isEmployee) {\n        return height;\n    }\n  }`\n    \n  const obj3 = \n  ` public void setPhoneNumber(int phoneNumber) {\n    String phoneStr = Integer.toString(phoneNumber);\n         if(phoneStr.length() == 12) {\n             this.phoneNumber = phoneNumber;\n        }\n  }` \n  const inputdefault  = \n  `\n//enter your code here//\n  ` \n  const Code = ({ children }) => (\n    <SyntaxHighlighter language=\"java\" style={ far}>\n        { children }\n    </SyntaxHighlighter>\n  );\n    return (\n            <>\n                      <div className=\"widgets\">\n                \n                <h3>Exercise2:</h3>\n                <div className = \"exercise-div\">\n                <p className = \"exercise-title\">Write a class Animal, which contains private properties name, age, and public method void showInfo() outputting the animal information. Add constructors to the Animal class. Create an instance of Animal, defining its name “dog” and age “2” then output its information (don’t need to write the main method and class to run the codes, just run it directly).  </p>\n                <textarea id = \"input\" defaultValue = {inputdefault}>\n\n                    \n                    </textarea>\n                <button onClick = {(e) => {submit(e)}} id = \"question1\" className=\"testbutton\" >Submit</button>\n                </div>   \n                    \n                    \n               \n            </div>\n        </>   \n\n  )\n  \n}\n\n\nexport default Exercise2"],"mappings":"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"},"metadata":{},"sourceType":"module"}