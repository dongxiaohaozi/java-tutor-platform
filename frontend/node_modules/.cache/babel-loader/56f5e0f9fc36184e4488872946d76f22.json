{"ast":null,"code":"export const handlePress = _ref => {\n  let {\n    onPress,\n    value,\n    onValueChange\n  } = _ref;\n\n  if (onPress && onValueChange) {\n    console.warn(`onPress in the scope of RadioButtonGroup will not be executed, use onValueChange instead`);\n  }\n\n  onValueChange ? onValueChange(value) : onPress === null || onPress === void 0 ? void 0 : onPress();\n};\nexport const isChecked = _ref2 => {\n  let {\n    value,\n    status,\n    contextValue\n  } = _ref2;\n\n  if (contextValue !== undefined && contextValue !== null) {\n    return contextValue === value ? 'checked' : 'unchecked';\n  } else {\n    return status;\n  }\n};","map":{"version":3,"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAGC,QAQrB;EAAA,IARsB;IAC1BC,OAD0B;IAE1BC,KAF0B;IAG1BC;EAH0B,IAQtBH;;EACJ,IAAIC,OAAO,IAAIE,aAAf,EAA8B;IAC5BC,OAAO,CAACC,IAARD,CACG,0FADHA;EAGD;;EAEDD,aAAa,GAAGA,aAAa,CAACD,KAAD,CAAhB,GAA0BD,OAA1B,SAA0BA,WAA1B,WAA0BA,GAA1B,MAA0BA,UAAO,EAA9CE;AAfK;AAkBP,OAAO,MAAMG,SAAS,GAAGC,SAQnB;EAAA,IARoB;IACxBL,KADwB;IAExBM,MAFwB;IAGxBC;EAHwB,IAQpBF;;EACJ,IAAIE,YAAY,KAAKC,SAAjBD,IAA8BA,YAAY,KAAK,IAAnD,EAAyD;IACvD,OAAOA,YAAY,KAAKP,KAAjBO,GAAyB,SAAzBA,GAAqC,WAA5C;EADF,OAEO;IACL,OAAOD,MAAP;EACD;AAbI","names":["handlePress","_ref","onPress","value","onValueChange","console","warn","isChecked","_ref2","status","contextValue","undefined"],"sources":["/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/node_modules/react-native-paper/lib/module/components/RadioButton/utils.ts"],"sourcesContent":["export const handlePress = ({\n  onPress,\n  value,\n  onValueChange,\n}: {\n  onPress?: () => void;\n  value: string;\n  onValueChange?: (value: string) => void;\n}) => {\n  if (onPress && onValueChange) {\n    console.warn(\n      `onPress in the scope of RadioButtonGroup will not be executed, use onValueChange instead`\n    );\n  }\n\n  onValueChange ? onValueChange(value) : onPress?.();\n};\n\nexport const isChecked = ({\n  value,\n  status,\n  contextValue,\n}: {\n  value: string;\n  status?: 'checked' | 'unchecked';\n  contextValue?: string;\n}) => {\n  if (contextValue !== undefined && contextValue !== null) {\n    return contextValue === value ? 'checked' : 'unchecked';\n  } else {\n    return status;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}