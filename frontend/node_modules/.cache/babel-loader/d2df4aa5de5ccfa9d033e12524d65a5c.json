{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\n/**\n * A component to show a single cell inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * If you want to support multiline text, please use View instead, as multiline text doesn't comply with\n * MD Guidelines (https://github.com/callstack/react-native-paper/issues/2381).\n */\n\nconst DataTableCell = _ref => {\n  let {\n    children,\n    textStyle,\n    style,\n    numeric,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/React.createElement(TouchableRipple, _extends({}, rest, {\n    style: [styles.container, numeric && styles.right, style]\n  }), /*#__PURE__*/React.createElement(Text, {\n    style: textStyle,\n    numberOfLines: 1\n  }, children));\n};\n\nDataTableCell.displayName = 'DataTable.Cell';\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  right: {\n    justifyContent: 'flex-end'\n  }\n});\nexport default DataTableCell;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA4D,cAA5D;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,aAAa,GAAGC;EAAA,IAAC;IACrBC,QADqB;IAErBC,SAFqB;IAGrBC,KAHqB;IAIrBC,OAJqB;IAKrB,GAAGC;EALkB,IAADL;EAAA,oBAOpBL,oBAACG,eAAD,eACMO,IADN;IAEEF,KAAK,EAAE,CAACG,MAAM,CAACC,SAAR,EAAmBH,OAAO,IAAIE,MAAM,CAACE,KAArC,EAA4CL,KAA5C;EAFT,iBAIER,oBAACE,IAAD;IAAMM,KAAK,EAAED,SAAb;IAAwBO,aAAa,EAAE;EAAvC,GACGR,QADH,CAJF,CAPoB;AAAtB;;AAiBAF,aAAa,CAACW,WAAdX,GAA4B,gBAA5BA;AAEA,MAAMO,MAAM,GAAGV,UAAU,CAACe,MAAXf,CAAkB;EAC/BW,SAAS,EAAE;IACTK,IAAI,EAAE,CADG;IAETC,aAAa,EAAE,KAFN;IAGTC,UAAU,EAAE;EAHH,CADoB;EAO/BN,KAAK,EAAE;IACLO,cAAc,EAAE;EADX;AAPwB,CAAlBnB,CAAf;AAYA,eAAeG,aAAf","names":["React","StyleSheet","Text","TouchableRipple","DataTableCell","_ref","children","textStyle","style","numeric","rest","styles","container","right","numberOfLines","displayName","create","flex","flexDirection","alignItems","justifyContent"],"sources":["/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/node_modules/react-native-paper/lib/module/components/DataTable/DataTableCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableCell`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Text content style of the `DataTableCell`.\n   */\n  textStyle?: StyleProp<TextStyle>;\n};\n\n/**\n * A component to show a single cell inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * If you want to support multiline text, please use View instead, as multiline text doesn't comply with\n * MD Guidelines (https://github.com/callstack/react-native-paper/issues/2381).\n */\n\nconst DataTableCell = ({\n  children,\n  textStyle,\n  style,\n  numeric,\n  ...rest\n}: Props) => (\n  <TouchableRipple\n    {...rest}\n    style={[styles.container, numeric && styles.right, style]}\n  >\n    <Text style={textStyle} numberOfLines={1}>\n      {children}\n    </Text>\n  </TouchableRipple>\n);\n\nDataTableCell.displayName = 'DataTable.Cell';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n});\n\nexport default DataTableCell;\n"]},"metadata":{},"sourceType":"module"}