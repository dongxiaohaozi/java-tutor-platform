{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { Platform, StyleSheet, TouchableWithoutFeedback, View } from 'react-native';\nimport color from 'color';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\n/**\n * A component used to display a title and optional subtitle in an appbar.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-content.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *        <Appbar.Content title=\"Title\" subtitle={'Subtitle'} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst AppbarContent = _ref => {\n  let {\n    color: titleColor = white,\n    subtitle,\n    subtitleStyle,\n    onPress,\n    style,\n    titleRef,\n    titleStyle,\n    theme,\n    title,\n    ...rest\n  } = _ref;\n  const {\n    fonts\n  } = theme;\n  const subtitleColor = color(titleColor).alpha(0.7).rgb().string();\n  return /*#__PURE__*/React.createElement(TouchableWithoutFeedback, {\n    onPress: onPress,\n    disabled: !onPress\n  }, /*#__PURE__*/React.createElement(View, _extends({\n    style: [styles.container, style]\n  }, rest), /*#__PURE__*/React.createElement(Text, {\n    ref: titleRef,\n    style: [{\n      color: titleColor,\n      ...(Platform.OS === 'ios' ? fonts.regular : fonts.medium)\n    }, styles.title, titleStyle],\n    numberOfLines: 1,\n    accessible: true,\n    accessibilityTraits: \"header\" // @ts-expect-error React Native doesn't accept 'heading' as it's web-only\n    ,\n    accessibilityRole: Platform.OS === 'web' ? 'heading' : 'header'\n  }, title), subtitle ? /*#__PURE__*/React.createElement(Text, {\n    style: [styles.subtitle, {\n      color: subtitleColor\n    }, subtitleStyle],\n    numberOfLines: 1\n  }, subtitle) : null));\n};\n\nAppbarContent.displayName = 'Appbar.Content';\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14\n  }\n});\nexport default withTheme(AppbarContent); // @component-docs ignore-next-line\n\nconst AppbarContentWithTheme = withTheme(AppbarContent); // @component-docs ignore-next-line\n\nexport { AppbarContentWithTheme as AppbarContent };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,QADF,EAGEC,UAHF,EAKEC,wBALF,EAMEC,IANF,QAQO,cARP;AASA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,KAAT,QAAsB,qBAAtB;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,aAAa,GAAGC,QAWT;EAAA,IAXU;IACrBL,KAAK,EAAEM,UAAU,GAAGH,KADC;IAErBI,QAFqB;IAGrBC,aAHqB;IAIrBC,OAJqB;IAKrBC,KALqB;IAMrBC,QANqB;IAOrBC,UAPqB;IAQrBC,KARqB;IASrBC,KATqB;IAUrB,GAAGC;EAVkB,IAWVV;EACX,MAAM;IAAEW;EAAF,IAAYH,KAAlB;EAEA,MAAMI,aAAa,GAAGjB,KAAK,CAACM,UAAD,CAALN,CAAkBkB,KAAlBlB,CAAwB,GAAxBA,EAA6BmB,GAA7BnB,GAAmCoB,MAAnCpB,EAAtB;EAEA,oBACEL,oBAACG,wBAAD;IAA0BW,OAAO,EAAEA,OAAnC;IAA4CY,QAAQ,EAAE,CAACZ;EAAvD,gBACEd,oBAACI,IAAD;IAAMW,KAAK,EAAE,CAACY,MAAM,CAACC,SAAR,EAAmBb,KAAnB;EAAb,GAA4CK,IAA5C,gBACEpB,oBAACM,IAAD;IACEuB,GAAG,EAAEb,QADP;IAEED,KAAK,EAAE,CACL;MACEV,KAAK,EAAEM,UADT;MAEE,IAAIV,QAAQ,CAAC6B,EAAT7B,KAAgB,KAAhBA,GAAwBoB,KAAK,CAACU,OAA9B9B,GAAwCoB,KAAK,CAACW,MAAlD;IAFF,CADK,EAKLL,MAAM,CAACR,KALF,EAMLF,UANK,CAFT;IAUEgB,aAAa,EAAE,CAVjB;IAWEC,UAAU,MAXZ;IAYEC,mBAAmB,EAAC,QAZtB,CAaE;IAbF;IAcEC,iBAAiB,EAAEnC,QAAQ,CAAC6B,EAAT7B,KAAgB,KAAhBA,GAAwB,SAAxBA,GAAoC;EAdzD,GAgBGkB,KAhBH,CADF,EAmBGP,QAAQ,gBACPZ,oBAACM,IAAD;IACES,KAAK,EAAE,CAACY,MAAM,CAACf,QAAR,EAAkB;MAAEP,KAAK,EAAEiB;IAAT,CAAlB,EAA4CT,aAA5C,CADT;IAEEoB,aAAa,EAAE;EAFjB,GAIGrB,QAJH,CADO,GAOL,IA1BN,CADF,CADF;AAhBF;;AAkDAH,aAAa,CAAC4B,WAAd5B,GAA4B,gBAA5BA;AAEA,MAAMkB,MAAM,GAAGzB,UAAU,CAACoC,MAAXpC,CAAkB;EAC/B0B,SAAS,EAAE;IACTW,IAAI,EAAE,CADG;IAETC,iBAAiB,EAAE;EAFV,CADoB;EAK/BrB,KAAK,EAAE;IACLsB,QAAQ,EAAExC,QAAQ,CAAC6B,EAAT7B,KAAgB,KAAhBA,GAAwB,EAAxBA,GAA6B;EADlC,CALwB;EAQ/BW,QAAQ,EAAE;IACR6B,QAAQ,EAAExC,QAAQ,CAAC6B,EAAT7B,KAAgB,KAAhBA,GAAwB,EAAxBA,GAA6B;EAD/B;AARqB,CAAlBC,CAAf;AAaA,eAAeK,SAAS,CAACE,aAAD,CAAxB,C,CAEA;;AACA,MAAMiC,sBAAsB,GAAGnC,SAAS,CAACE,aAAD,CAAxC,C,CACA;;AACA,SAASiC,sBAAsB,IAAIjC,aAAnC","names":["React","Platform","StyleSheet","TouchableWithoutFeedback","View","color","Text","withTheme","white","AppbarContent","_ref","titleColor","subtitle","subtitleStyle","onPress","style","titleRef","titleStyle","theme","title","rest","fonts","subtitleColor","alpha","rgb","string","disabled","styles","container","ref","OS","regular","medium","numberOfLines","accessible","accessibilityTraits","accessibilityRole","displayName","create","flex","paddingHorizontal","fontSize","AppbarContentWithTheme"],"sources":["/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/node_modules/react-native-paper/lib/module/components/Appbar/AppbarContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\n\nimport Text from '../Typography/Text';\n\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\n\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof View> & {\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Text for the title.\n   */\n  title: React.ReactNode;\n  /**\n   * Style for the title.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Reference for the title.\n   */\n  titleRef?: React.RefObject<Text>;\n  /**\n   * Text for the subtitle.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Style for the subtitle.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component used to display a title and optional subtitle in an appbar.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-content.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *        <Appbar.Content title=\"Title\" subtitle={'Subtitle'} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarContent = ({\n  color: titleColor = white,\n  subtitle,\n  subtitleStyle,\n  onPress,\n  style,\n  titleRef,\n  titleStyle,\n  theme,\n  title,\n  ...rest\n}: Props) => {\n  const { fonts } = theme;\n\n  const subtitleColor = color(titleColor).alpha(0.7).rgb().string();\n\n  return (\n    <TouchableWithoutFeedback onPress={onPress} disabled={!onPress}>\n      <View style={[styles.container, style]} {...rest}>\n        <Text\n          ref={titleRef}\n          style={[\n            {\n              color: titleColor,\n              ...(Platform.OS === 'ios' ? fonts.regular : fonts.medium),\n            },\n            styles.title,\n            titleStyle,\n          ]}\n          numberOfLines={1}\n          accessible\n          accessibilityTraits=\"header\"\n          // @ts-expect-error React Native doesn't accept 'heading' as it's web-only\n          accessibilityRole={Platform.OS === 'web' ? 'heading' : 'header'}\n        >\n          {title}\n        </Text>\n        {subtitle ? (\n          <Text\n            style={[styles.subtitle, { color: subtitleColor }, subtitleStyle]}\n            numberOfLines={1}\n          >\n            {subtitle}\n          </Text>\n        ) : null}\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nAppbarContent.displayName = 'Appbar.Content';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20,\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14,\n  },\n});\n\nexport default withTheme(AppbarContent);\n\n// @component-docs ignore-next-line\nconst AppbarContentWithTheme = withTheme(AppbarContent);\n// @component-docs ignore-next-line\nexport { AppbarContentWithTheme as AppbarContent };\n"]},"metadata":{},"sourceType":"module"}