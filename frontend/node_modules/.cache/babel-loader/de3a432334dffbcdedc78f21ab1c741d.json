{"ast":null,"code":"import * as React from 'react';\nimport { StyleSheet, Animated, SafeAreaView, TouchableWithoutFeedback, View } from 'react-native';\nimport color from 'color';\nimport FAB from './FAB';\nimport Text from '../Typography/Text';\nimport Card from '../Card/Card';\nimport { withTheme } from '../../core/theming';\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-group.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal, Provider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [state, setState] = React.useState({ open: false });\n *\n *   const onStateChange = ({ open }) => setState({ open });\n *\n *   const { open } = state;\n *\n *   return (\n *     <Provider>\n *       <Portal>\n *         <FAB.Group\n *           open={open}\n *           icon={open ? 'calendar-today' : 'plus'}\n *           actions={[\n *             { icon: 'plus', onPress: () => console.log('Pressed add') },\n *             {\n *               icon: 'star',\n *               label: 'Star',\n *               onPress: () => console.log('Pressed star'),\n *             },\n *             {\n *               icon: 'email',\n *               label: 'Email',\n *               onPress: () => console.log('Pressed email'),\n *             },\n *             {\n *               icon: 'bell',\n *               label: 'Remind',\n *               onPress: () => console.log('Pressed notifications'),\n *               small: false,\n *             },\n *           ]}\n *           onStateChange={onStateChange}\n *           onPress={() => {\n *             if (open) {\n *               // do something if the speed dial is open\n *             }\n *           }}\n *         />\n *       </Portal>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst FABGroup = _ref => {\n  let {\n    actions,\n    icon,\n    open,\n    onPress,\n    accessibilityLabel,\n    theme,\n    style,\n    fabStyle,\n    visible,\n    testID,\n    onStateChange,\n    color: colorProp,\n    backdropColor\n  } = _ref;\n  const {\n    current: backdrop\n  } = React.useRef(new Animated.Value(0));\n  const animations = React.useRef(actions.map(() => new Animated.Value(open ? 1 : 0)));\n  const [prevActions, setPrevActions] = React.useState(null);\n  const {\n    scale\n  } = theme.animation;\n  React.useEffect(() => {\n    if (open) {\n      Animated.parallel([Animated.timing(backdrop, {\n        toValue: 1,\n        duration: 250 * scale,\n        useNativeDriver: true\n      }), Animated.stagger(50 * scale, animations.current.map(animation => Animated.timing(animation, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true\n      })).reverse())]).start();\n    } else {\n      Animated.parallel([Animated.timing(backdrop, {\n        toValue: 0,\n        duration: 200 * scale,\n        useNativeDriver: true\n      }), ...animations.current.map(animation => Animated.timing(animation, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }))]).start();\n    }\n  }, [open, actions, backdrop, scale]);\n\n  const close = () => onStateChange({\n    open: false\n  });\n\n  const toggle = () => onStateChange({\n    open: !open\n  });\n\n  const {\n    colors\n  } = theme;\n  const labelColor = theme.dark ? colors.text : color(colors.text).fade(0.54).rgb().string();\n  const backdropOpacity = open ? backdrop.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [0, 1, 1]\n  }) : backdrop;\n  const opacities = animations.current;\n  const scales = opacities.map(opacity => open ? opacity.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0.8, 1]\n  }) : 1);\n\n  if (actions.length !== (prevActions === null || prevActions === void 0 ? void 0 : prevActions.length)) {\n    animations.current = actions.map((_, i) => animations.current[i] || new Animated.Value(open ? 1 : 0));\n    setPrevActions(actions);\n  }\n\n  return /*#__PURE__*/React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [styles.container, style]\n  }, /*#__PURE__*/React.createElement(TouchableWithoutFeedback, {\n    onPress: close\n  }, /*#__PURE__*/React.createElement(Animated.View, {\n    pointerEvents: open ? 'auto' : 'none',\n    style: [styles.backdrop, {\n      opacity: backdropOpacity,\n      backgroundColor: backdropColor || colors.backdrop\n    }]\n  })), /*#__PURE__*/React.createElement(SafeAreaView, {\n    pointerEvents: \"box-none\",\n    style: styles.safeArea\n  }, /*#__PURE__*/React.createElement(View, {\n    pointerEvents: open ? 'box-none' : 'none'\n  }, actions.map((it, i) => {\n    var _it$labelTextColor;\n\n    return /*#__PURE__*/React.createElement(View, {\n      key: i // eslint-disable-line react/no-array-index-key\n      ,\n      style: [styles.item, {\n        marginHorizontal: typeof it.small === 'undefined' || it.small ? 24 : 16\n      }],\n      pointerEvents: open ? 'box-none' : 'none'\n    }, it.label && /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(Card, {\n      style: [styles.label, {\n        transform: [{\n          scale: scales[i]\n        }],\n        opacity: opacities[i]\n      }, it.labelStyle],\n      onPress: () => {\n        it.onPress();\n        close();\n      },\n      accessibilityLabel: it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n      ,\n      accessibilityTraits: \"button\",\n      accessibilityComponentType: \"button\",\n      accessibilityRole: \"button\"\n    }, /*#__PURE__*/React.createElement(Text, {\n      style: {\n        color: (_it$labelTextColor = it.labelTextColor) !== null && _it$labelTextColor !== void 0 ? _it$labelTextColor : labelColor\n      }\n    }, it.label))), /*#__PURE__*/React.createElement(FAB, {\n      small: typeof it.small !== 'undefined' ? it.small : true,\n      icon: it.icon,\n      color: it.color,\n      style: [{\n        transform: [{\n          scale: scales[i]\n        }],\n        opacity: opacities[i],\n        backgroundColor: theme.colors.surface\n      }, it.style],\n      onPress: () => {\n        it.onPress();\n        close();\n      },\n      accessibilityLabel: typeof it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n      ,\n      accessibilityTraits: \"button\",\n      accessibilityComponentType: \"button\",\n      accessibilityRole: \"button\",\n      testID: it.testID,\n      visible: open\n    }));\n  })), /*#__PURE__*/React.createElement(FAB, {\n    onPress: () => {\n      onPress === null || onPress === void 0 ? void 0 : onPress();\n      toggle();\n    },\n    icon: icon,\n    color: colorProp,\n    accessibilityLabel: accessibilityLabel // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n    ,\n    accessibilityTraits: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      expanded: open\n    },\n    style: [styles.fab, fabStyle],\n    visible: visible,\n    testID: testID\n  })));\n};\n\nFABGroup.displayName = 'FAB.Group';\nexport default withTheme(FABGroup); // @component-docs ignore-next-line\n\nconst FABGroupWithTheme = withTheme(FABGroup); // @component-docs ignore-next-line\n\nexport { FABGroupWithTheme as FABGroup };\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end'\n  },\n  container: { ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end'\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0\n  },\n  backdrop: { ...StyleSheet.absoluteFillObject\n  },\n  label: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"mappings":"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","names":["React","StyleSheet","Animated","SafeAreaView","TouchableWithoutFeedback","View","color","FAB","Text","Card","withTheme","FABGroup","_ref","actions","icon","open","onPress","accessibilityLabel","theme","style","fabStyle","visible","testID","onStateChange","colorProp","backdropColor","current","backdrop","useRef","Value","animations","map","prevActions","setPrevActions","useState","scale","animation","useEffect","parallel","timing","toValue","duration","useNativeDriver","stagger","reverse","start","close","toggle","colors","labelColor","dark","text","fade","rgb","string","backdropOpacity","interpolate","inputRange","outputRange","opacities","scales","opacity","length","_","i","pointerEvents","styles","container","backgroundColor","safeArea","it","key","item","marginHorizontal","small","label","transform","labelStyle","accessibilityTraits","accessibilityComponentType","accessibilityRole","labelTextColor","surface","accessibilityState","expanded","fab","displayName","FABGroupWithTheme","create","alignItems","absoluteFillObject","justifyContent","marginBottom","marginTop","borderRadius","paddingHorizontal","paddingVertical","marginVertical","elevation","flexDirection"],"sources":["/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/node_modules/react-native-paper/lib/module/components/FAB/FABGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Animated,\n  SafeAreaView,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\nimport FAB from './FAB';\nimport Text from '../Typography/Text';\nimport Card from '../Card/Card';\nimport { withTheme } from '../../core/theming';\nimport type { IconSource } from '../Icon';\n\ntype Props = {\n  /**\n   * Action items to display in the form of a speed dial.\n   * An action item should contain the following properties:\n   * - `icon`: icon to display (required)\n   * - `label`: optional label text\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n   * - `color`: custom icon color of the action item\n   * - `labelTextColor`: custom label text color of the action item\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\n   * - `labelStyle`: pass additional styles for the fab item label, for example, `backgroundColor`\n   * - `small`: boolean describing whether small or normal sized FAB is rendered. Defaults to `true`\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\n   */\n  actions: Array<{\n    icon: IconSource;\n    label?: string;\n    color?: string;\n    labelTextColor?: string;\n    accessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    labelStyle?: StyleProp<ViewStyle>;\n    small?: boolean;\n    onPress: () => void;\n    testID?: string;\n  }>;\n  /**\n   * Icon to display for the `FAB`.\n   * You can toggle it based on whether the speed dial is open to display a different icon.\n   */\n  icon: IconSource;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Custom backdrop color for opened speed dial background.\n   */\n  backdropColor?: string;\n  /**\n   * Function to execute on pressing the `FAB`.\n   */\n  onPress?: () => void;\n  /**\n   * Whether the speed dial is open.\n   */\n  open: boolean;\n  /**\n   * Callback which is called on opening and closing the speed dial.\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onStateChange: (state: { open: boolean }) => void;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Style for the group. You can use it to pass additional styles if you need.\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\n   */\n  fabStyle?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Pass down testID from Group props to FAB.\n   */\n  testID?: string;\n};\n\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-group.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal, Provider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [state, setState] = React.useState({ open: false });\n *\n *   const onStateChange = ({ open }) => setState({ open });\n *\n *   const { open } = state;\n *\n *   return (\n *     <Provider>\n *       <Portal>\n *         <FAB.Group\n *           open={open}\n *           icon={open ? 'calendar-today' : 'plus'}\n *           actions={[\n *             { icon: 'plus', onPress: () => console.log('Pressed add') },\n *             {\n *               icon: 'star',\n *               label: 'Star',\n *               onPress: () => console.log('Pressed star'),\n *             },\n *             {\n *               icon: 'email',\n *               label: 'Email',\n *               onPress: () => console.log('Pressed email'),\n *             },\n *             {\n *               icon: 'bell',\n *               label: 'Remind',\n *               onPress: () => console.log('Pressed notifications'),\n *               small: false,\n *             },\n *           ]}\n *           onStateChange={onStateChange}\n *           onPress={() => {\n *             if (open) {\n *               // do something if the speed dial is open\n *             }\n *           }}\n *         />\n *       </Portal>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst FABGroup = ({\n  actions,\n  icon,\n  open,\n  onPress,\n  accessibilityLabel,\n  theme,\n  style,\n  fabStyle,\n  visible,\n  testID,\n  onStateChange,\n  color: colorProp,\n  backdropColor,\n}: Props) => {\n  const { current: backdrop } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const animations = React.useRef<Animated.Value[]>(\n    actions.map(() => new Animated.Value(open ? 1 : 0))\n  );\n\n  const [prevActions, setPrevActions] = React.useState<\n    | {\n        icon: IconSource;\n        label?: string;\n        color?: string;\n        accessibilityLabel?: string;\n        style?: StyleProp<ViewStyle>;\n        onPress: () => void;\n        testID?: string;\n      }[]\n    | null\n  >(null);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    if (open) {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true,\n        }),\n        Animated.stagger(\n          50 * scale,\n          animations.current\n            .map((animation) =>\n              Animated.timing(animation, {\n                toValue: 1,\n                duration: 150 * scale,\n                useNativeDriver: true,\n              })\n            )\n            .reverse()\n        ),\n      ]).start();\n    } else {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }),\n        ...animations.current.map((animation) =>\n          Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start();\n    }\n  }, [open, actions, backdrop, scale]);\n\n  const close = () => onStateChange({ open: false });\n\n  const toggle = () => onStateChange({ open: !open });\n\n  const { colors } = theme;\n\n  const labelColor = theme.dark\n    ? colors.text\n    : color(colors.text).fade(0.54).rgb().string();\n  const backdropOpacity = open\n    ? backdrop.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 1, 1],\n      })\n    : backdrop;\n\n  const opacities = animations.current;\n  const scales = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.8, 1],\n        })\n      : 1\n  );\n\n  if (actions.length !== prevActions?.length) {\n    animations.current = actions.map(\n      (_, i) => animations.current[i] || new Animated.Value(open ? 1 : 0)\n    );\n    setPrevActions(actions);\n  }\n\n  return (\n    <View pointerEvents=\"box-none\" style={[styles.container, style]}>\n      <TouchableWithoutFeedback onPress={close}>\n        <Animated.View\n          pointerEvents={open ? 'auto' : 'none'}\n          style={[\n            styles.backdrop,\n            {\n              opacity: backdropOpacity,\n              backgroundColor: backdropColor || colors.backdrop,\n            },\n          ]}\n        />\n      </TouchableWithoutFeedback>\n      <SafeAreaView pointerEvents=\"box-none\" style={styles.safeArea}>\n        <View pointerEvents={open ? 'box-none' : 'none'}>\n          {actions.map((it, i) => (\n            <View\n              key={i} // eslint-disable-line react/no-array-index-key\n              style={[\n                styles.item,\n                {\n                  marginHorizontal:\n                    typeof it.small === 'undefined' || it.small ? 24 : 16,\n                },\n              ]}\n              pointerEvents={open ? 'box-none' : 'none'}\n            >\n              {it.label && (\n                <View>\n                  <Card\n                    style={\n                      [\n                        styles.label,\n                        {\n                          transform: [{ scale: scales[i] }],\n                          opacity: opacities[i],\n                        },\n                        it.labelStyle,\n                      ] as StyleProp<ViewStyle>\n                    }\n                    onPress={() => {\n                      it.onPress();\n                      close();\n                    }}\n                    accessibilityLabel={\n                      it.accessibilityLabel !== 'undefined'\n                        ? it.accessibilityLabel\n                        : it.label\n                    }\n                    // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n                    accessibilityTraits=\"button\"\n                    accessibilityComponentType=\"button\"\n                    accessibilityRole=\"button\"\n                  >\n                    <Text style={{ color: it.labelTextColor ?? labelColor }}>\n                      {it.label}\n                    </Text>\n                  </Card>\n                </View>\n              )}\n              <FAB\n                small={typeof it.small !== 'undefined' ? it.small : true}\n                icon={it.icon}\n                color={it.color}\n                style={\n                  [\n                    {\n                      transform: [{ scale: scales[i] }],\n                      opacity: opacities[i],\n                      backgroundColor: theme.colors.surface,\n                    },\n                    it.style,\n                  ] as StyleProp<ViewStyle>\n                }\n                onPress={() => {\n                  it.onPress();\n                  close();\n                }}\n                accessibilityLabel={\n                  typeof it.accessibilityLabel !== 'undefined'\n                    ? it.accessibilityLabel\n                    : it.label\n                }\n                // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n                accessibilityTraits=\"button\"\n                accessibilityComponentType=\"button\"\n                accessibilityRole=\"button\"\n                testID={it.testID}\n                visible={open}\n              />\n            </View>\n          ))}\n        </View>\n        <FAB\n          onPress={() => {\n            onPress?.();\n            toggle();\n          }}\n          icon={icon}\n          color={colorProp}\n          accessibilityLabel={accessibilityLabel}\n          // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n          accessibilityTraits=\"button\"\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityState={{ expanded: open }}\n          style={[styles.fab, fabStyle]}\n          visible={visible}\n          testID={testID}\n        />\n      </SafeAreaView>\n    </View>\n  );\n};\n\nFABGroup.displayName = 'FAB.Group';\n\nexport default withTheme(FABGroup);\n\n// @component-docs ignore-next-line\nconst FABGroupWithTheme = withTheme(FABGroup);\n// @component-docs ignore-next-line\nexport { FABGroupWithTheme as FABGroup };\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end',\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end',\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0,\n  },\n  backdrop: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  label: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2,\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}