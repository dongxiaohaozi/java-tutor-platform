{"ast":null,"code":"var _jsxFileName = \"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/inheritance/Inheritance.jsx\";\nimport React from 'react';\nimport './inheritance.scss';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { far } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Inheritance = _ref => {\n  let {\n    submit\n  } = _ref;\n  const obj1 = ` public class Fruit{\n    protected String color\n }\n    \n public class Apple extends Fruit {\n    super.color = \"red\"\n }`;\n  const obj2 = `public class Fruit{\n    protected String color\n    public void variety() {\n        System.out.println(\"I am a fruit.\")\n    }\n}\npublic class App{\n    public static void main(String[] args) {\n         Apple apple = new Apple();\n         apple.variety()\n    }\n}`;\n  const obj3 = ` public class Fruit{\n    private String color;\n    public Fruit(String color) {\n       this.color = color\n    }\n}\n       \npublic class Apple extends Fruit {\n    public Apple() {\n        super(\"red\")\n    }\n  }`;\n\n  const Code = _ref2 => {\n    let {\n      children\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n      language: \"java\",\n      style: far,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widgets\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Inheritance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"When programming, we may want to define a class inheriting all the components from another class, then adding its own components. Foe example we could define a class Apple which inherits all the behaviours of the class Fruit. Or maybe we also want to define other class Banana, Strawberry inheriting class Fruit. In Java, we use subclass and superclass to handle this case. The Fruit is superclass, Apple is subclass.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"We can only define the superclass first, then when defining subclass, use keyword \\u201Cextends\\u201D to manifest it is a subclass of the superclass:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Because subclass automatically inherits all the properties of superclass, in the subclass we can directly use superclass's properties:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"code\",\n          children: /*#__PURE__*/_jsxDEV(Code, {\n            children: obj1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Besides, after we create the object of the subclass, we can also use those methods or attributes defined in the superclass:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"code\",\n          children: /*#__PURE__*/_jsxDEV(Code, {\n            children: obj2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Subclass can also use the constructor of the superclass. We use keyword \\u201Csuper\\u201D to call it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"code\",\n          children: /*#__PURE__*/_jsxDEV(Code, {\n            children: obj3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Notice:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), \" the superclass constructor must be called at the first line of the subclass constructor if we want to use it.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widgets\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"small-caption\",\n        children: \"Characteristics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"The inheritance is transitive, if A is the subclass of B, B is the subclass of C, then A is also the subclass of C.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"One class can only inherits directly one superclass.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Don't forget the difference between modifier \\\"protected\\\" and \\\"private\\\", if we define a private field in the superclass, we cannot assess it directly, we need to use the public getter or public constructor of the superclass. If we define a protected filed in the superclass, we then can get it directly in the subclass or by the object of the subclass.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Don't forget the function of modifier \\\"final\\\", if a class is defined as final type, it cannot be inherited.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Don't forget to use it when you code your program, it can promote the efficiency of development because we just need to define those common properties once.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widgets\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Exercise:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"exercise-title\",\n          children: \"There is a class Fruit defined just like above example. Define a class Banana as its subclass and make its objects' default color is yellow when initializing. Create a Banana object,output its color.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            submit(e);\n          },\n          id: \"question10\",\n          className: \"testbutton\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Inheritance;\nexport default Inheritance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Inheritance\");","map":{"version":3,"names":["React","SyntaxHighlighter","far","Inheritance","submit","obj1","obj2","obj3","Code","children","e"],"sources":["/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/inheritance/Inheritance.jsx"],"sourcesContent":["import React from 'react';\r\nimport './inheritance.scss';\r\nimport  SyntaxHighlighter  from 'react-syntax-highlighter';\r\nimport {far} from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nconst Inheritance = ({submit}) => {\r\n   \r\n    const obj1 = \r\n  ` public class Fruit{\r\n    protected String color\r\n }\r\n    \r\n public class Apple extends Fruit {\r\n    super.color = \"red\"\r\n }`\r\n  const obj2 =\r\n  `public class Fruit{\r\n    protected String color\r\n    public void variety() {\r\n        System.out.println(\"I am a fruit.\")\r\n    }\r\n}\r\npublic class App{\r\n    public static void main(String[] args) {\r\n         Apple apple = new Apple();\r\n         apple.variety()\r\n    }\r\n}`\r\nconst obj3 =\r\n  ` public class Fruit{\r\n    private String color;\r\n    public Fruit(String color) {\r\n       this.color = color\r\n    }\r\n}\r\n       \r\npublic class Apple extends Fruit {\r\n    public Apple() {\r\n        super(\"red\")\r\n    }\r\n  }`\r\n  const Code = ({ children }) => (\r\n    <SyntaxHighlighter language=\"java\" style={ far}>\r\n        { children }\r\n    </SyntaxHighlighter>\r\n  );\r\n  return (\r\n    <>\r\n               <div className=\"widgets\">\r\n                    \r\n                        \r\n                        <h1>Inheritance</h1>\r\n                        \r\n                        <p>When programming, we may want to define a class inheriting all the components from another class, then adding its own components. Foe example we could define a class Apple which inherits all the behaviours of the class Fruit. Or maybe we also want to define other class Banana, Strawberry inheriting class Fruit. In Java, we use subclass and superclass to handle this case.\r\n                           The Fruit is superclass, Apple is subclass. \r\n                        </p>\r\n                        <p>We can only define the superclass first, then when defining subclass, use keyword “extends” to manifest it is a subclass of the superclass:\r\n                        </p>\r\n                        <p>Because subclass automatically inherits all the properties of superclass, in the subclass we can directly use superclass's properties:\r\n                        </p>\r\n\r\n                        <div className = \"example\">\r\n                          <h3>Example</h3>\r\n                           <pre className = \"code\" >\r\n                              <Code>{obj1}</Code>\r\n                           </pre>\r\n                        </div>\r\n                        <p>\r\n                        Besides, after we create the object of the subclass, we can also use those methods or attributes defined in the superclass:\r\n                        </p>\r\n                        <div className = \"example\">\r\n                          <h3>Example</h3>\r\n                           <pre className = \"code\" >\r\n                              <Code>{obj2}</Code>\r\n                           </pre>\r\n                        </div>\r\n                        <p>\r\n                        Subclass can also use the constructor of the superclass. We use keyword “super” to call it.\r\n                        </p>\r\n                        <div className = \"example\">\r\n                          <h3>Example</h3>\r\n                           <pre className = \"code\" >\r\n                              <Code>{obj3}</Code>\r\n                           </pre>\r\n                        </div>\r\n                        <p>\r\n                        <strong>Notice:</strong> the superclass constructor must be called at the first line of the subclass constructor if we want to use it.\r\n                        </p>\r\n                    \r\n                 </div>\r\n                 <div className = \"widgets\">\r\n                    <h3 className = \"small-caption\">Characteristics</h3>\r\n                    <ul>\r\n                        <li>The inheritance is transitive, if A is the subclass of B, B is the subclass of C, then A is also the subclass of C.</li>\r\n                        <li>One class can only inherits directly one superclass.</li>\r\n                        <li>Don't forget the difference between modifier \"protected\" and \"private\", if we define a private field in the superclass, we cannot assess it directly, we need to use the public getter or public constructor of the superclass. If we define a protected filed in the superclass, we then can get it directly in the subclass or by the object of the subclass.</li>\r\n                        <li>Don't forget the function of modifier \"final\", if a class is defined as final type, it cannot be inherited.</li>\r\n                        <li>Don't forget to use it when you code your program, it can promote the efficiency of development because we just need to define those common properties once.</li>\r\n                    </ul>\r\n                 </div>\r\n\r\n\r\n                \r\n                <div className=\"widgets\">\r\n                \r\n                <h3>Exercise:</h3>\r\n                <div className = \"exercise-div\">\r\n                <p className = \"exercise-title\">\r\n                There is a class Fruit defined just like above example. Define a class Banana as its subclass and make its objects' default color is yellow when initializing. Create a Banana object,output its color.\r\n                </p>\r\n                <textarea id = \"input\" >\r\n\r\n                    \r\n                </textarea>\r\n                <button onClick = {(e) => {submit(e)}} id = \"question10\" className=\"testbutton\" >Submit</button>\r\n               </div>       \r\n            </div>\r\n\r\n\r\n            \r\n           </> \r\n        \r\n  )\r\n}\r\n\r\nexport default Inheritance"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAQC,iBAAR,MAAgC,0BAAhC;AACA,SAAQC,GAAR,QAAkB,+CAAlB;;;;AAEA,MAAMC,WAAW,GAAG,QAAc;EAAA,IAAb;IAACC;EAAD,CAAa;EAE9B,MAAMC,IAAI,GACX;AACH;AACA;AACA;AACA;AACA;AACA,GAPI;EAQF,MAAMC,IAAI,GACT;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAZE;EAaF,MAAMC,IAAI,GACP;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAZA;;EAaE,MAAMC,IAAI,GAAG;IAAA,IAAC;MAAEC;IAAF,CAAD;IAAA,oBACX,QAAC,iBAAD;MAAmB,QAAQ,EAAC,MAA5B;MAAmC,KAAK,EAAGP,GAA3C;MAAA,UACMO;IADN;MAAA;MAAA;MAAA;IAAA,QADW;EAAA,CAAb;;EAKA,oBACE;IAAA,wBACW;MAAK,SAAS,EAAC,SAAf;MAAA,wBAGS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHT,eAKS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALT,eAQS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QART,eAUS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVT,eAaS;QAAK,SAAS,EAAG,SAAjB;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEG;UAAK,SAAS,EAAG,MAAjB;UAAA,uBACG,QAAC,IAAD;YAAA,UAAOJ;UAAP;YAAA;YAAA;YAAA;UAAA;QADH;UAAA;UAAA;UAAA;QAAA,QAFH;MAAA;QAAA;QAAA;QAAA;MAAA,QAbT,eAmBS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAnBT,eAsBS;QAAK,SAAS,EAAG,SAAjB;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEG;UAAK,SAAS,EAAG,MAAjB;UAAA,uBACG,QAAC,IAAD;YAAA,UAAOC;UAAP;YAAA;YAAA;YAAA;UAAA;QADH;UAAA;UAAA;UAAA;QAAA,QAFH;MAAA;QAAA;QAAA;QAAA;MAAA,QAtBT,eA4BS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QA5BT,eA+BS;QAAK,SAAS,EAAG,SAAjB;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEG;UAAK,SAAS,EAAG,MAAjB;UAAA,uBACG,QAAC,IAAD;YAAA,UAAOC;UAAP;YAAA;YAAA;YAAA;UAAA;QADH;UAAA;UAAA;UAAA;QAAA,QAFH;MAAA;QAAA;QAAA;QAAA;MAAA,QA/BT,eAqCS;QAAA,wBACA;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADA;MAAA;QAAA;QAAA;QAAA;MAAA,QArCT;IAAA;MAAA;MAAA;MAAA;IAAA,QADX,eA2Ca;MAAK,SAAS,EAAG,SAAjB;MAAA,wBACG;QAAI,SAAS,EAAG,eAAhB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADH,eAEG;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ,eAII;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ,eAKI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFH;IAAA;MAAA;MAAA;MAAA;IAAA,QA3Cb,eAwDY;MAAK,SAAS,EAAC,SAAf;MAAA,wBAEA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFA,eAGA;QAAK,SAAS,EAAG,cAAjB;QAAA,wBACA;UAAG,SAAS,EAAG,gBAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADA,eAIA;UAAU,EAAE,EAAG;QAAf;UAAA;UAAA;UAAA;QAAA,QAJA,eAQA;UAAQ,OAAO,EAAKG,CAAD,IAAO;YAACN,MAAM,CAACM,CAAD,CAAN;UAAU,CAArC;UAAuC,EAAE,EAAG,YAA5C;UAAyD,SAAS,EAAC,YAAnE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QARA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHA;IAAA;MAAA;MAAA;MAAA;IAAA,QAxDZ;EAAA,gBADF;AA6ED,CAtHD;;KAAMP,W;AAwHN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}