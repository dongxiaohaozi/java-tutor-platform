{"ast":null,"code":"import { I18nManager } from 'react-native';\nexport const getCombinedStyles = _ref => {\n  let {\n    isAnimatedFromRight,\n    isIconStatic,\n    distance,\n    animFAB\n  } = _ref;\n  const {\n    isRTL\n  } = I18nManager;\n  const defaultPositionStyles = {\n    left: -distance,\n    right: undefined\n  };\n  const combinedStyles = {\n    innerWrapper: { ...defaultPositionStyles\n    },\n    iconWrapper: { ...defaultPositionStyles\n    },\n    absoluteFill: {}\n  };\n  const animatedFromRight = isAnimatedFromRight && !isRTL;\n  const animatedFromRightRTL = isAnimatedFromRight && isRTL;\n  const animatedFromLeft = !isAnimatedFromRight && !isRTL;\n  const animatedFromLeftRTL = !isAnimatedFromRight && isRTL;\n\n  if (animatedFromRight) {\n    combinedStyles.innerWrapper.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [distance, 0]\n      })\n    }];\n    combinedStyles.iconWrapper.transform = [{\n      translateX: isIconStatic ? 0 : animFAB\n    }];\n    combinedStyles.absoluteFill.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [Math.abs(distance) / 2, Math.abs(distance)]\n      })\n    }];\n  } else if (animatedFromRightRTL) {\n    combinedStyles.iconWrapper.transform = [{\n      translateX: isIconStatic ? 0 : animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [-distance, 0]\n      })\n    }];\n    combinedStyles.innerWrapper.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [-distance, 0]\n      })\n    }];\n    combinedStyles.absoluteFill.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [distance, 0],\n        outputRange: [0, distance]\n      })\n    }];\n  } else if (animatedFromLeft) {\n    combinedStyles.iconWrapper.transform = [{\n      translateX: isIconStatic ? distance : animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [distance, distance * 2]\n      })\n    }];\n    combinedStyles.innerWrapper.transform = [{\n      translateX: animFAB\n    }];\n    combinedStyles.absoluteFill.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [0, Math.abs(distance) / 2]\n      })\n    }];\n  } else if (animatedFromLeftRTL) {\n    combinedStyles.iconWrapper.transform = [{\n      translateX: isIconStatic ? animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [-distance, -distance * 2]\n      }) : -distance\n    }];\n    combinedStyles.innerWrapper.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [0, -distance]\n      })\n    }];\n    combinedStyles.absoluteFill.transform = [{\n      translateX: animFAB.interpolate({\n        inputRange: [0, distance],\n        outputRange: [0, -distance]\n      })\n    }];\n  }\n\n  return combinedStyles;\n};","map":{"version":3,"mappings":"AAAA,SAAmBA,WAAnB,QAAiD,cAAjD;AAeA,OAAO,MAAMC,iBAAiB,GAAGC,QAKa;EAAA,IALZ;IAChCC,mBADgC;IAEhCC,YAFgC;IAGhCC,QAHgC;IAIhCC;EAJgC,IAKYJ;EAC5C,MAAM;IAAEK;EAAF,IAAYP,WAAlB;EAEA,MAAMQ,qBAAqB,GAAG;IAAEC,IAAI,EAAE,CAACJ,QAAT;IAAmBK,KAAK,EAAEC;EAA1B,CAA9B;EAEA,MAAMC,cAA8B,GAAG;IACrCC,YAAY,EAAE,EACZ,GAAGL;IADS,CADuB;IAIrCM,WAAW,EAAE,EACX,GAAGN;IADQ,CAJwB;IAOrCO,YAAY,EAAE;EAPuB,CAAvC;EAUA,MAAMC,iBAAiB,GAAGb,mBAAmB,IAAI,CAACI,KAAlD;EACA,MAAMU,oBAAoB,GAAGd,mBAAmB,IAAII,KAApD;EACA,MAAMW,gBAAgB,GAAG,CAACf,mBAAD,IAAwB,CAACI,KAAlD;EACA,MAAMY,mBAAmB,GAAG,CAAChB,mBAAD,IAAwBI,KAApD;;EAEA,IAAIS,iBAAJ,EAAuB;IACrBJ,cAAc,CAACC,YAAfD,CAA4BQ,SAA5BR,GAAwC,CACtC;MACES,UAAU,EAAEf,OAAO,CAACgB,WAARhB,CAAoB;QAC9BiB,UAAU,EAAE,CAAClB,QAAD,EAAW,CAAX,CADkB;QAE9BmB,WAAW,EAAE,CAACnB,QAAD,EAAW,CAAX;MAFiB,CAApBC;IADd,CADsC,CAAxCM;IAQAA,cAAc,CAACE,WAAfF,CAA2BQ,SAA3BR,GAAuC,CACrC;MACES,UAAU,EAAEjB,YAAY,GAAG,CAAH,GAAOE;IADjC,CADqC,CAAvCM;IAKAA,cAAc,CAACG,YAAfH,CAA4BQ,SAA5BR,GAAwC,CACtC;MACES,UAAU,EAAEf,OAAO,CAACgB,WAARhB,CAAoB;QAC9BiB,UAAU,EAAE,CAAClB,QAAD,EAAW,CAAX,CADkB;QAE9BmB,WAAW,EAAE,CAACC,IAAI,CAACC,GAALD,CAASpB,QAAToB,IAAqB,CAAtB,EAAyBA,IAAI,CAACC,GAALD,CAASpB,QAAToB,CAAzB;MAFiB,CAApBnB;IADd,CADsC,CAAxCM;EAdF,OAsBO,IAAIK,oBAAJ,EAA0B;IAC/BL,cAAc,CAACE,WAAfF,CAA2BQ,SAA3BR,GAAuC,CACrC;MACES,UAAU,EAAEjB,YAAY,GACpB,CADoB,GAEpBE,OAAO,CAACgB,WAARhB,CAAoB;QAClBiB,UAAU,EAAE,CAAClB,QAAD,EAAW,CAAX,CADM;QAElBmB,WAAW,EAAE,CAAC,CAACnB,QAAF,EAAY,CAAZ;MAFK,CAApBC;IAHN,CADqC,CAAvCM;IAUAA,cAAc,CAACC,YAAfD,CAA4BQ,SAA5BR,GAAwC,CACtC;MACES,UAAU,EAAEf,OAAO,CAACgB,WAARhB,CAAoB;QAC9BiB,UAAU,EAAE,CAAClB,QAAD,EAAW,CAAX,CADkB;QAE9BmB,WAAW,EAAE,CAAC,CAACnB,QAAF,EAAY,CAAZ;MAFiB,CAApBC;IADd,CADsC,CAAxCM;IAQAA,cAAc,CAACG,YAAfH,CAA4BQ,SAA5BR,GAAwC,CACtC;MACES,UAAU,EAAEf,OAAO,CAACgB,WAARhB,CAAoB;QAC9BiB,UAAU,EAAE,CAAClB,QAAD,EAAW,CAAX,CADkB;QAE9BmB,WAAW,EAAE,CAAC,CAAD,EAAInB,QAAJ;MAFiB,CAApBC;IADd,CADsC,CAAxCM;EAnBK,OA2BA,IAAIM,gBAAJ,EAAsB;IAC3BN,cAAc,CAACE,WAAfF,CAA2BQ,SAA3BR,GAAuC,CACrC;MACES,UAAU,EAAEjB,YAAY,GACpBC,QADoB,GAEpBC,OAAO,CAACgB,WAARhB,CAAoB;QAClBiB,UAAU,EAAE,CAAC,CAAD,EAAIlB,QAAJ,CADM;QAElBmB,WAAW,EAAE,CAACnB,QAAD,EAAWA,QAAQ,GAAG,CAAtB;MAFK,CAApBC;IAHN,CADqC,CAAvCM;IAUAA,cAAc,CAACC,YAAfD,CAA4BQ,SAA5BR,GAAwC,CACtC;MACES,UAAU,EAAEf;IADd,CADsC,CAAxCM;IAKAA,cAAc,CAACG,YAAfH,CAA4BQ,SAA5BR,GAAwC,CACtC;MACES,UAAU,EAAEf,OAAO,CAACgB,WAARhB,CAAoB;QAC9BiB,UAAU,EAAE,CAAC,CAAD,EAAIlB,QAAJ,CADkB;QAE9BmB,WAAW,EAAE,CAAC,CAAD,EAAIC,IAAI,CAACC,GAALD,CAASpB,QAAToB,IAAqB,CAAzB;MAFiB,CAApBnB;IADd,CADsC,CAAxCM;EAhBK,OAwBA,IAAIO,mBAAJ,EAAyB;IAC9BP,cAAc,CAACE,WAAfF,CAA2BQ,SAA3BR,GAAuC,CACrC;MACES,UAAU,EAAEjB,YAAY,GACpBE,OAAO,CAACgB,WAARhB,CAAoB;QAClBiB,UAAU,EAAE,CAAC,CAAD,EAAIlB,QAAJ,CADM;QAElBmB,WAAW,EAAE,CAAC,CAACnB,QAAF,EAAY,CAACA,QAAD,GAAY,CAAxB;MAFK,CAApBC,CADoB,GAKpB,CAACD;IANP,CADqC,CAAvCO;IAUAA,cAAc,CAACC,YAAfD,CAA4BQ,SAA5BR,GAAwC,CACtC;MACES,UAAU,EAAEf,OAAO,CAACgB,WAARhB,CAAoB;QAC9BiB,UAAU,EAAE,CAAC,CAAD,EAAIlB,QAAJ,CADkB;QAE9BmB,WAAW,EAAE,CAAC,CAAD,EAAI,CAACnB,QAAL;MAFiB,CAApBC;IADd,CADsC,CAAxCM;IAQAA,cAAc,CAACG,YAAfH,CAA4BQ,SAA5BR,GAAwC,CACtC;MACES,UAAU,EAAEf,OAAO,CAACgB,WAARhB,CAAoB;QAC9BiB,UAAU,EAAE,CAAC,CAAD,EAAIlB,QAAJ,CADkB;QAE9BmB,WAAW,EAAE,CAAC,CAAD,EAAI,CAACnB,QAAL;MAFiB,CAApBC;IADd,CADsC,CAAxCM;EAQD;;EAED,OAAOA,cAAP;AA/HK","names":["I18nManager","getCombinedStyles","_ref","isAnimatedFromRight","isIconStatic","distance","animFAB","isRTL","defaultPositionStyles","left","right","undefined","combinedStyles","innerWrapper","iconWrapper","absoluteFill","animatedFromRight","animatedFromRightRTL","animatedFromLeft","animatedFromLeftRTL","transform","translateX","interpolate","inputRange","outputRange","Math","abs"],"sources":["/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/node_modules/react-native-paper/lib/module/components/FAB/AnimatedFAB/utils.ts"],"sourcesContent":["import { Animated, I18nManager, ViewStyle } from 'react-native';\n\ntype GetCombinedStylesProps = {\n  isAnimatedFromRight: boolean;\n  isIconStatic: boolean;\n  distance: number;\n  animFAB: Animated.Value;\n};\n\ntype CombinedStyles = {\n  innerWrapper: Animated.WithAnimatedValue<ViewStyle>;\n  iconWrapper: Animated.WithAnimatedValue<ViewStyle>;\n  absoluteFill: Animated.WithAnimatedValue<ViewStyle>;\n};\n\nexport const getCombinedStyles = ({\n  isAnimatedFromRight,\n  isIconStatic,\n  distance,\n  animFAB,\n}: GetCombinedStylesProps): CombinedStyles => {\n  const { isRTL } = I18nManager;\n\n  const defaultPositionStyles = { left: -distance, right: undefined };\n\n  const combinedStyles: CombinedStyles = {\n    innerWrapper: {\n      ...defaultPositionStyles,\n    },\n    iconWrapper: {\n      ...defaultPositionStyles,\n    },\n    absoluteFill: {},\n  };\n\n  const animatedFromRight = isAnimatedFromRight && !isRTL;\n  const animatedFromRightRTL = isAnimatedFromRight && isRTL;\n  const animatedFromLeft = !isAnimatedFromRight && !isRTL;\n  const animatedFromLeftRTL = !isAnimatedFromRight && isRTL;\n\n  if (animatedFromRight) {\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [distance, 0],\n        }),\n      },\n    ];\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic ? 0 : animFAB,\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [Math.abs(distance) / 2, Math.abs(distance)],\n        }),\n      },\n    ];\n  } else if (animatedFromRightRTL) {\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic\n          ? 0\n          : animFAB.interpolate({\n              inputRange: [distance, 0],\n              outputRange: [-distance, 0],\n            }),\n      },\n    ];\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [-distance, 0],\n        }),\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [0, distance],\n        }),\n      },\n    ];\n  } else if (animatedFromLeft) {\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic\n          ? distance\n          : animFAB.interpolate({\n              inputRange: [0, distance],\n              outputRange: [distance, distance * 2],\n            }),\n      },\n    ];\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB,\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [0, distance],\n          outputRange: [0, Math.abs(distance) / 2],\n        }),\n      },\n    ];\n  } else if (animatedFromLeftRTL) {\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic\n          ? animFAB.interpolate({\n              inputRange: [0, distance],\n              outputRange: [-distance, -distance * 2],\n            })\n          : -distance,\n      },\n    ];\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [0, distance],\n          outputRange: [0, -distance],\n        }),\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [0, distance],\n          outputRange: [0, -distance],\n        }),\n      },\n    ];\n  }\n\n  return combinedStyles;\n};\n"]},"metadata":{},"sourceType":"module"}