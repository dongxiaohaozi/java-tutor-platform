{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { StyleSheet, Text, Platform } from 'react-native';\nlet MaterialCommunityIcons;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons = require('react-native-vector-icons/MaterialCommunityIcons').default;\n} catch (e) {\n  let isErrorLogged = false; // Fallback component for icons\n\n  MaterialCommunityIcons = _ref => {\n    let {\n      name,\n      color,\n      size,\n      ...rest\n    } = _ref;\n    /* eslint-disable no-console */\n\n    if (!isErrorLogged) {\n      if (!/(Cannot find module|Module not found|Cannot resolve module)/.test(e.message)) {\n        console.error(e);\n      }\n\n      console.warn(`Tried to use the icon '${name}' in a component from 'react-native-paper', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`, `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.`);\n      isErrorLogged = true;\n    }\n\n    return /*#__PURE__*/React.createElement(Text, _extends({}, rest, {\n      style: [styles.icon, {\n        color,\n        fontSize: size\n      }] // @ts-expect-error: Text doesn't support this, but it seems to affect TouchableNativeFeedback\n      ,\n      pointerEvents: \"none\",\n      selectable: false\n    }), \"\\u25A1\");\n  };\n}\n\nexport const accessibilityProps = Platform.OS === 'web' ? {\n  role: 'img',\n  focusable: false\n} : {\n  accessibilityElementsHidden: true,\n  importantForAccessibility: 'no-hide-descendants'\n};\n\nconst defaultIcon = _ref2 => {\n  let {\n    name,\n    color,\n    size,\n    direction,\n    allowFontScaling\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(MaterialCommunityIcons, _extends({\n    allowFontScaling: allowFontScaling,\n    name: name,\n    color: color,\n    size: size,\n    style: [{\n      transform: [{\n        scaleX: direction === 'rtl' ? -1 : 1\n      }],\n      lineHeight: size\n    }, styles.icon],\n    pointerEvents: \"none\",\n    selectable: false\n  }, accessibilityProps));\n};\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent'\n  }\n});\nexport default defaultIcon;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,QAA3B,QAAiE,cAAjE;AAUA,IAAIC,sBAAJ;;AASA,IAAI;EACF;EACAA,sBAAsB,GACpBC,OAAO,CAAC,kDAAD,CAAPA,CAA4DC,OAD9DF;AAFF,EAIE,OAAOG,CAAP,EAAU;EACV,IAAIC,aAAa,GAAG,KAApB,CADU,CAGV;;EACAJ,sBAAsB,GAAGK,QAAoC;IAAA,IAAnC;MAAEC,IAAF;MAAQC,KAAR;MAAeC,IAAf;MAAqB,GAAGC;IAAxB,IAAmCJ;IAC3D;;IACA,IAAI,CAACD,aAAL,EAAoB;MAClB,IACE,CAAC,8DAA8DM,IAA9D,CACEP,CAAD,CAAWQ,OADZ,CADH,EAIE;QACAC,OAAO,CAACC,KAARD,CAAcT,CAAdS;MACD;;MAEDA,OAAO,CAACE,IAARF,CACG,0BAAyBN,IAAK,yHADjCM,EAEG,sKAFHA;MAKAR,aAAa,GAAG,IAAhBA;IACD;;IAED,oBACER,oBAACE,IAAD,eACMW,IADN;MAEEM,KAAK,EAAE,CAACC,MAAM,CAACC,IAAR,EAAc;QAAEV,KAAF;QAASW,QAAQ,EAAEV;MAAnB,CAAd,CAFT,CAGE;MAHF;MAIEW,aAAa,EAAC,MAJhB;MAKEC,UAAU,EAAE;IALd,aADF;EAnBF;AA+BD;;AAED,OAAO,MAAMC,kBAAkB,GAC7BtB,QAAQ,CAACuB,EAATvB,KAAgB,KAAhBA,GACI;EACEwB,IAAI,EAAE,KADR;EAEEC,SAAS,EAAE;AAFb,CADJzB,GAKI;EACE0B,2BAA2B,EAAE,IAD/B;EAEEC,yBAAyB,EACvB;AAHJ,CANC;;AAYP,MAAMC,WAAW,GAAGC;EAAA,IAAC;IACnBtB,IADmB;IAEnBC,KAFmB;IAGnBC,IAHmB;IAInBqB,SAJmB;IAKnBC;EALmB,IAADF;EAAA,oBAOlBhC,oBAACI,sBAAD;IACE8B,gBAAgB,EAAEA,gBADpB;IAEExB,IAAI,EAAEA,IAFR;IAGEC,KAAK,EAAEA,KAHT;IAIEC,IAAI,EAAEA,IAJR;IAKEO,KAAK,EAAE,CACL;MACEgB,SAAS,EAAE,CAAC;QAAEC,MAAM,EAAEH,SAAS,KAAK,KAAdA,GAAsB,CAAC,CAAvBA,GAA2B;MAArC,CAAD,CADb;MAEEI,UAAU,EAAEzB;IAFd,CADK,EAKLQ,MAAM,CAACC,IALF,CALT;IAYEE,aAAa,EAAC,MAZhB;IAaEC,UAAU,EAAE;EAbd,GAcMC,kBAdN,EAPkB;AAApB;;AAyBA,MAAML,MAAM,GAAGnB,UAAU,CAACqC,MAAXrC,CAAkB;EAC/BoB,IAAI,EAAE;IACJkB,eAAe,EAAE;EADb;AADyB,CAAlBtC,CAAf;AAMA,eAAe8B,WAAf","names":["React","StyleSheet","Text","Platform","MaterialCommunityIcons","require","default","e","isErrorLogged","_ref","name","color","size","rest","test","message","console","error","warn","style","styles","icon","fontSize","pointerEvents","selectable","accessibilityProps","OS","role","focusable","accessibilityElementsHidden","importantForAccessibility","defaultIcon","_ref2","direction","allowFontScaling","transform","scaleX","lineHeight","create","backgroundColor"],"sources":["/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/node_modules/react-native-paper/lib/module/components/MaterialCommunityIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, Platform, TextProps, ViewProps } from 'react-native';\n\nexport type IconProps = {\n  name: string;\n  color: string;\n  size: number;\n  direction: 'rtl' | 'ltr';\n  allowFontScaling?: boolean;\n};\n\nlet MaterialCommunityIcons: React.ComponentType<\n  TextProps & {\n    name: string;\n    color: string;\n    size: number;\n    pointerEvents?: ViewProps['pointerEvents'];\n  }\n>;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons =\n    require('react-native-vector-icons/MaterialCommunityIcons').default;\n} catch (e) {\n  let isErrorLogged = false;\n\n  // Fallback component for icons\n  MaterialCommunityIcons = ({ name, color, size, ...rest }) => {\n    /* eslint-disable no-console */\n    if (!isErrorLogged) {\n      if (\n        !/(Cannot find module|Module not found|Cannot resolve module)/.test(\n          (e as any).message\n        )\n      ) {\n        console.error(e);\n      }\n\n      console.warn(\n        `Tried to use the icon '${name}' in a component from 'react-native-paper', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`,\n        `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.`\n      );\n\n      isErrorLogged = true;\n    }\n\n    return (\n      <Text\n        {...rest}\n        style={[styles.icon, { color, fontSize: size }]}\n        // @ts-expect-error: Text doesn't support this, but it seems to affect TouchableNativeFeedback\n        pointerEvents=\"none\"\n        selectable={false}\n      >\n        â–¡\n      </Text>\n    );\n  };\n}\n\nexport const accessibilityProps =\n  Platform.OS === 'web'\n    ? {\n        role: 'img',\n        focusable: false,\n      }\n    : {\n        accessibilityElementsHidden: true,\n        importantForAccessibility:\n          'no-hide-descendants' as 'no-hide-descendants',\n      };\n\nconst defaultIcon = ({\n  name,\n  color,\n  size,\n  direction,\n  allowFontScaling,\n}: IconProps) => (\n  <MaterialCommunityIcons\n    allowFontScaling={allowFontScaling}\n    name={name}\n    color={color}\n    size={size}\n    style={[\n      {\n        transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\n        lineHeight: size,\n      },\n      styles.icon,\n    ]}\n    pointerEvents=\"none\"\n    selectable={false}\n    {...accessibilityProps}\n  />\n);\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default defaultIcon;\n"]},"metadata":{},"sourceType":"module"}