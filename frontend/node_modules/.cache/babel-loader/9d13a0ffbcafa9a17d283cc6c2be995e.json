{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\nimport getContrastingColor from '../../utils/getContrastingColor';\nconst defaultSize = 64;\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-text.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Text size={24} label=\"XD\" />\n * );\n * ```\n */\n\nconst AvatarText = _ref => {\n  let {\n    label,\n    size = defaultSize,\n    style,\n    theme,\n    labelStyle,\n    color: customColor,\n    ...rest\n  } = _ref;\n  const {\n    backgroundColor = theme.colors.primary,\n    ...restStyle\n  } = StyleSheet.flatten(style) || {};\n  const textColor = customColor !== null && customColor !== void 0 ? customColor : getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n  return /*#__PURE__*/React.createElement(View, _extends({\n    style: [{\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor\n    }, styles.container, restStyle]\n  }, rest), /*#__PURE__*/React.createElement(Text, {\n    style: [styles.text, {\n      color: textColor,\n      fontSize: size / 2,\n      lineHeight: size\n    }, labelStyle],\n    numberOfLines: 1\n  }, label));\n};\n\nAvatarText.displayName = 'Avatar.Text';\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    textAlign: 'center',\n    textAlignVertical: 'center'\n  }\n});\nexport default withTheme(AvatarText);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,IADF,EAGEC,UAHF,QAMO,cANP;AAOA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAOC,mBAAP,MAAgC,iCAAhC;AAEA,MAAMC,WAAW,GAAG,EAApB;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,UAAU,GAAGC,QAQN;EAAA,IARO;IAClBC,KADkB;IAElBC,IAAI,GAAGJ,WAFW;IAGlBK,KAHkB;IAIlBC,KAJkB;IAKlBC,UALkB;IAMlBC,KAAK,EAAEC,WANW;IAOlB,GAAGC;EAPe,IAQPR;EACX,MAAM;IAAES,eAAe,GAAGL,KAAK,CAACM,MAANN,CAAaO,OAAjC;IAA0C,GAAGC;EAA7C,IACJnB,UAAU,CAACoB,OAAXpB,CAAmBU,KAAnBV,KAA6B,EAD/B;EAEA,MAAMqB,SAAS,GACbP,WADa,SACbA,eADa,WACbA,iBACAV,mBAAmB,CAACY,eAAD,EAAkBb,KAAlB,EAAyB,oBAAzB,CAFrB;EAIA,oBACEL,oBAACC,IAAD;IACEW,KAAK,EAAE,CACL;MACEY,KAAK,EAAEb,IADT;MAEEc,MAAM,EAAEd,IAFV;MAGEe,YAAY,EAAEf,IAAI,GAAG,CAHvB;MAIEO;IAJF,CADK,EAOLS,MAAM,CAACC,SAPF,EAQLP,SARK;EADT,GAWMJ,IAXN,gBAaEjB,oBAACG,IAAD;IACES,KAAK,EAAE,CACLe,MAAM,CAACE,IADF,EAEL;MACEd,KAAK,EAAEQ,SADT;MAEEO,QAAQ,EAAEnB,IAAI,GAAG,CAFnB;MAGEoB,UAAU,EAAEpB;IAHd,CAFK,EAOLG,UAPK,CADT;IAUEkB,aAAa,EAAE;EAVjB,GAYGtB,KAZH,CAbF,CADF;AAfF;;AA+CAF,UAAU,CAACyB,WAAXzB,GAAyB,aAAzBA;AAEA,MAAMmB,MAAM,GAAGzB,UAAU,CAACgC,MAAXhC,CAAkB;EAC/B0B,SAAS,EAAE;IACTO,cAAc,EAAE,QADP;IAETC,UAAU,EAAE;EAFH,CADoB;EAK/BP,IAAI,EAAE;IACJQ,SAAS,EAAE,QADP;IAEJC,iBAAiB,EAAE;EAFf;AALyB,CAAlBpC,CAAf;AAWA,eAAeE,SAAS,CAACI,UAAD,CAAxB","names":["React","View","StyleSheet","Text","withTheme","white","getContrastingColor","defaultSize","AvatarText","_ref","label","size","style","theme","labelStyle","color","customColor","rest","backgroundColor","colors","primary","restStyle","flatten","textColor","width","height","borderRadius","styles","container","text","fontSize","lineHeight","numberOfLines","displayName","create","justifyContent","alignItems","textAlign","textAlignVertical"],"sources":["/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/node_modules/react-native-paper/lib/module/components/Avatar/AvatarText.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n} from 'react-native';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\nimport getContrastingColor from '../../utils/getContrastingColor';\n\nconst defaultSize = 64;\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Initials to show as the text in the `Avatar`.\n   */\n  label: string;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Style for text container\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the title.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-text.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Text size={24} label=\"XD\" />\n * );\n * ```\n */\nconst AvatarText = ({\n  label,\n  size = defaultSize,\n  style,\n  theme,\n  labelStyle,\n  color: customColor,\n  ...rest\n}: Props) => {\n  const { backgroundColor = theme.colors.primary, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor =\n    customColor ??\n    getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      <Text\n        style={[\n          styles.text,\n          {\n            color: textColor,\n            fontSize: size / 2,\n            lineHeight: size,\n          },\n          labelStyle,\n        ]}\n        numberOfLines={1}\n      >\n        {label}\n      </Text>\n    </View>\n  );\n};\n\nAvatarText.displayName = 'Avatar.Text';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    textAlign: 'center',\n    textAlignVertical: 'center',\n  },\n});\n\nexport default withTheme(AvatarText);\n"]},"metadata":{},"sourceType":"module"}