{"ast":null,"code":"import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport Icon, { isValidIcon, isEqualIcon } from './Icon';\nimport { withTheme } from '../core/theming';\n\nconst CrossFadeIcon = _ref => {\n  let {\n    color,\n    size,\n    source,\n    theme\n  } = _ref;\n  const [currentIcon, setCurrentIcon] = React.useState(() => source);\n  const [previousIcon, setPreviousIcon] = React.useState(null);\n  const {\n    current: fade\n  } = React.useRef(new Animated.Value(1));\n  const {\n    scale\n  } = theme.animation;\n\n  if (currentIcon !== source) {\n    setPreviousIcon(() => currentIcon);\n    setCurrentIcon(() => source);\n  }\n\n  React.useEffect(() => {\n    if (isValidIcon(previousIcon) && !isEqualIcon(previousIcon, currentIcon)) {\n      fade.setValue(1);\n      Animated.timing(fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [currentIcon, previousIcon, fade, scale]);\n  const opacityPrev = fade;\n  const opacityNext = previousIcon ? fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: [1, 0]\n  }) : 1;\n  const rotatePrev = fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['-90deg', '0deg']\n  });\n  const rotateNext = previousIcon ? fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '-180deg']\n  }) : '0deg';\n  return /*#__PURE__*/React.createElement(View, {\n    style: [styles.content, {\n      height: size,\n      width: size\n    }]\n  }, previousIcon ? /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.icon, {\n      opacity: opacityPrev,\n      transform: [{\n        rotate: rotatePrev\n      }]\n    }]\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: previousIcon,\n    size: size,\n    color: color\n  })) : null, /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.icon, {\n      opacity: opacityNext,\n      transform: [{\n        rotate: rotateNext\n      }]\n    }]\n  }, /*#__PURE__*/React.createElement(Icon, {\n    source: currentIcon,\n    size: size,\n    color: color\n  })));\n};\n\nexport default withTheme(CrossFadeIcon);\nconst styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"mappings":"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","names":["React","Animated","StyleSheet","View","Icon","isValidIcon","isEqualIcon","withTheme","CrossFadeIcon","_ref","color","size","source","theme","currentIcon","setCurrentIcon","useState","previousIcon","setPreviousIcon","current","fade","useRef","Value","scale","animation","useEffect","setValue","timing","duration","toValue","useNativeDriver","start","opacityPrev","opacityNext","interpolate","inputRange","outputRange","rotatePrev","rotateNext","style","styles","content","height","width","icon","opacity","transform","rotate","create","alignItems","justifyContent","position","top","left","right","bottom"],"sources":["/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/node_modules/react-native-paper/lib/module/components/CrossFadeIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport Icon, { isValidIcon, IconSource, isEqualIcon } from './Icon';\n\nimport { withTheme } from '../core/theming';\n\ntype Props = {\n  /**\n   * Icon to display for the `CrossFadeIcon`.\n   */\n  source: IconSource;\n  /**\n   * Color of the icon.\n   */\n  color: string;\n  /**\n   * Size of the icon.\n   */\n  size: number;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst CrossFadeIcon = ({ color, size, source, theme }: Props) => {\n  const [currentIcon, setCurrentIcon] = React.useState<IconSource>(\n    () => source\n  );\n  const [previousIcon, setPreviousIcon] = React.useState<IconSource | null>(\n    null\n  );\n  const { current: fade } = React.useRef<Animated.Value>(new Animated.Value(1));\n\n  const { scale } = theme.animation;\n\n  if (currentIcon !== source) {\n    setPreviousIcon(() => currentIcon);\n    setCurrentIcon(() => source);\n  }\n\n  React.useEffect(() => {\n    if (isValidIcon(previousIcon) && !isEqualIcon(previousIcon, currentIcon)) {\n      fade.setValue(1);\n\n      Animated.timing(fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [currentIcon, previousIcon, fade, scale]);\n\n  const opacityPrev = fade;\n  const opacityNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0],\n      })\n    : 1;\n\n  const rotatePrev = fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['-90deg', '0deg'],\n  });\n\n  const rotateNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '-180deg'],\n      })\n    : '0deg';\n\n  return (\n    <View\n      style={[\n        styles.content,\n        {\n          height: size,\n          width: size,\n        },\n      ]}\n    >\n      {previousIcon ? (\n        <Animated.View\n          style={[\n            styles.icon,\n            {\n              opacity: opacityPrev,\n              transform: [{ rotate: rotatePrev }],\n            },\n          ]}\n        >\n          <Icon source={previousIcon} size={size} color={color} />\n        </Animated.View>\n      ) : null}\n      <Animated.View\n        style={[\n          styles.icon,\n          {\n            opacity: opacityNext,\n            transform: [{ rotate: rotateNext }],\n          },\n        ]}\n      >\n        <Icon source={currentIcon} size={size} color={color} />\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default withTheme(CrossFadeIcon);\n\nconst styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}