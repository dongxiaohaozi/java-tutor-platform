{"ast":null,"code":"import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\nimport AnimatedText from '../../Typography/AnimatedText';\n\nconst LabelBackground = _ref => {\n  let {\n    parentState,\n    labelProps: {\n      placeholderStyle,\n      baseLabelTranslateX,\n      topPosition,\n      hasActiveOutline,\n      label,\n      backgroundColor,\n      roundness\n    },\n    labelStyle,\n    maxFontSizeMultiplier\n  } = _ref;\n  const hasFocus = hasActiveOutline || parentState.value;\n  const opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0]\n  });\n  const labelTranslationX = {\n    transform: [{\n      translateX: parentState.labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [-baseLabelTranslateX, 0]\n      })\n    }]\n  };\n  return label ? [/*#__PURE__*/React.createElement(Animated.View, {\n    key: \"labelBackground-view\",\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, styles.view, {\n      backgroundColor,\n      maxHeight: Math.max(roundness / 3, 2),\n      opacity,\n      bottom: Math.max(roundness, 2)\n    }, labelTranslationX]\n  }), /*#__PURE__*/React.createElement(AnimatedText, {\n    key: \"labelBackground-text\",\n    style: [placeholderStyle, labelStyle, styles.outlinedLabel, {\n      top: topPosition + 1,\n      backgroundColor,\n      opacity,\n      transform: [...labelStyle.transform, {\n        scaleY: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.2, 1]\n        })\n      }],\n      maxWidth: parentState.labelLayout.width - 2 * placeholderStyle.paddingHorizontal\n    }],\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, label)] : null;\n};\n\nexport default LabelBackground;\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent'\n  }\n});","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,cAArC;AAEA,OAAOC,YAAP,MAAyB,+BAAzB;;AAIA,MAAMC,eAAe,GAAGC,QAaI;EAAA,IAbH;IACvBC,WADuB;IAEvBC,UAAU,EAAE;MACVC,gBADU;MAEVC,mBAFU;MAGVC,WAHU;MAIVC,gBAJU;MAKVC,KALU;MAMVC,eANU;MAOVC;IAPU,CAFW;IAWvBC,UAXuB;IAYvBC;EAZuB,IAaGX;EAC1B,MAAMY,QAAQ,GAAGN,gBAAgB,IAAIL,WAAW,CAACY,KAAjD;EACA,MAAMC,OAAO,GAAGb,WAAW,CAACc,OAAZd,CAAoBe,WAApBf,CAAgC;IAC9CgB,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADkC;IAE9CC,WAAW,EAAE,CAACN,QAAQ,GAAG,CAAH,GAAO,CAAhB,EAAmB,CAAnB;EAFiC,CAAhCX,CAAhB;EAKA,MAAMkB,iBAAiB,GAAG;IACxBC,SAAS,EAAE,CACT;MACEC,UAAU,EAAEpB,WAAW,CAACc,OAAZd,CAAoBe,WAApBf,CAAgC;QAC1CgB,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD8B;QAE1CC,WAAW,EAAE,CAAC,CAACd,mBAAF,EAAuB,CAAvB;MAF6B,CAAhCH;IADd,CADS;EADa,CAA1B;EAWA,OAAOM,KAAK,GACR,cACEZ,oBAACC,QAAD,CAAU0B,IAAV;IACEC,GAAG,EAAC,sBADN;IAEEC,aAAa,EAAC,MAFhB;IAGEC,KAAK,EAAE,CACL5B,UAAU,CAAC6B,YADN,EAELC,MAAM,CAACC,IAFF,EAGL;MACEpB,eADF;MAEEqB,SAAS,EAAEC,IAAI,CAACC,GAALD,CAASrB,SAAS,GAAG,CAArBqB,EAAwB,CAAxBA,CAFb;MAGEhB,OAHF;MAIEkB,MAAM,EAAEF,IAAI,CAACC,GAALD,CAASrB,SAATqB,EAAoB,CAApBA;IAJV,CAHK,EASLX,iBATK;EAHT,EADF,eAgBExB,oBAACG,YAAD;IACEyB,GAAG,EAAC,sBADN;IAEEE,KAAK,EAAE,CACLtB,gBADK,EAELO,UAFK,EAGLiB,MAAM,CAACM,aAHF,EAIL;MACEC,GAAG,EAAE7B,WAAW,GAAG,CADrB;MAEEG,eAFF;MAGEM,OAHF;MAIEM,SAAS,EAAE,CACT,GAAGV,UAAU,CAACU,SADL,EAET;QACEe,MAAM,EAAElC,WAAW,CAACc,OAAZd,CAAoBe,WAApBf,CAAgC;UACtCgB,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD0B;UAEtCC,WAAW,EAAE,CAAC,GAAD,EAAM,CAAN;QAFyB,CAAhCjB;MADV,CAFS,CAJb;MAaEmC,QAAQ,EACNnC,WAAW,CAACoC,WAAZpC,CAAwBqC,KAAxBrC,GACA,IAAIE,gBAAgB,CAACoC;IAfzB,CAJK,CAFT;IAwBEC,aAAa,EAAE,CAxBjB;IAyBE7B,qBAAqB,EAAEA;EAzBzB,GA2BGJ,KA3BH,CAhBF,CADQ,GA+CR,IA/CJ;AA/BF;;AAiFA,eAAeR,eAAf;AAEA,MAAM4B,MAAM,GAAG9B,UAAU,CAAC4C,MAAX5C,CAAkB;EAC/B+B,IAAI,EAAE;IACJc,QAAQ,EAAE,UADN;IAEJR,GAAG,EAAE,CAFD;IAGJS,IAAI,EAAE,EAHF;IAIJL,KAAK,EAAE;EAJH,CADyB;EAO/BL,aAAa,EAAE;IACbS,QAAQ,EAAE,UADG;IAEbC,IAAI,EAAE,EAFO;IAGbJ,iBAAiB,EAAE,CAHN;IAIbK,KAAK,EAAE;EAJM;AAPgB,CAAlB/C,CAAf","names":["React","Animated","StyleSheet","AnimatedText","LabelBackground","_ref","parentState","labelProps","placeholderStyle","baseLabelTranslateX","topPosition","hasActiveOutline","label","backgroundColor","roundness","labelStyle","maxFontSizeMultiplier","hasFocus","value","opacity","labeled","interpolate","inputRange","outputRange","labelTranslationX","transform","translateX","View","key","pointerEvents","style","absoluteFill","styles","view","maxHeight","Math","max","bottom","outlinedLabel","top","scaleY","maxWidth","labelLayout","width","paddingHorizontal","numberOfLines","create","position","left","color"],"sources":["/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/node_modules/react-native-paper/lib/module/components/TextInput/Label/LabelBackground.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\n\nimport AnimatedText from '../../Typography/AnimatedText';\n\nimport type { LabelBackgroundProps } from '../types';\n\nconst LabelBackground = ({\n  parentState,\n  labelProps: {\n    placeholderStyle,\n    baseLabelTranslateX,\n    topPosition,\n    hasActiveOutline,\n    label,\n    backgroundColor,\n    roundness,\n  },\n  labelStyle,\n  maxFontSizeMultiplier,\n}: LabelBackgroundProps) => {\n  const hasFocus = hasActiveOutline || parentState.value;\n  const opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0],\n  });\n\n  const labelTranslationX = {\n    transform: [\n      {\n        translateX: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [-baseLabelTranslateX, 0],\n        }),\n      },\n    ],\n  };\n\n  return label\n    ? [\n        <Animated.View\n          key=\"labelBackground-view\"\n          pointerEvents=\"none\"\n          style={[\n            StyleSheet.absoluteFill,\n            styles.view,\n            {\n              backgroundColor,\n              maxHeight: Math.max(roundness / 3, 2),\n              opacity,\n              bottom: Math.max(roundness, 2),\n            },\n            labelTranslationX,\n          ]}\n        />,\n        <AnimatedText\n          key=\"labelBackground-text\"\n          style={[\n            placeholderStyle,\n            labelStyle,\n            styles.outlinedLabel,\n            {\n              top: topPosition + 1,\n              backgroundColor,\n              opacity,\n              transform: [\n                ...labelStyle.transform,\n                {\n                  scaleY: parentState.labeled.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0.2, 1],\n                  }),\n                },\n              ],\n              maxWidth:\n                parentState.labelLayout.width -\n                2 * placeholderStyle.paddingHorizontal,\n            },\n          ]}\n          numberOfLines={1}\n          maxFontSizeMultiplier={maxFontSizeMultiplier}\n        >\n          {label}\n        </AnimatedText>,\n      ]\n    : null;\n};\n\nexport default LabelBackground;\n\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12,\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}