{"ast":null,"code":"var _jsxFileName = \"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/exercise2/Exercise2.jsx\";\nimport './encapsulation.scss';\nimport React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { far } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport '../introduction/introduction.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Exercise2 = _ref => {\n  let {\n    submit\n  } = _ref;\n  //   function submit (e) {\n  //     e.preventDefault();\n  //     console.log(\"hh\")\n  //     let code = document.getElementById(\"input\").value;\n  //     let answerID = Number((e.target.id).replace (/[^0-9]+/g, '')); // eg: \"1stQuestion\" => 1\n  //     //let answerID = \"0\";\n  //     let data = { code: code };\n  //     fetch(`/code/${answerID}`, {\n  //       method: \"POST\",\n  //       headers: { \"Content-Type\": \"application/json\" },\n  //       body: JSON.stringify(data),\n  //     })\n  //       .then((res) => res.text())\n  //       .then((txt) => alert(txt));\n  //   }\n  const obj1 = ` public class Person {\n        int phoneNumber; \n        \n        public int getPhoneNumber() {\n          return phoneNumber;\n         }\n        \n        public void setPhoneNumber(int phoneNumber) {\n          this.phoneNumber = phoneNumber;\n        }\n  }`;\n  const obj2 = ` public int getPhoneNumber (boolean isEmployee) {\n    if (isEmployee) {\n        return height;\n    }\n  }`;\n  const obj3 = ` public void setPhoneNumber(int phoneNumber) {\n    String phoneStr = Integer.toString(phoneNumber);\n         if(phoneStr.length() == 12) {\n             this.phoneNumber = phoneNumber;\n        }\n  }`;\n  const inputdefault = `\n//enter your code here//\n  `;\n\n  const Code = _ref2 => {\n    let {\n      children\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n      language: \"java\",\n      style: far,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widgets\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Exercise2:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"exercise-title\",\n          children: \"Write a class Animal, which contains private properties name, age, and public method void showInfo() outputting the animal information. Add constructors to the Animal class. Create an instance of Animal, defining its name \\u201Cdog\\u201D and age \\u201C2\\u201D then output its information (don\\u2019t need to write the main method and class to run the codes, just run it directly).  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"input\",\n          defaultValue: inputdefault\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            submit(e);\n          },\n          id: \"question1\",\n          className: \"testbutton\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = Exercise2;\nexport default Exercise2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exercise2\");","map":{"version":3,"names":["React","SyntaxHighlighter","far","Exercise2","submit","obj1","obj2","obj3","inputdefault","Code","children","e"],"sources":["/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/exercise2/Exercise2.jsx"],"sourcesContent":["import './encapsulation.scss';\nimport React from 'react';\nimport  SyntaxHighlighter  from 'react-syntax-highlighter';\nimport {far} from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport '../introduction/introduction.scss'\nconst Exercise2 = ({submit}) => {\n\n//   function submit (e) {\n//     e.preventDefault();\n//     console.log(\"hh\")\n//     let code = document.getElementById(\"input\").value;\n//     let answerID = Number((e.target.id).replace (/[^0-9]+/g, '')); // eg: \"1stQuestion\" => 1\n//     //let answerID = \"0\";\n//     let data = { code: code };\n//     fetch(`/code/${answerID}`, {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(data),\n//     })\n//       .then((res) => res.text())\n//       .then((txt) => alert(txt));\n//   }\n\n\n\n    const obj1 = \n  ` public class Person {\n        int phoneNumber; \n        \n        public int getPhoneNumber() {\n          return phoneNumber;\n         }\n        \n        public void setPhoneNumber(int phoneNumber) {\n          this.phoneNumber = phoneNumber;\n        }\n  }`\n    const obj2 = \n  ` public int getPhoneNumber (boolean isEmployee) {\n    if (isEmployee) {\n        return height;\n    }\n  }`\n    \n  const obj3 = \n  ` public void setPhoneNumber(int phoneNumber) {\n    String phoneStr = Integer.toString(phoneNumber);\n         if(phoneStr.length() == 12) {\n             this.phoneNumber = phoneNumber;\n        }\n  }` \n  const inputdefault  = \n  `\n//enter your code here//\n  ` \n  const Code = ({ children }) => (\n    <SyntaxHighlighter language=\"java\" style={ far}>\n        { children }\n    </SyntaxHighlighter>\n  );\n    return (\n            <>\n            {/* <div className=\"widgets\">\n                <h1>Encapsulation</h1>\n                \n                <p>The objects' field value can not be seen and assessed directly by other objects, \n                    those fields are wrapped up into class, isolated with the outside codes, \n                    that's why it is called encapsulation. The only way to assess the field values is \n                    by calling two kinds of methods— setter and getter. </p>\n                    \n\n                    \n            \n               <p>The <strong>setter </strong>is for setting the value of the field, the <strong>getter </strong> is for getting their value. \n                In below example, getPhoneNumber is getter, setPhoneNumber is setter. Usually, \n                the getter directly returns the required value, the getter assigns the parameter's value to the field.</p>\n               <div className = \"example\">\n               <h3>Example</h3>\n               <pre className = \"code\" >\n                <Code>{obj1}</Code>\n               </pre>\n               </div> \n            </div>\n\n            <div className=\"widgets\">\n                <h3>So what's the benefits of the encapsulation? </h3>\n                <p>\n                It protects the data from unauthorized access, after learning the modifier section, \n                we have known the modifier Private restricts the variable and the function can not be \n                assessed and invoked from anywhere outside the class. If we make the field private, with the use of setter and getter, \n                then the field can only be assessed with setter and getter,\n                 we could add some logic verification before returning the value in the getter.\n                </p>\n                <div className = \"example\">\n                <h3>Example</h3>\n                <pre className = \"code\" >\n                <Code>{obj2}</Code>\n                </pre>\n                </div>\n                <p>\n                We can also set some logic in the setter to make the field value can only be \n                set if the value meets some conditions, in this way, we avoid the mistake people make to some degree.\n                </p> \n                <div className = \"example\">\n                <h3>Example</h3>\n                <pre className = \"code\" >\n                <Code>{obj3}</Code>\n                </pre>\n                </div>    \n            </div> */}\n\n            <div className=\"widgets\">\n                \n                <h3>Exercise2:</h3>\n                <div className = \"exercise-div\">\n                <p className = \"exercise-title\">Write a class Animal, which contains private properties name, age, and public method void showInfo() outputting the animal information. Add constructors to the Animal class. Create an instance of Animal, defining its name “dog” and age “2” then output its information (don’t need to write the main method and class to run the codes, just run it directly).  </p>\n                <textarea id = \"input\" defaultValue = {inputdefault}>\n\n                    \n                    </textarea>\n                <button onClick = {(e) => {submit(e)}} id = \"question1\" className=\"testbutton\" >Submit</button>\n                </div>   \n                    \n                    \n               \n            </div>\n        </>   \n\n  )\n  \n}\n\n\nexport default Exercise2"],"mappings":";AAAA,OAAO,sBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAQC,iBAAR,MAAgC,0BAAhC;AACA,SAAQC,GAAR,QAAkB,+CAAlB;AACA,OAAO,mCAAP;;;;AACA,MAAMC,SAAS,GAAG,QAAc;EAAA,IAAb;IAACC;EAAD,CAAa;EAEhC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAII,MAAMC,IAAI,GACX;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAXI;EAYA,MAAMC,IAAI,GACX;AACH;AACA;AACA;AACA,IALI;EAOF,MAAMC,IAAI,GACT;AACH;AACA;AACA;AACA;AACA,IANE;EAOA,MAAMC,YAAY,GACjB;AACH;AACA,GAHE;;EAIA,MAAMC,IAAI,GAAG;IAAA,IAAC;MAAEC;IAAF,CAAD;IAAA,oBACX,QAAC,iBAAD;MAAmB,QAAQ,EAAC,MAA5B;MAAmC,KAAK,EAAGR,GAA3C;MAAA,UACMQ;IADN;MAAA;MAAA;MAAA;IAAA,QADW;EAAA,CAAb;;EAKE,oBACQ;IAAA,uBAkDA;MAAK,SAAS,EAAC,SAAf;MAAA,wBAEI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAK,SAAS,EAAG,cAAjB;QAAA,wBACA;UAAG,SAAS,EAAG,gBAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADA,eAEA;UAAU,EAAE,EAAG,OAAf;UAAuB,YAAY,EAAIF;QAAvC;UAAA;UAAA;UAAA;QAAA,QAFA,eAMA;UAAQ,OAAO,EAAKG,CAAD,IAAO;YAACP,MAAM,CAACO,CAAD,CAAN;UAAU,CAArC;UAAuC,EAAE,EAAG,WAA5C;UAAwD,SAAS,EAAC,YAAlE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QANA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAlDA,iBADR;AAsEH,CA7HD;;KAAMR,S;AAgIN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}