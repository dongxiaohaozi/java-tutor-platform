{"ast":null,"code":"var _jsxFileName = \"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/constructor/Constructor.jsx\";\nimport React from 'react';\nimport './constructor.scss';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { far } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Constructor = _ref => {\n  let {\n    submit\n  } = _ref;\n  const obj1 = ` public class SecondHandCar{\n      String brand;\n      double KilometerTraveled;\n      int id;\n      public SecondHandCar(String brand, double KilometerTraveled, int id) {\n      this.brand = brand;\n      this.KilometerTraveled = KilometerTraveled;\n      this.id = id\n      }\n    }\n    SecondHandCar car1 = new SecondHandCar(\"VW\", 1000.0, 0001)`;\n  const obj2 = ` public SecondHandCar(String brand, double KilometerTraveled, int id) {\n        this.brand = brand;\n        this.KilometerTraveled = KilometerTraveled;\n        this.id = id\n    }\n    \n    public SecondHandCar(String brand, double KilometerTraveled) {\n        this(brand, 0, ++nextId);\n    }\n    // nextId has value, its initial value is 0000, is incremented by 1 every time a object created\n    public SecondHandCar () {\n        this(\"notknown\",0.0, ++nextId );\n    }\n    SecondHandCar car1 = new SecondHandCar(\"VW\", 1000.0, 0001)\n    SecondHandCar car1 = new SecondHandCar(\"VW\", 1000.0)\n    SecondHandCar car1 = new SecondHandCar()\n   `;\n  const obj3 = ` public SecondHandCar() {\n    this.brand = null;\n    this.KilometerTraveled = 0.0;\n    this.id = 0;\n  }`;\n\n  const Code = _ref2 => {\n    let {\n      children\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n      language: \"java\",\n      style: far,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widgets\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Constructor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Usually, different object of same class has different attribute values, such as a class of second-hand car, every instance of this class represents a car with different vales for brand, fuel consumption per kilometer, and kilometers traveled. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 55\n        }, this), \"A Constructor is a special method, it serves for the initialization of an object. Sometimes, we want to construct an object with some determined field value, we want to just make sure these values when initializing the object. At this time, we use constructor. Constructor is defined inside the class, its name is same as the class name (its initial letter is also uppercase), it is automatically called when we create new object, just like passing parameter to a method, we put our desired attribute value of this object into the braces of initialization statement.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"code\",\n          children: /*#__PURE__*/_jsxDEV(Code, {\n            children: obj1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widgets\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A class can contain multiple constructors with different parameters, the constuctor called is determined by its parameters, java will match the constructor with same format of argument when creating the object.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"When we define the constructors in the same class, we may use keyword \\u201Cthis\\u201D to mention the constructor already defined.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"code\",\n          children: /*#__PURE__*/_jsxDEV(Code, {\n            children: obj2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"If we do not define the constructor, the compiler will define one default constructor, which initialized the object with the default attribute values. A default constructor is equivalent to this:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"example\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"code\",\n          children: /*#__PURE__*/_jsxDEV(Code, {\n            children: obj3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widgets\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Exercise:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"exercise-title\",\n          children: \"There is a class named People, it contains an attribute named \\u201Ccountry\\u201D, create an instance of People class, initialize its \\u201Ccountry\\u201D value as \\u201CBritish\\u201D,then output this object's country value.(A:British)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            submit(e);\n          },\n          id: \"question4\",\n          className: \"testbutton\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Constructor;\nexport default Constructor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Constructor\");","map":{"version":3,"names":["React","SyntaxHighlighter","far","Constructor","submit","obj1","obj2","obj3","Code","children","e"],"sources":["/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/constructor/Constructor.jsx"],"sourcesContent":["import React from 'react'\r\nimport './constructor.scss'\r\nimport  SyntaxHighlighter  from 'react-syntax-highlighter';\r\nimport {far} from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\nconst Constructor = ({submit}) => {\r\n   \r\n    const obj1 = \r\n  ` public class SecondHandCar{\r\n      String brand;\r\n      double KilometerTraveled;\r\n      int id;\r\n      public SecondHandCar(String brand, double KilometerTraveled, int id) {\r\n      this.brand = brand;\r\n      this.KilometerTraveled = KilometerTraveled;\r\n      this.id = id\r\n      }\r\n    }\r\n    SecondHandCar car1 = new SecondHandCar(\"VW\", 1000.0, 0001)`\r\n    const obj2 =\r\n  ` public SecondHandCar(String brand, double KilometerTraveled, int id) {\r\n        this.brand = brand;\r\n        this.KilometerTraveled = KilometerTraveled;\r\n        this.id = id\r\n    }\r\n    \r\n    public SecondHandCar(String brand, double KilometerTraveled) {\r\n        this(brand, 0, ++nextId);\r\n    }\r\n    // nextId has value, its initial value is 0000, is incremented by 1 every time a object created\r\n    public SecondHandCar () {\r\n        this(\"notknown\",0.0, ++nextId );\r\n    }\r\n    SecondHandCar car1 = new SecondHandCar(\"VW\", 1000.0, 0001)\r\n    SecondHandCar car1 = new SecondHandCar(\"VW\", 1000.0)\r\n    SecondHandCar car1 = new SecondHandCar()\r\n   `\r\n   const obj3 = \r\n  ` public SecondHandCar() {\r\n    this.brand = null;\r\n    this.KilometerTraveled = 0.0;\r\n    this.id = 0;\r\n  }`\r\n  const Code = ({ children }) => (\r\n    <SyntaxHighlighter language=\"java\" style={ far}>\r\n        { children }\r\n    </SyntaxHighlighter>\r\n  );\r\n   \r\n  return (\r\n\r\n    <>\r\n                <div className=\"widgets\">\r\n                    \r\n                        \r\n                        <h1>Constructor</h1>\r\n                        \r\n                        <p>Usually, different object of same class has different attribute values, such as a class of second-hand car,\r\n                             every instance of this class represents a car with different vales for brand, fuel consumption per kilometer, \r\n                             and kilometers traveled. <br/>\r\n\r\n                            A Constructor is a special method, it serves for the initialization of an object. Sometimes, we want to construct\r\n                             an object with some determined field value, we want to just make sure these values when initializing the object. \r\n                             At this time, we use constructor. Constructor is defined inside the class, its name is same as the class name (its initial letter is also uppercase), it is \r\n                            automatically called when we create new object, just like passing parameter to a method, we put our desired attribute \r\n                            value of this object into the braces of initialization statement.\r\n                        </p>\r\n\r\n                        <div className = \"example\">\r\n                          <h3>Example</h3>\r\n                           <pre className = \"code\" >\r\n                              <Code>{obj1}</Code>\r\n                           </pre>\r\n                        </div>\r\n                    \r\n                 </div>\r\n\r\n\r\n                <div className=\"widgets\">\r\n              \r\n                    \r\n                {/* <p>Before we mentioned setter, what's the difference of setter and constructor? Setter has to be called, for constructor, \r\n                    when create an object, constructor is invoked automatically, constructor is more convenient when assign values of object attributes, \r\n                    but it cannot alter or change the values of this object attributes.</p> */}\r\n\r\n               <p>A class can contain multiple constructors with different parameters, the constuctor called is determined by its parameters, java will match the constructor with same format of argument when creating \r\n               the object.</p>\r\n\r\n               <p>When we define the constructors in the same class, we may use keyword “this” to mention the constructor already defined.\r\n                </p>\r\n\r\n                <div className = \"example\">\r\n                          <h3>Example</h3>\r\n                           <pre className = \"code\" >\r\n                              <Code>{obj2}</Code>\r\n                           </pre>\r\n                </div>\r\n\t                      \r\n                <p>\r\n                If we do not define the constructor, the compiler will define one default constructor, which initialized the object with the default attribute values. \r\n                A default constructor is equivalent to this:\r\n                </p>  \r\n\r\n                <div className = \"example\">\r\n                          <h3>Example</h3>\r\n                           <pre className = \"code\" >\r\n                              <Code>{obj3}</Code>\r\n                           </pre>\r\n                </div>\r\n\r\n                </div>\r\n                \r\n                <div className=\"widgets\">\r\n                \r\n                <h3>Exercise:</h3>\r\n                <div className = \"exercise-div\">\r\n                <p className = \"exercise-title\">\r\n                There is a class named People, it contains an attribute named “country”, \r\n                create an instance of People class, \r\n                initialize its “country” value as “British”,then output this object's country value.(A:British) \r\n                </p>\r\n                <textarea id = \"input\" >\r\n\r\n                    \r\n                </textarea>\r\n                <button onClick = {(e) => {submit(e)}} id = \"question4\" className=\"testbutton\" >Submit</button>\r\n               </div>       \r\n            </div>\r\n\r\n\r\n            \r\n           </> \r\n        \r\n  )\r\n}\r\n\r\nexport default Constructor"],"mappings":"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"},"metadata":{},"sourceType":"module"}