{"ast":null,"code":"var _jsxFileName = \"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/array/Array.jsx\",\n    _this = this;\n\nimport './array.scss';\nimport React from 'react';\nimport p1 from './p1.jpg';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { far } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Array = _ref => {\n  let {\n    submit\n  } = _ref;\n  return function (submit) {\n    function submit(e) {\n      console.log(\"hh\");\n      let code = document.getElementById(\"input\").value;\n      let answerID = Number(e.target.id.replace(/[^0-9]+/g, '')); // eg: \"1stQuestion\" => 1\n\n      console.log(answerID);\n      let data = {\n        code: code\n      };\n      fetch('/code/0', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.text()).then(txt => alert(txt));\n    }\n\n    const obj1 = `int[] myFirstArray`;\n    const obj2 = `int[] myFirstArray = new int[10]`;\n    const obj3 = `int[] myFirstArray = {1,2,3,4,5}`;\n    const obj4 = `int[] myFirstArray = {1,2,3,4,5}\nSystem.out.prinln(myFirstArray[0])// print 1`;\n    const obj5 = `int[] myFirstArray = {1,2,3,4,5}`;\n    const obj6 = `int[] myFirstArray = {1,2,3,4,5}\nint[] mySecondArray = myFirstArray\nmyFirstArray[0] = -1\nSystem.out.println(mySecondArray[0])`;\n    const obj7 = `int[][] chessBoard = new int[10][10]`;\n    const obj9 = `String[] arr = {\"I\", \"am\", \"an\", \"Array\"};\nfor (int i = 0; i < cars.length; i++) {\n    System.out.println(arr[i]);\n  } \nfor (String i : arr) {\n    System.out.println(i);\n  }`;\n    const obj8 = `int i = 0; i < cars.length; i++`;\n\n    const Code = _ref2 => {\n      let {\n        children\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n        language: \"java\",\n        style: far,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, _this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widgets\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Array\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Array is a collection of values/objects of the same type/class. Array is defined like following: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"example\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Example\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 16\n          }, _this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"code\",\n            children: /*#__PURE__*/_jsxDEV(Code, {\n              children: obj1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 16\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 16\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"In front of the square brackets, we need to illustrate the type of elements in the array, then followed by the array name. Usually, we bind the declaration with the initialization of array into one statement:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 16\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"example\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Example\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 16\n          }, _this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"code\",\n            children: /*#__PURE__*/_jsxDEV(Code, {\n              children: obj2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 16\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 16\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widgets\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Similar to the initialization of object, we use the keyword new to remind the compiler allocate memory to the initialized array. But one difference with object is we have to fill in a number in the square brackets, it represents the length of the array. Besides, if we want to get the length of an array, we just use myFirstArray.length rather than myFirstArray.length(). length()  is a method for string, length is a field for the array.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"If we want to assign values to elements of array, we can code like this:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 18\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"example\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Example\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 18\n          }, _this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"code\",\n            children: /*#__PURE__*/_jsxDEV(Code, {\n              children: obj3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 18\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 18\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 18\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"All array elements' value is set to be the default value, which is 0 for the primitive variables, null for reference variables, false for the Boolean variables.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Array elements are assessed by their index, this index begins at 0, and added 1 successively from left to right:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"example\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Example\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 18\n          }, _this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"code\",\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: obj4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 18\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 18\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widgets\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Array is reference variable, which means the variable itself does not store the value in the memory, it references another object in the memory.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"example\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Example\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 18\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"code\",\n            children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n              children: /*#__PURE__*/_jsxDEV(Code, {\n                children: obj5\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 20\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 20\n            }, _this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: /*#__PURE__*/_jsxDEV(Code, {\n                children: obj6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 20\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 20\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 18\n          }, _this), /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: \"30%\",\n              height: \"30%\"\n            },\n            src: p1,\n            alt: \"arrayReferencing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 18\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Above codes' output will be -1, because when make mySecondArray = myFirstArray, it actually makes mySecondArray reference the object the myFirstArray references, two arrays reference the same object, when the element value of myFirstArray is changed, the referenced value also changed, making the mySecondArray's reference value changed.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widgets\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"A 2D array means an array with each element being a array, it is declared and initialized like this :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"example\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Example\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 18\n          }, _this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"code\",\n            children: /*#__PURE__*/_jsxDEV(Code, {\n              children: obj7\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 18\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 18\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"we can locate the grid in the second line and the fifth column by chessboard[1][4].\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widgets\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"In Java, if we want to loop through an array, besides using the traditional \", /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: obj8\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 98\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 93\n          }, _this), \"statement to access element by index, we can also use a more convenient way:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"example\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Example\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 18\n          }, _this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"code\",\n            children: /*#__PURE__*/_jsxDEV(Code, {\n              children: obj9\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 18\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 18\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widgets\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Exercise:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exercise-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"exercise-title\",\n            children: \"Create an array including 1-5, output every element of this array.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              submit(e);\n            },\n            id: \"1\",\n            className: \"testbutton\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true);\n  }(submit);\n};\n\n_c = Array;\nexport default Array;\n\nvar _c;\n\n$RefreshReg$(_c, \"Array\");","map":{"version":3,"names":["React","p1","SyntaxHighlighter","far","Array","submit","e","console","log","code","document","getElementById","value","answerID","Number","target","id","replace","data","fetch","method","headers","body","JSON","stringify","then","res","text","txt","alert","obj1","obj2","obj3","obj4","obj5","obj6","obj7","obj9","obj8","Code","children","width","height"],"sources":["/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/array/Array.jsx"],"sourcesContent":["import './array.scss';\r\nimport React from 'react';\r\nimport p1 from './p1.jpg';\r\nimport  SyntaxHighlighter  from 'react-syntax-highlighter';\r\nimport {far} from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nconst Array = ({submit}) => {\r\n\r\n  function submit (e) {\r\n    console.log(\"hh\")\r\n    let code = document.getElementById(\"input\").value;\r\n    let answerID = Number((e.target.id).replace (/[^0-9]+/g, '')); // eg: \"1stQuestion\" => 1\r\nconsole.log(answerID);\r\n let data = { code: code };\r\n    fetch('/code/0', {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => res.text())\r\n      .then((txt) => alert(txt));\r\n  }\r\n\r\n  const obj1 = \r\n  `int[] myFirstArray`\r\n        \r\n  const obj2 = \r\n  `int[] myFirstArray = new int[10]`\r\n    \r\n  const obj3 = \r\n  `int[] myFirstArray = {1,2,3,4,5}` ;\r\n  const obj4 = \r\n  `int[] myFirstArray = {1,2,3,4,5}\r\nSystem.out.prinln(myFirstArray[0])// print 1`\r\n  const obj5 =\r\n  `int[] myFirstArray = {1,2,3,4,5}`\r\n  const obj6 =\r\n  `int[] myFirstArray = {1,2,3,4,5}\r\nint[] mySecondArray = myFirstArray\r\nmyFirstArray[0] = -1\r\nSystem.out.println(mySecondArray[0])`\r\n  const obj7 =\r\n  `int[][] chessBoard = new int[10][10]`\r\n\r\n  const obj9 =\r\n  `String[] arr = {\"I\", \"am\", \"an\", \"Array\"};\r\nfor (int i = 0; i < cars.length; i++) {\r\n    System.out.println(arr[i]);\r\n  } \r\nfor (String i : arr) {\r\n    System.out.println(i);\r\n  }`\r\n\r\n  const obj8 =\r\n  `int i = 0; i < cars.length; i++`\r\n\r\n  const Code = ({ children }) => (\r\n    <SyntaxHighlighter language=\"java\" style={ far}>\r\n        { children }\r\n    </SyntaxHighlighter>\r\n);\r\n    return (\r\n            <>\r\n            <div className=\"widgets\">\r\n                <h1>Array</h1>\r\n                \r\n                <p>Array is a collection of values/objects of the same type/class. Array is defined like following: </p>\r\n                    \r\n               <div className = \"example\">\r\n               <h3>Example</h3>\r\n               <pre className = \"code\">\r\n                <Code>{obj1}</Code>\r\n               </pre>\r\n               {/* <Highlight language={java}>{obj1}</Highlight> */}\r\n               </div>\r\n               <p>In front of the square brackets, we need to illustrate the type of elements in the array, then followed by the array name. \r\n                Usually, we bind the declaration with the initialization of array into one statement:</p> \r\n\r\n               <div className = \"example\">\r\n               <h3>Example</h3>\r\n               <pre className = \"code\" >\r\n                <Code>{obj2}</Code>\r\n               </pre>\r\n               </div>    \r\n            </div>\r\n\r\n            <div className=\"widgets\">\r\n                <p>\r\n                Similar to the initialization of object, we use the keyword new to remind the compiler allocate memory to the initialized array.\r\n                 But one difference with object is we have to fill in a number in the square brackets, it represents the length of the array. \r\n                 Besides, if we want to get the length of an array, we just use myFirstArray.length rather than myFirstArray.length(). \r\n                 length()  is a method for string, length is a field for the array. \r\n                 </p>\r\n                 <p>\r\n                 If we want to assign values to elements of array, we can code like this:\r\n                 </p>\r\n\r\n\r\n                 <div className = \"example\">\r\n                 <h3>Example</h3>\r\n                 <pre className = \"code\" >\r\n                 <Code>{obj3}</Code>\r\n                 </pre>\r\n                 </div> \r\n                <p>\r\n                All array elements' value is set to be the default value, which is 0 for the primitive variables, \r\n                null for reference variables, false for the Boolean variables. \r\n                </p>\r\n                <p>\r\n                Array elements are assessed by their index, this index begins at 0, and added 1 successively from left to right:\r\n                </p>\r\n                <div className = \"example\">\r\n                 <h3>Example</h3>\r\n                 \r\n                 <pre className = \"code\">\r\n                 <code>{obj4}</code>\r\n                 </pre>\r\n                \r\n                </div>\r\n             </div>\r\n\r\n            <div className=\"widgets\">\r\n            <p>\r\n            Array is reference variable, which means the variable itself does not store the value in the memory, \r\n            it references another object in the memory. \r\n            </p>\r\n            <div className = \"example\">\r\n                 <h3>Example</h3>\r\n                 <div className = \"code\">\r\n                   <pre>\r\n                   <Code>{obj5}</Code>\r\n                   </pre>\r\n                   \r\n                   <pre>\r\n                   <Code>{obj6}</Code>\r\n                   </pre>\r\n\r\n                 </div> \r\n                 <img style = {{width: \"30%\",height:\"30%\"}} src={p1} alt=\"arrayReferencing\"></img>\r\n            </div>\r\n            <p>\r\n            Above codes' output will be -1, because when make mySecondArray = myFirstArray, it actually makes mySecondArray reference the object the myFirstArray references, two arrays reference the same object, when the element value of myFirstArray is changed, \r\n            the referenced value also changed, making the mySecondArray's reference value changed.\r\n            </p>\r\n            </div>\r\n            \r\n\r\n            <div className=\"widgets\">\r\n            <p>\r\n            A 2D array means an array with each element being a array, it is declared and initialized like this :\r\n            </p>\r\n            <div className = \"example\">\r\n                 <h3>Example</h3>\r\n                 \r\n                 <pre className = \"code\">\r\n                 <Code>{obj7}</Code>\r\n                 </pre>\r\n                \r\n            </div>\r\n            <p>we can locate the grid in the second line and the fifth column by chessboard[1][4].</p>\r\n            </div>\r\n            <div className=\"widgets\">\r\n                <p>\r\n                In Java, if we want to loop through an array, besides using the traditional <pre><code>{obj8}</code></pre>\r\n                statement to access element by index, we can also use a more convenient way:\r\n                </p>\r\n                <div className = \"example\">\r\n                 <h3>Example</h3>\r\n                 \r\n                 <pre className = \"code\">\r\n                 <Code>{obj9}</Code>\r\n                 </pre>\r\n                \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"widgets\">\r\n                \r\n                <h3>Exercise:</h3>\r\n                <div className = \"exercise-div\">\r\n                <p className = \"exercise-title\">Create an array including 1-5, output every element of this array.</p>\r\n                <textarea id = \"input\" >\r\n\r\n                    \r\n                </textarea>\r\n                <button onClick = {(e) => {submit(e)}} id = \"1\" className=\"testbutton\" >Submit</button>\r\n               </div>       \r\n            </div>\r\n        </>   \r\n\r\n  )\r\n  \r\n}\r\n\r\n\r\nexport default Array"],"mappings":"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"},"metadata":{},"sourceType":"module"}