{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { Text as NativeText, StyleSheet } from 'react-native';\nimport { withTheme } from '../../core/theming'; // @component-group Typography\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\n\nconst Text = (_ref, ref) => {\n  let {\n    style,\n    theme,\n    ...rest\n  } = _ref;\n  const root = React.useRef(null);\n  React.useImperativeHandle(ref, () => ({\n    setNativeProps: args => {\n      var _root$current;\n\n      return (_root$current = root.current) === null || _root$current === void 0 ? void 0 : _root$current.setNativeProps(args);\n    }\n  }));\n  return /*#__PURE__*/React.createElement(NativeText, _extends({}, rest, {\n    ref: root,\n    style: [{ ...theme.fonts.regular,\n      color: theme.colors.text\n    }, styles.text, style]\n  }));\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left'\n  }\n});\nexport default withTheme( /*#__PURE__*/React.forwardRef(Text));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,IAAI,IAAIC,UADV,EAIEC,UAJF,QAKO,cALP;AAMA,SAASC,SAAT,QAA0B,oBAA1B,C,CAUA;;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMH,IAA6C,GAAG,OAEpDI,GAFoD,KAGjD;EAAA,IAFH;IAAEC,KAAF;IAASC,KAAT;IAAgB,GAAGC;EAAnB,IAEGC;EACH,MAAMC,IAAI,GAAGV,KAAK,CAACW,MAANX,CAAgC,IAAhCA,CAAb;EAEAA,KAAK,CAACY,mBAANZ,CAA0BK,GAA1BL,EAA+B,OAAO;IACpCa,cAAc,EAAGC,IAAD;MAAA;;MAAA,wBAAkBJ,IAAI,CAACK,OAAvB,kDAAkBC,cAAcH,cAAd,CAA6BC,IAA7B,CAAlB;IAAA;EADoB,CAAP,CAA/Bd;EAIA,oBACEA,oBAACE,UAAD,eACMM,IADN;IAEEH,GAAG,EAAEK,IAFP;IAGEJ,KAAK,EAAE,CACL,EACE,GAAGC,KAAK,CAACU,KAANV,CAAYW,OADjB;MAEEC,KAAK,EAAEZ,KAAK,CAACa,MAANb,CAAac;IAFtB,CADK,EAKLC,MAAM,CAACD,IALF,EAMLf,KANK;EAHT,GADF;AAVF;;AA0BA,MAAMgB,MAAM,GAAGnB,UAAU,CAACoB,MAAXpB,CAAkB;EAC/BkB,IAAI,EAAE;IACJG,SAAS,EAAE;EADP;AADyB,CAAlBrB,CAAf;AAMA,eAAeC,SAAS,eAACJ,KAAK,CAACyB,UAANzB,CAAiBC,IAAjBD,CAAD,CAAxB","names":["React","Text","NativeText","StyleSheet","withTheme","ref","style","theme","rest","_ref","root","useRef","useImperativeHandle","setNativeProps","args","current","_root$current","fonts","regular","color","colors","text","styles","create","textAlign","forwardRef"],"sources":["/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/node_modules/react-native-paper/lib/module/components/Typography/Text.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Text as NativeText,\n  TextStyle,\n  StyleProp,\n  StyleSheet,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof NativeText> & {\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n// @component-group Typography\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nconst Text: React.RefForwardingComponent<{}, Props> = (\n  { style, theme, ...rest }: Props,\n  ref\n) => {\n  const root = React.useRef<NativeText | null>(null);\n\n  React.useImperativeHandle(ref, () => ({\n    setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n  }));\n\n  return (\n    <NativeText\n      {...rest}\n      ref={root}\n      style={[\n        {\n          ...theme.fonts.regular,\n          color: theme.colors.text,\n        },\n        styles.text,\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default withTheme(React.forwardRef(Text));\n"]},"metadata":{},"sourceType":"module"}