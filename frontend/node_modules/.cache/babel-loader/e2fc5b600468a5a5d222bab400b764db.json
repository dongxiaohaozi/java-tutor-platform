{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport color from 'color';\nimport * as React from 'react';\nimport { I18nManager, StyleSheet } from 'react-native';\nimport Text from './Text';\nimport { withTheme } from '../../core/theming';\n\nconst StyledText = _ref => {\n  let {\n    theme,\n    alpha,\n    family,\n    style,\n    ...rest\n  } = _ref;\n  const textColor = color(theme.colors.text).alpha(alpha).rgb().string();\n  const font = theme.fonts[family];\n  const writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n  return /*#__PURE__*/React.createElement(Text, _extends({}, rest, {\n    style: [styles.text, {\n      color: textColor,\n      ...font,\n      writingDirection\n    }, style]\n  }));\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left'\n  }\n});\nexport default withTheme(StyledText);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,EAA4CC,UAA5C,QAA8D,cAA9D;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AASA,MAAMC,UAAU,GAAGC,QAAqD;EAAA,IAApD;IAAEC,KAAF;IAASC,KAAT;IAAgBC,MAAhB;IAAwBC,KAAxB;IAA+B,GAAGC;EAAlC,IAAoDL;EACtE,MAAMM,SAAS,GAAGb,KAAK,CAACQ,KAAK,CAACM,MAANN,CAAaO,IAAd,CAALf,CAAyBS,KAAzBT,CAA+BS,KAA/BT,EAAsCgB,GAAtChB,GAA4CiB,MAA5CjB,EAAlB;EACA,MAAMkB,IAAI,GAAGV,KAAK,CAACW,KAANX,CAAYE,MAAZF,CAAb;EACA,MAAMY,gBAAgB,GAAGlB,WAAW,CAACmB,KAAZnB,GAAoB,KAApBA,GAA4B,KAArD;EAEA,oBACED,oBAACG,IAAD,eACMQ,IADN;IAEED,KAAK,EAAE,CACLW,MAAM,CAACP,IADF,EAEL;MAAEf,KAAK,EAAEa,SAAT;MAAoB,GAAGK,IAAvB;MAA6BE;IAA7B,CAFK,EAGLT,KAHK;EAFT,GADF;AALF;;AAiBA,MAAMW,MAAM,GAAGnB,UAAU,CAACoB,MAAXpB,CAAkB;EAC/BY,IAAI,EAAE;IACJS,SAAS,EAAE;EADP;AADyB,CAAlBrB,CAAf;AAMA,eAAeE,SAAS,CAACC,UAAD,CAAxB","names":["color","React","I18nManager","StyleSheet","Text","withTheme","StyledText","_ref","theme","alpha","family","style","rest","textColor","colors","text","rgb","string","font","fonts","writingDirection","isRTL","styles","create","textAlign"],"sources":["/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/node_modules/react-native-paper/lib/module/components/Typography/StyledText.tsx"],"sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { I18nManager, StyleProp, TextStyle, StyleSheet } from 'react-native';\n\nimport Text from './Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof Text> & {\n  alpha: number;\n  family: 'regular' | 'medium' | 'light' | 'thin';\n  style?: StyleProp<TextStyle>;\n  theme: ReactNativePaper.Theme;\n};\n\nconst StyledText = ({ theme, alpha, family, style, ...rest }: Props) => {\n  const textColor = color(theme.colors.text).alpha(alpha).rgb().string();\n  const font = theme.fonts[family];\n  const writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n\n  return (\n    <Text\n      {...rest}\n      style={[\n        styles.text,\n        { color: textColor, ...font, writingDirection },\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default withTheme(StyledText);\n"]},"metadata":{},"sourceType":"module"}