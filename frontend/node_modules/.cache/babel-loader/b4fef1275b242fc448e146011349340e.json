{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, View } from 'react-native';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\n/**\n * A component to show a single row inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableRow = _ref => {\n  let {\n    onPress,\n    style,\n    theme,\n    children,\n    pointerEvents,\n    ...rest\n  } = _ref;\n  const borderBottomColor = color(theme.dark ? white : black).alpha(0.12).rgb().string();\n  return /*#__PURE__*/React.createElement(TouchableRipple, _extends({}, rest, {\n    onPress: onPress,\n    style: [styles.container, {\n      borderBottomColor\n    }, style]\n  }), /*#__PURE__*/React.createElement(View, {\n    style: styles.content,\n    pointerEvents: pointerEvents\n  }, children));\n};\n\nDataTableRow.displayName = 'DataTable.Row';\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});\nexport default withTheme(DataTableRow); // @component-docs ignore-next-line\n\nexport { DataTableRow };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,UADF,EAGEC,IAHF,QAMO,cANP;AAOA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,qBAA7B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAGC,QAOR;EAAA,IAPS;IACpBC,OADoB;IAEpBC,KAFoB;IAGpBC,KAHoB;IAIpBC,QAJoB;IAKpBC,aALoB;IAMpB,GAAGC;EANiB,IAOTN;EACX,MAAMO,iBAAiB,GAAGf,KAAK,CAACW,KAAK,CAACK,IAANL,GAAaN,KAAbM,GAAqBP,KAAtB,CAALJ,CACvBiB,KADuBjB,CACjB,IADiBA,EAEvBkB,GAFuBlB,GAGvBmB,MAHuBnB,EAA1B;EAKA,oBACED,oBAACI,eAAD,eACMW,IADN;IAEEL,OAAO,EAAEA,OAFX;IAGEC,KAAK,EAAE,CAACU,MAAM,CAACC,SAAR,EAAmB;MAAEN;IAAF,CAAnB,EAA0CL,KAA1C;EAHT,iBAKEX,oBAACG,IAAD;IAAMQ,KAAK,EAAEU,MAAM,CAACE,OAApB;IAA6BT,aAAa,EAAEA;EAA5C,GACGD,QADH,CALF,CADF;AAbF;;AA0BAL,YAAY,CAACgB,WAAbhB,GAA2B,eAA3BA;AAEA,MAAMa,MAAM,GAAGnB,UAAU,CAACuB,MAAXvB,CAAkB;EAC/BoB,SAAS,EAAE;IACTI,WAAW,EAAE,OADJ;IAETC,iBAAiB,EAAEzB,UAAU,CAAC0B,aAFrB;IAGTC,SAAS,EAAE,EAHF;IAITC,iBAAiB,EAAE;EAJV,CADoB;EAO/BP,OAAO,EAAE;IACPQ,IAAI,EAAE,CADC;IAEPC,aAAa,EAAE;EAFR;AAPsB,CAAlB9B,CAAf;AAaA,eAAeK,SAAS,CAACC,YAAD,CAAxB,C,CAEA;;AACA,SAASA,YAAT","names":["React","color","StyleSheet","View","TouchableRipple","black","white","withTheme","DataTableRow","_ref","onPress","style","theme","children","pointerEvents","rest","borderBottomColor","dark","alpha","rgb","string","styles","container","content","displayName","create","borderStyle","borderBottomWidth","hairlineWidth","minHeight","paddingHorizontal","flex","flexDirection"],"sources":["/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/node_modules/react-native-paper/lib/module/components/DataTable/DataTableRow.tsx"],"sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  ViewStyle,\n  ViewProps,\n} from 'react-native';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableRow`.\n   */\n  children: React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * `pointerEvents` passed to the `View` container, which is wrapping children within `TouchableRipple`.\n   */\n  pointerEvents?: ViewProps['pointerEvents'];\n};\n\n/**\n * A component to show a single row inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableRow = ({\n  onPress,\n  style,\n  theme,\n  children,\n  pointerEvents,\n  ...rest\n}: Props) => {\n  const borderBottomColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  return (\n    <TouchableRipple\n      {...rest}\n      onPress={onPress}\n      style={[styles.container, { borderBottomColor }, style]}\n    >\n      <View style={styles.content} pointerEvents={pointerEvents}>\n        {children}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nDataTableRow.displayName = 'DataTable.Row';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n\nexport default withTheme(DataTableRow);\n\n// @component-docs ignore-next-line\nexport { DataTableRow };\n"]},"metadata":{},"sourceType":"module"}