[{"/Users/kuidou/Desktop/5098/demo-a-java-tutor/src/index.js":"1","/Users/kuidou/Desktop/5098/demo-a-java-tutor/src/App.js":"2","/Users/kuidou/Desktop/5098/demo-a-java-tutor/src/Pages/home/Home.jsx":"3","/Users/kuidou/Desktop/5098/demo-a-java-tutor/src/Pages/introduction/Introduction.jsx":"4","/Users/kuidou/Desktop/5098/demo-a-java-tutor/src/components/datatable/Datatable.jsx":"5","/Users/kuidou/Desktop/5098/demo-a-java-tutor/src/components/sidebar/Sidebar.jsx":"6","/Users/kuidou/Desktop/5098/demo-a-java-tutor/src/components/navbar/Navsection.jsx":"7","/Users/kuidou/Desktop/5098/demo-a-java-tutor copy/frontend/src/index.js":"8","/Users/kuidou/Desktop/5098/demo-a-java-tutor copy/frontend/src/App.js":"9","/Users/kuidou/Desktop/5098/demo-a-java-tutor copy/frontend/src/Pages/home/Home.jsx":"10","/Users/kuidou/Desktop/5098/demo-a-java-tutor copy/frontend/src/Pages/introduction/Introduction.jsx":"11","/Users/kuidou/Desktop/5098/demo-a-java-tutor copy/frontend/src/components/navbar/Navsection.jsx":"12","/Users/kuidou/Desktop/5098/demo-a-java-tutor copy/frontend/src/components/datatable/Datatable.jsx":"13","/Users/kuidou/Desktop/5098/demo-a-java-tutor copy/frontend/src/components/sidebar/Sidebar.jsx":"14","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/index.js":"15","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/App.js":"16","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/home/Home.jsx":"17","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/introduction/Introduction.jsx":"18","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/components/sidebar/Sidebar.jsx":"19","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/components/datatable/Datatable.jsx":"20","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/components/navbar/Navsection.jsx":"21","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/chapter1/Chapter1.jsx":"22","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/chapter2/Chapter2.jsx":"23","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/chapter3/Chapter3.jsx":"24","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/chapter4/Chapter4.jsx":"25","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/substitutability/Substitutability.jsx":"26","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/inputAndOutput/InputAndOutput.jsx":"27","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/fixedLayout/FixedLayout.jsx":"28","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/overloading/Overloading.jsx":"29","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/encapsulation/Encapsulation.jsx":"30","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/constructor/Constructor.jsx":"31","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/array/Array.jsx":"32","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/methods/Methods.jsx":"33","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/inheritance/Inheritance.jsx":"34","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/collection/Collection.jsx":"35","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/lateBinding/LateBinding.jsx":"36","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/fileHandling/FileHandling.jsx":"37","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/overriding/Overriding.jsx":"38","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/components/login/Login.jsx":"39","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/chapter5/Chapter5.jsx":"40","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/chapter6/Chapter6.jsx":"41","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/chapter7/Chapter7.jsx":"42","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/chapter8/Chapter8.jsx":"43","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/chapter9/Chapter9.jsx":"44","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/exercise1/Exercise1.jsx":"45","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/exercise2/Exercise2.jsx":"46","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/exercise3/Exercise3.jsx":"47","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/exercise4/Exercise4.jsx":"48","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/exercise5/Exercise5.jsx":"49"},{"size":235,"mtime":1656126297983,"results":"50","hashOfConfig":"51"},{"size":569,"mtime":1657145148046,"results":"52","hashOfConfig":"51"},{"size":457,"mtime":1656283431884,"results":"53","hashOfConfig":"51"},{"size":3577,"mtime":1657620652843,"results":"54","hashOfConfig":"51"},{"size":194,"mtime":1656271927667,"results":"55","hashOfConfig":"51"},{"size":3414,"mtime":1656272530132,"results":"56","hashOfConfig":"51"},{"size":1640,"mtime":1656194644056,"results":"57","hashOfConfig":"51"},{"size":235,"mtime":1656126297983,"results":"58","hashOfConfig":"59"},{"size":598,"mtime":1657865351504,"results":"60","hashOfConfig":"59"},{"size":457,"mtime":1656283431884,"results":"61","hashOfConfig":"59"},{"size":3419,"mtime":1657867708877,"results":"62","hashOfConfig":"59"},{"size":1640,"mtime":1656194644056,"results":"63","hashOfConfig":"59"},{"size":194,"mtime":1656271927667,"results":"64","hashOfConfig":"59"},{"size":3414,"mtime":1656272530132,"results":"65","hashOfConfig":"59"},{"size":233,"mtime":1657905468326,"results":"66","hashOfConfig":"67"},{"size":9908,"mtime":1660516047373,"results":"68","hashOfConfig":"67"},{"size":6061,"mtime":1660422714326,"results":"69","hashOfConfig":"67"},{"size":5132,"mtime":1660332463642,"results":"70","hashOfConfig":"67"},{"size":11338,"mtime":1660394132828,"results":"71","hashOfConfig":"67"},{"size":194,"mtime":1656271927667,"results":"72","hashOfConfig":"67"},{"size":1773,"mtime":1660599991669,"results":"73","hashOfConfig":"67"},{"size":13801,"mtime":1660516392403,"results":"74","hashOfConfig":"67"},{"size":12924,"mtime":1660335283621,"results":"75","hashOfConfig":"67"},{"size":6688,"mtime":1660336069771,"results":"76","hashOfConfig":"67"},{"size":6858,"mtime":1660344885458,"results":"77","hashOfConfig":"67"},{"size":5883,"mtime":1660599337958,"results":"78","hashOfConfig":"67"},{"size":8229,"mtime":1660597608013,"results":"79","hashOfConfig":"67"},{"size":814,"mtime":1660301340433,"results":"80","hashOfConfig":"67"},{"size":3132,"mtime":1660598208608,"results":"81","hashOfConfig":"67"},{"size":5204,"mtime":1660597189903,"results":"82","hashOfConfig":"67"},{"size":6255,"mtime":1660597715765,"results":"83","hashOfConfig":"67"},{"size":6519,"mtime":1660599813169,"results":"84","hashOfConfig":"67"},{"size":5252,"mtime":1660598854803,"results":"85","hashOfConfig":"67"},{"size":6100,"mtime":1660598536277,"results":"86","hashOfConfig":"67"},{"size":15745,"mtime":1660605498810,"results":"87","hashOfConfig":"67"},{"size":4810,"mtime":1660576024000,"results":"88","hashOfConfig":"67"},{"size":4023,"mtime":1660576010000,"results":"89","hashOfConfig":"67"},{"size":6260,"mtime":1660598928384,"results":"90","hashOfConfig":"67"},{"size":1813,"mtime":1658454484000,"results":"91","hashOfConfig":"67"},{"size":7146,"mtime":1660347602450,"results":"92","hashOfConfig":"67"},{"size":15105,"mtime":1660348897092,"results":"93","hashOfConfig":"67"},{"size":11560,"mtime":1660417587591,"results":"94","hashOfConfig":"67"},{"size":13228,"mtime":1660305743207,"results":"95","hashOfConfig":"67"},{"size":12084,"mtime":1660418830486,"results":"96","hashOfConfig":"67"},{"size":1847,"mtime":1660485665201,"results":"97","hashOfConfig":"67"},{"size":2061,"mtime":1660484992453,"results":"98","hashOfConfig":"67"},{"size":2387,"mtime":1660484727049,"results":"99","hashOfConfig":"67"},{"size":2449,"mtime":1660483743273,"results":"100","hashOfConfig":"67"},{"size":2492,"mtime":1660482638372,"results":"101","hashOfConfig":"67"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dd7bt0",{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"egbi32",{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},"yax3xw",{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"150"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"150"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"150"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"150"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"150"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"150"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"150"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"150"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"150"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"150"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"150"},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"150"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"150"},"/Users/kuidou/Desktop/5098/demo-a-java-tutor/src/index.js",[],[],"/Users/kuidou/Desktop/5098/demo-a-java-tutor/src/App.js",[],[],[],"/Users/kuidou/Desktop/5098/demo-a-java-tutor/src/Pages/home/Home.jsx",[],[],"/Users/kuidou/Desktop/5098/demo-a-java-tutor/src/Pages/introduction/Introduction.jsx",["266"],[],"import React from 'react'\nimport Sidebar from '../../components/sidebar/Sidebar'\nimport Navsection from '../../components/navbar/Navsection'\nimport Datatable from '../../components/datatable/Datatable'\nimport './introduction.scss'\nimport { orange } from '@mui/material/colors'\n\n\nconst Introduction = () => {\n    (function(){\n        //handler for the addModule button\n        function submit() {\n            let code = document.getElementById(\"input\").value;\n            \n            let data = { code:code };\n            fetch('/code', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(data) \n            })\n            .then (res => res.text())\n            .then (txt => alert(txt))\n        }\n            \n        //when the page loads\n        window.onload = () => { \n            document.getElementById(\"button\").onclick = submit;\n        }\n    })();\n\n    \n  return (\n    <div className='introduction'>\n        <Sidebar/>\n        <div className=\"introductionContainer\">\n            <Navsection/>\n                <div className=\"widgets\">\n                    <div className=\"left\">\n                        <span className=\"title\">\n                        <h1>Java Introduction</h1>\n                        <h2>What is Java?</h2>\n                        <p>Java is a popular programming language, born in 1995.\n                                It is owned by Oracle, and more than 3 billion devices run Java.\n                        </p>\n                        <hr/>\n                        <p>It is good at:</p>\n                        <ul>\n                            <li>Mobile applications (especially Android apps)</li>\n                            <li>Desktop applications</li>\n                            <li>Web applications</li>\n                            <li>Games</li>\n                            <li>Database connection</li>\n\n                        </ul>\n\n                        </span>\n                    </div>\n\n\n            \n          \n                 </div>\n\n                 <div className=\"widgets\">\n                    <h3>The advantages of Java:</h3>\n                    <ul>\n                        <li>Java works on all kinds of platforms (Windows, Mac, Linux, Raspberry Pi, etc.)</li>\n                        <li>It is one of the most used programming languages among the developers</li>\n                        <li>Compared with other languages, it is easier to learn and simpler to use</li>\n                        <li>It is open-source and free</li>\n                        <li>It is secure, fast and strong</li>\n                        <li>It has a large community support</li>\n                        <li>Java is an object-oriented language which show the program structure clearly and support the code to be reused, lowering costs</li>\n                    </ul>\n                    \n                 </div>\n                 <div className=\"widgets\">\n                    <h3 >Exercise: </h3>\n                    \n                        <p>Please try to output this \"Hello A Java Tutor!\" by using the basic Syntax (System.out.println())</p>\n\n                        \t<div>\n                                <label>please enter your Java code here:</label> \n                                <input type=\"text\" id = \"input\"/>\n                            </div>\n\t                        <button id=\"button\">submit</button>\n                    \n                 </div>\n            <Datatable/>\n\n        </div>\n        \n    </div>\n  )\n}\n\nexport default Introduction","/Users/kuidou/Desktop/5098/demo-a-java-tutor/src/components/datatable/Datatable.jsx",[],[],"/Users/kuidou/Desktop/5098/demo-a-java-tutor/src/components/sidebar/Sidebar.jsx",[],[],"/Users/kuidou/Desktop/5098/demo-a-java-tutor/src/components/navbar/Navsection.jsx",[],[],"/Users/kuidou/Desktop/5098/demo-a-java-tutor copy/frontend/src/index.js",[],[],[],"/Users/kuidou/Desktop/5098/demo-a-java-tutor copy/frontend/src/App.js",[],[],"/Users/kuidou/Desktop/5098/demo-a-java-tutor copy/frontend/src/Pages/home/Home.jsx",[],[],"/Users/kuidou/Desktop/5098/demo-a-java-tutor copy/frontend/src/Pages/introduction/Introduction.jsx",[],[],"/Users/kuidou/Desktop/5098/demo-a-java-tutor copy/frontend/src/components/navbar/Navsection.jsx",[],[],"/Users/kuidou/Desktop/5098/demo-a-java-tutor copy/frontend/src/components/datatable/Datatable.jsx",[],[],"/Users/kuidou/Desktop/5098/demo-a-java-tutor copy/frontend/src/components/sidebar/Sidebar.jsx",[],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/index.js",[],[],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/App.js",["267","268","269"],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/home/Home.jsx",["270","271","272"],[],"import './home.scss';\nimport Sidebar from '../../components/sidebar/Sidebar';\nimport Navsection from '../../components/navbar/Navsection';\nimport { useNavigate } from 'react-router-dom';\n\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { far } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\n\nconst Home = () => {\n\n\n  const obj1 =\n    `\n    java -version`\n  const obj2 =\n    `\n    java version \"18\" 2022-03-22\n    Java(TM) SE Runtime Environment (build 18+36-2087)\n    Java HotSpot(TM) 64-Bit Server VM (build 18+36-2087, mixed mode, sharing)\n    `\n    const obj3 =\n    `\n    openjdk version \"11.0.13\" 2021-10-19 LTS\n    OpenJDK Runtime Environment Corretto-11.0.13.8.1 (build 11.0.13+8-LTS)\n    OpenJDK 64-Bit Server VM Corretto-11.0.13.8.1 (build 11.0.13+8-LTS, mixed mode)\n    `\n  const Code = ({ children }) => (\n    <SyntaxHighlighter language=\"java\" style={far}>\n      {children}\n    </SyntaxHighlighter>\n  );\n\n  const navigate = useNavigate();\n\n  const transfer = (res) => {\n    if (res.includes(\":)\")) {\n      alert(\"You would go to the chapter 1 to enhance your knowledge!\")\n      setTimeout(() => navigate('/chapter1'), 500);\n\n    }\n  }\n  const submit = (e) => {\n    e.preventDefault();\n\n    const code = document.getElementById(\"input\").value;\n    const data = { code: code };\n\n\n    fetch('/api/home/codehome', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.text())\n      .then(res => alert(res))\n\n\n\n\n    fetch('/api/home/codehome', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      // .then(ans=>{\n      //   document.getElementById(\"hint\").style.display=\"block\"\n      //   document.getElementById(\"hint\").innerText=ans.getkey()\n\n      // })\n      .then(res => { transfer(res) })\n\n  }\n\n  return (\n    <div className='home'>\n\n      {/* <Sidebar /> */}\n      <div className=\"homecontainer\">\n        {/* <Navsection /> */}\n        <div className=\"widget\">\n          <h1 style={{marginTop:\"130px\"}}>Welcome to A Java Tutor!!</h1>\n          <img style={{width:\"280px\" }} src=\"https://freepngimg.com/thumb/java/85390-java-language-text-programming-logo-programmer-thumb.png\" alt=\"javalogo\" />\n\n\n        </div>\n        <div className=\"widgets\">\n          <h1>Java Install:</h1>\n          <p>Some PCs might have Java already installed.\n            To check whether you have Java installed or not,\n            type the following command into a terminal: \n\n           \n          </p>\n          <pre className=\"code\" >\n              <Code>{obj1}</Code>\n            </pre>\n        </div>\n        <div className=\"widgets\">\n          <h2>Next Step:</h2>\n          {/* <p style={{\"white-space\": \"pre-wrap\"}}>\n            {'aaaaaaa%3A\t  b  \\n bbbb%22\tbbbb%22\tbbbbbbbbbb'}\n            \n          </p> */}\n\n          <p style={{ \"white-space\": \"pre-wrap\" }}>If Java is installed, you will see something like this (depending on version):\n        \n\n          </p>\n          <pre className=\"code\" >\n              <Code>{obj2}</Code>\n          </pre>\n          If you are using the lab computer, you will see something like this:\n          <pre className=\"code\" >\n              <Code>{obj3}</Code>\n          </pre>\n\n          <p>\n            If not, you can download Java for free at the official website <a style={{ color: \"SlateBlue\" }} href='https://www.oracle.com/java/technologies/downloads/'><strong>oracle.com.</strong></a>\n          </p>\n          {/* Or you are in the lab machine, you can download the lab version of Java: Coretto. */}\n\n        </div>\n\n        <div className=\"widgets\">\n          <h3>Basic Java concepts you should keep in mind:</h3>\n          <p>\n            <strong>In Java:</strong>\n            <ol>\n              <li>every application begins with a class name, and that class must match the filename.</li>\n              <li>All code must be inside a class</li>\n              <li>A class name should always start with an Uppercase first letter</li>\n              <li>Java is case-sensitive: ‘Mytutor’ is totally different from ‘mytutor’</li>\n              <li>Every Java program requires a main () method:\n                <strong style={{ color: \"DodgerBlue\" }}>public static void main(String[] args)</strong>\n              </li>\n              <li>Code inside the main () method will be run when the program is executed.</li>\n            </ol>\n          </p>\n          <p></p>\n        </div>\n\n        <div className=\"widgets\">\n          <h3>How To run A Java Code</h3>\n          <p>\n            <strong>Follow these four basic steps: </strong>\n            <p>(assume the java file waiting to be run is called \"Main.java\")</p>\n            <ol>\n              <li>First, you should save your Java file </li>\n              <li>Secondly, Go to a terminal and navigate to the directory where your code is</li>\n              <li>Thirdly, type in “javac Main.java”. (this would compile the java code, if there are no errors, the terminal will take you to the next line)</li>\n              <li>Finally, type in “java Main” (to finally run the code)</li>\n            </ol>\n          </p>\n        </div>\n\n        {/* <div className=\"widgets\">\n        <div className = \"exercise-div\">\n\n          <h3 >Exercise: </h3>\n          <p>Please try to output this \"Hello World\" by using the basic Syntax (System.out.println())</p>\n          <form onSubmit={(e) => { submit(e) }}>\n            <textarea\n              class=\"input shadow\"\n              name=\"name\"\n              rows=\"15\"\n              cols=\"100\"\n              placeholder=\"please enter your Java code here:\"\n\n\n              style={{ marginTop: \"10px\", width: \"400px\", height: \"200px\" }} type=\"text\" id=\"input\" ></textarea>\n            <button className=\"btn btn-primary\" style={{ marginLeft: \"10px\" }} id=\"button\" type=\"submit\">submit</button>\n          </form>\n        </div>\n        </div> */}\n \n\n      </div>\n\n    </div>\n  )\n}\n\nexport default Home\n\n\n\n","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/introduction/Introduction.jsx",["273","274","275"],[],"import React from 'react'\nimport Sidebar from '../../components/sidebar/Sidebar'\nimport Navsection from '../../components/navbar/Navsection'\nimport './introduction.scss'\nimport { useNavigate } from \"react-router-dom\"\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { far } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nconst Introduction = () => {\n\n    const obj1 =\n    `\n    System.out.println(\"Hello World\")\n    `\n  const Code = ({ children }) => (\n    <SyntaxHighlighter language=\"java\" style={far}>\n      {children}\n    </SyntaxHighlighter>\n  );\n\n\n\n\n\n    // ----------------\n    const navigate = useNavigate();\n\n    // const transfer = (txt) => {\n    //     if (txt.includes(\":)\")) {\n    //         setTimeout(() => navigate('/'), 500);\n\n    //     }\n    // }\n    const submit = (e) => {\n        e.preventDefault();\n\n        const code = document.getElementById(\"input\").value;\n        const data = { code: code };\n        fetch('/api/codeintroduction', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.text())\n            .then(txt => alert(txt))\n            // .then(txt => transfer(txt))\n\n    }\n    return (\n        <div className='introduction'>\n            {/* <Sidebar /> */}\n            <div className=\"introductionContainer\">\n                {/* <Navsection /> */}\n                <div className=\"widgets\">\n                    <div className=\"left\">\n                        <span className=\"title\">\n                            <h1>Java Introduction</h1>\n                            <h3>What is Java?</h3>\n                            <p>Java is a popular programming language, born in 1995.\n                                It is owned by Oracle, and more than 3 billion devices run Java.\n                            </p>\n                            <p>It is good for:</p>\n                            <ul>\n                                <li>Mobile applications (especially Android apps)</li>\n                                <li>Desktop applications</li>\n                                <li>Web applications</li>\n                                <li>Games</li>\n                                <li>Database connection</li>\n                            </ul>\n                        </span>\n                    </div>\n                </div>\n                <div className=\"widgets\">\n                    <h3>The advantages of Java:</h3>\n                    <ul>\n                        <li>Java works on all kinds of platforms (Windows, Mac, Linux, Raspberry Pi)</li>\n                        <li>It is one of the most used programming languages among developers</li>\n                        <li>It is open-source and free</li>\n                        <li>It is secure, fast and strong</li>\n                        <li>It has a large community support</li>\n                        <li>Java is an object-oriented language which show the program structure clearly and support the code to be reused, lowering costs</li>\n                    </ul>\n                </div>\n\n                {/* <div className=\"widgets\">\n                    <h3>A Tutorial Video about Java Introduction:</h3>\n                    <div style={{ \"border-radius\": '30px' }} dangerouslySetInnerHTML={{ __html: \"<iframe src='https://www.youtube.com/embed/mAtkPQO1FcA' frameborder='0' autoplay; allowfullscreen   />\" }} />\n                    <div className=\"\"></div>\n\n                </div> */}\n\n<div className=\"widgets\">\n          <h1>A first Taste of Java: Java output statement</h1>\n          <p>\n          System. out. println is a Java statement that prints the argument passed, into the System. out which is generally stdout. System is a Class.\n\n           \n          </p>\n\n          <ul>\n                        <li>System is a Class</li>\n                        <li>out is a Variable</li>\n                        <li>println() is a method</li>\n                    </ul>\n          <pre className=\"code\" >\n              <Code>{obj1}</Code>\n            </pre>\n        </div>\n\n\n\n                \n\n                <div className=\"widgets\">\n                <div className = \"exercise-div\">\n\n                    <h3 >Exercise:</h3>\n                    <p>Please try to output this \"A Java Tutor\" by using the basic Syntax (System.out.println()) </p>\n                    <form onSubmit={(e) => { submit(e) }}>\n                        <textarea \n                        class=\"input shadow\" \n                        name=\"name\" \n                        rows=\"15\" \n                        cols=\"100\" \n                        placeholder=\"please enter your Java code here:\"\n                        \n                        \n                        style={{marginTop:\"10px\", width: \"400px\",height:\"200px\"}} type=\"text\" id=\"input\" ></textarea>\n                        <button className=\"btn btn-primary\" style={{marginLeft:\"10px\"}} id=\"button\" type=\"submit\">submit</button>\n                    </form>\n                </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Introduction","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/components/sidebar/Sidebar.jsx",["276","277","278"],[],"import './sidebar.scss'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport TaskAltOutlinedIcon from '@mui/icons-material/TaskAltOutlined';\nimport QuizOutlinedIcon from '@mui/icons-material/QuizOutlined';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport { useState } from \"react\";\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport { Link } from 'react-router-dom';\nconst Sidebar = ({changepage}) => {\n\n\n    const [toturiallistshow, setToturiallistshow] = useState(true)\n    const [exerciselistshow, setExerciselistshow] = useState(true)\n    function hidetutorial() {\n        console.log(1111)\n        if (toturiallistshow) {\n            setToturiallistshow(false)\n        } else {\n            setToturiallistshow(true)\n        }\n\n    }\n\n    function hideexercise() {\n        if (exerciselistshow) {\n            setExerciselistshow(false)\n        } else {\n            setExerciselistshow(true)\n        }\n\n    }\n\n\n    return (\n        <div className='sidebar'>\n            <div className=\"top\">\n                <span className=\"logo\">\n                    A Java Tutor\n                </span>\n            </div>\n            <hr />\n            <div className=\"center\">\n                <ul>\n                    <p className=\"title\">MAIN</p>\n\n                    <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n                        <li>\n                            <DashboardIcon className='icon' />\n                            <span>HomePage</span>\n                        </li>\n                    </Link>\n\n                    <p className=\"title\" onClick={() => hidetutorial()} >TUTORIAL CONTENT</p>\n                    <div id=\"tutoriallist\" onClick = {(e)=> changepage(e)} style={{ display: toturiallistshow ? \"block\" : \"none\" }}>\n                        <Link to=\"/introduction\" style={{ textDecoration: \"none\" }}>\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>Introduction</span>\n                            </li>\n                        </Link>\n\n                        <Link to=\"/chapter1\" style={{ textDecoration: \"none\" }}>\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>1.Variables</span>\n                            </li>\n                        </Link>\n\n                        <Link to=\"/chapter2\" style={{ textDecoration: \"none\" }}>\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>2.Operators and Expressions</span>\n                            </li>\n                        </Link>\n                        <Link to=\"/chapter3\" style={{ textDecoration: \"none\" }}>\n\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>3.Java Methods</span>\n                            </li>\n                        </Link>\n                        <Link to=\"/chapter4\" style={{ textDecoration: \"none\" }}>\n\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>4.Java Classes and Objects</span>\n                            </li>\n                        </Link>\n                        <Link to=\"/chapter5\" style={{ textDecoration: \"none\" }}>\n\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>5.Java Constructors</span>\n                            </li>\n                        </Link>\n                        <Link to=\"/chapter6\" style={{ textDecoration: \"none\" }}>\n\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>6.Java Modifiers</span>\n                            </li>\n                        </Link>\n                        <Link to=\"/chapter7\" style={{ textDecoration: \"none\" }}>\n\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>7.Java Packages</span>\n                            </li>\n                        </Link>\n                        <Link to=\"/chapter8\" style={{ textDecoration: \"none\" }}>\n\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>8.Java Conditional Statement</span>\n                            </li>\n                        </Link>\n                        <Link to=\"/chapter9\" style={{ textDecoration: \"none\" }}>\n\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>9.Java Abstraction</span>\n                            </li>\n                        </Link>\n\n        \n                   \n     \n\n                        {/*---------------------------------------------*/}\n                        <Link to=\"/encapsulation\" style={{ textDecoration: \"none\" }}>\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>10.Encapsulation</span>\n                            </li>\n                        </Link>\n                        <Link to=\"/inputandoutput\" style={{ textDecoration: \"none\" }}>\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>11.Input, output and main method</span>\n                            </li>\n                        </Link>\n                        <Link to=\"/constructor\" style={{ textDecoration: \"none\" }}>\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>12.More Constructor</span>\n                            </li>\n                        </Link>\n                        <Link to=\"/arrays\" style={{ textDecoration: \"none\" }}>\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>13.Arrays</span>\n                            </li>\n                        </Link>\n                        <Link to=\"/collections\" style={{ textDecoration: \"none\" }}>\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>14.Collections</span>\n                            </li>\n                        </Link>\n                        <Link to=\"/overloading\" style={{ textDecoration: \"none\" }}>\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>15.Overloading</span>\n                            </li>\n                        </Link>\n                        <Link to=\"/inheritance\" style={{ textDecoration: \"none\" }}>\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>16.Inheritance</span>\n                            </li>\n                        </Link>\n                        <Link to=\"/substitutability\" style={{ textDecoration: \"none\" }}>\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>17.Substitutability</span>\n                            </li>\n                        </Link>\n                        <Link to=\"/methods\" style={{ textDecoration: \"none\" }}>\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>18. More Methods</span>\n                            </li>\n                        </Link>\n                        <Link to=\"/overriding\" style={{ textDecoration: \"none\" }}>\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>19.Overriding</span>\n                            </li>\n                        </Link>\n                        <Link to=\"/lateBinding\" style={{ textDecoration: \"none\" }}>\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>20.Late binding</span>\n                            </li>\n                        </Link>\n                        <Link to=\"/fileHandling\" style={{ textDecoration: \"none\" }}>\n                            <li>\n                                <TaskAltOutlinedIcon className='icon' />\n                                <span>21.Java file handling</span>\n                            </li>\n                        </Link>\n                    </div>\n\n                    {/*-------------------------------------*/}\n\n\n\n\n\n\n                    <p className=\"title\" onClick={() => hideexercise()} >EXERCISE SECTION</p>\n                    <div style={{ display: exerciselistshow ? \"block\" : \"none\" }}>\n                    <Link to=\"/exercise1\" style={{ textDecoration: \"none\" }}>\n\n                        <li>\n                            <QuizOutlinedIcon className='icon' />\n                            <span>exercise 1</span>\n                        </li>\n                    </Link>\n                    <Link to=\"/exercise2\" style={{ textDecoration: \"none\" }}>\n\n                        <li>\n                            <QuizOutlinedIcon className='icon' />\n                            <span>exercise 2</span>\n                        </li>\n                        </Link>\n                        <Link to=\"/exercise3\" style={{ textDecoration: \"none\" }}>\n\n\n                        <li>\n                            <QuizOutlinedIcon className='icon' />\n                            <span>exercise 3</span>\n                        </li>\n                        </Link>\n                        <Link to=\"/exercise4\" style={{ textDecoration: \"none\" }}>\n\n                        <li>\n                            <QuizOutlinedIcon className='icon' />\n                            <span>exercise 4</span>\n                        </li>\n                        </Link>\n                        <Link to=\"/exercise5\" style={{ textDecoration: \"none\" }}>\n\n                        <li>\n                            <QuizOutlinedIcon className='icon' />\n                            <span>exercise 5</span>\n                        </li>\n                        </Link>\n                    </div>\n\n\n\n                    {/* <p className=\"title\">USER</p>\n                    <li>\n                        <AccountCircleIcon className='icon' />\n                        <span>Users</span>\n                    </li>\n\n                    <li>\n                        <PersonAddIcon className='icon' />\n                        <span>Profile</span>\n                    </li>\n                    <li>\n                        <LogoutIcon className='icon' />\n                        <span>Logout</span>\n                    </li> */}\n\n\n                </ul>\n            </div>\n\n        </div>\n\n    )\n}\n\nexport default Sidebar","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/components/datatable/Datatable.jsx",[],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/components/navbar/Navsection.jsx",["279","280","281","282","283"],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/chapter1/Chapter1.jsx",["284","285","286"],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/chapter2/Chapter2.jsx",["287","288"],[],"import React from 'react'\nimport Sidebar from '../../components/sidebar/Sidebar'\nimport Navsection from '../../components/navbar/Navsection'\nimport './chapter2.scss'\nimport { useNavigate } from \"react-router-dom\"\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { far } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nconst Chapter2 = () => {\n    const obj2 =\n        `\nA=1; //the value of A will be 1\nB = A++; // the value of B will be 2\n    `\n\n    const Code = ({ children }) => (\n        <SyntaxHighlighter language=\"java\" style={far}>\n            {children}\n        </SyntaxHighlighter>\n    );\n    // ----------------\n    const navigate = useNavigate();\n\n    const transfer = (txt) => {\n        if (txt.includes(\":)\")) {\n            setTimeout(() => navigate('/'), 500);\n\n        }\n    }\n    const submit = (e) => {\n        e.preventDefault();\n\n        const code = document.getElementById(\"input\").value;\n        const data = { code: code };\n        fetch('/api/code2', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.text())\n            .then(txt => alert(txt))\n            .then(txt => transfer(txt))\n\n    }\n    return (\n        <div className='introduction'>\n            {/* <Sidebar /> */}\n            <div className=\"introductionContainer\">\n                {/* <Navsection /> */}\n                <div className=\"widgets\">\n                    <div className=\"left\">\n                        <span className=\"title\">\n                            <h1>Chapter 2: Java Operators and Expressions </h1>\n                            <h2 >4 Types of Operators in Java:</h2>\n                            <table class=\"demo\">\n                                <caption>Arithmetic Operators</caption>\n                                <thead>\n                                    <tr>\n                                        <th>Operator</th>\n                                        <th>Name</th>\n                                        <th>Description</th>\n                                        <th>Example</th>\n                                    </tr>\n                                </thead>\n\n                                <tr>\n                                    <td>&nbsp;+</td>\n                                    <td>&nbsp;Additon</td>\n                                    <td>&nbsp;Adds together two values</td>\n                                    <td>&nbsp;a+b</td>\n                                </tr>\n                                <tr>\n                                    <td>&nbsp;_</td>\n                                    <td>&nbsp;Substraction</td>\n                                    <td>&nbsp;Substract one value from another</td>\n                                    <td>&nbsp;a-b</td>\n                                </tr>\n                                <tr>\n                                    <td>&nbsp;*</td>\n                                    <td>&nbsp;Multiplication</td>\n                                    <td>&nbsp;Multiple two values</td>\n                                    <td>&nbsp;a*b</td>\n                                </tr>\n                                <tr>\n                                    <td>&nbsp;/</td>\n                                    <td>&nbsp;Division</td>\n                                    <td>&nbsp;Divides one value by another</td>\n                                    <td>&nbsp;a/b</td>\n                                </tr>\n                                <tr>\n                                    <td>&nbsp;%</td>\n                                    <td>Modulus</td>\n                                    <td>&nbsp;Returns the division remiander</td>\n                                    <td>&nbsp;a%b</td>\n                                </tr>\n                                <tr>\n                                    <td>&nbsp;++</td>\n                                    <td>&nbsp;Increment</td>\n                                    <td>&nbsp;Increase the value of a variable by 1</td>\n                                    <td>&nbsp;++a</td>\n                                </tr>\n                                <tr>\n                                    <td>&nbsp;--</td>\n                                    <td>&nbsp;Decrement</td>\n                                    <td>&nbsp;Decrease the value of a variable by 1</td>\n                                    <td>&nbsp;--a</td>\n                                </tr>\n\n                            </table>\n\n\n\n                        </span>\n                    </div>\n                    <table class=\"demo\">\n                        <caption>Assignment Operators</caption>\n                        <thead>\n                            <tr>\n                                <th>Operator</th>\n                                <th>Example</th>\n                                <th>Same As</th>\n                            </tr>\n                        </thead>\n\n                        <tr>\n                            <td>&nbsp;=</td>\n                            <td>&nbsp;a=5</td>\n                            <td>a=5</td>\n                        </tr>\n                        <tr>\n                            <td>&nbsp;+=</td>\n                            <td>&nbsp;a+=1</td>\n                            <td>a=a+1</td>\n                        </tr>\n                        <tr>\n                            <td>&nbsp;-=</td>\n                            <td>a-=2</td>\n                            <td>a=a-2</td>\n                        </tr>\n                        <tr>\n                            <td>&nbsp;*=</td>\n                            <td>&nbsp;a*=3</td>\n                            <td>x=x*3</td>\n                        </tr>\n                        <tr>\n                            <td>/=</td>\n                            <td>a/=2</td>\n                            <td>a=a/2</td>\n                        </tr>\n                        <tr>\n                            <td>&nbsp;%=</td>\n                            <td>&nbsp;a%=3</td>\n                            <td>&nbsp;x=x%3</td>\n                        </tr>\n                        <tr>\n                            <td>&nbsp;&amp;=</td>\n                            <td>&nbsp;a&amp;=3</td>\n                            <td>&nbsp;a=a&amp;3</td>\n                        </tr>\n                        <tr>\n                            <td>|=&nbsp;</td>\n                            <td>&nbsp;a|=3</td>\n                            <td>&nbsp;a=a|3</td>\n                        </tr>\n                        <tr>\n                            <td>&nbsp;^=</td>\n                            <td>&nbsp;a^=3</td>\n                            <td>&nbsp;a=a^3</td>\n                        </tr>\n                        <tr>\n                            <td>&nbsp;&gt;&gt;=</td>\n                            <td>&nbsp;a&gt;&gt;=3</td>\n                            <td>&nbsp;a=a&gt;&gt;3</td>\n                        </tr>\n                        <tr>\n                            <td>&nbsp;&lt;&lt;=</td>\n                            <td>&nbsp;a&lt;&lt;=3</td>\n                            <td>&nbsp;a=a&lt;&lt;3</td>\n                        </tr>\n\n                    </table>\n\n                    <table class=\"demo\">\n                        <caption>Comparision Operators</caption>\n                        <thead>\n                            <tr>\n                                <th>Operator</th>\n                                <th>Name</th>\n                                <th>Example</th>\n                            </tr>\t</thead>\t\t<tr>\n                            <td>&nbsp;==</td>\n                            <td>Equal to</td>\n                            <td>a==b</td>\n                        </tr>\n                        <tr>\n                            <td>!=</td>\n                            <td>Not equal</td>\n                            <td>a!=b</td>\n                        </tr>\n                        <tr>\n                            <td>&gt;</td>\n                            <td>Greater than</td>\n                            <td>a&gt;b</td>\n                        </tr>\n                        <tr>\n                            <td>&lt;</td>\n                            <td>Less than</td>\n                            <td>a&lt;b</td>\n                        </tr>\n                        <tr>\n                            <td>&gt;=</td>\n                            <td>Greater than or equal to</td>\n                            <td>a&gt;=b</td>\n                        </tr>\n                        <tr>\n                            <td>&nbsp;&lt;=</td>\n                            <td>&nbsp;Less than or equal to</td>\n                            <td>&nbsp;a&lt;=b</td>\n                        </tr>\n\n                    </table>\n                    <table class=\"demo\">\n                        <caption>Logical Operators</caption>\n                        <thead>\n                            <tr>\n                                <th>Operator</th>\n                                <th>Name</th>\n                                <th>Description</th>\n                                <th>Example</th>\n                            </tr>\t</thead>\t\t<tr>\n                            <td>&amp;&amp;</td>\n                            <td>Logical and</td>\n                            <td>Return true if both statement is true</td>\n                            <td>&nbsp;a&lt;8&amp;&amp;a&lt;1</td>\n                        </tr>\n                        <tr>\n                            <td>||</td>\n                            <td>Logical or</td>\n                            <td>Return true if one of the statement is true</td>\n                            <td>&nbsp;a&lt;8||a&lt;7</td>\n                        </tr>\n                        <tr>\n                            <td>!</td>\n                            <td>Logical not</td>\n                            <td>Reverse the result, return false if the result is true</td>\n                            <td>&nbsp;!(a&lt;1&amp;&amp;A&lt;4)</td>\n                        </tr>\n\n                    </table>\n                </div>\n                {/* <div className=\"widgets\">\n                    <h3>A Tutorial Video about Java Operator:</h3>\n                    <div style={{ \"border-radius\": '30px' }} dangerouslySetInnerHTML={{ __html: \"<iframe src='https://www.youtube.com/embed/tx1QIp0P6W8' frameborder='0' autoplay; allowfullscreen   />\" }} />\n                    <div className=\"\"></div>\n\n                </div> */}\n\n                <div className=\"widgets\">\n                    <h2>Java Operator and Expression:</h2>\n                    <p>Expressions perform specific actions, based on an operator, with one or two operands. An operand can be a constant, a variable or a function result. Operators are arithmetic, logical, and relational. Some operators vary in functionality according to the data type of the operands specified in the expression.</p>\n                    <span>Operators are manipulating values in an expression to produce new values:\n                    </span>\n                    <div className=\"example\">\n                        <h3>Example</h3>\n\n                        <pre className=\"code\" >\n                            <Code>{obj2}</Code>\n                        </pre>\n                    </div>\n\n\n\n\n                </div>\n\n\n\n\n                <div className=\"widgets\">\n                    <div className=\"exercise-div\">\n\n                        <h3 >Exercise: </h3>\n                        <p>As we all know: \"1{'>'}0\" is true and \"100{'<'}20\"is false;</p>\n                        <p>                            Then please use the <strong>logic operators</strong> to combine these two expressions and output a boolean value: <strong>\"false\"</strong> .\n                        </p>\n                        <p>                            Hint 1: you can use \"!\",\"{'&&'}\", \"()\" to connect your statements.\n                        </p>\n                        <p>\n                            Hint 2: you can use the System.out.print() to output the boolean value.\n\n                        </p>\n\n                        <form onSubmit={(e) => { submit(e) }}>\n                            <textarea\n                                class=\"input shadow\"\n                                name=\"name\"\n                                rows=\"15\"\n                                cols=\"100\"\n                                placeholder=\"please enter your Java code here:\"\n\n\n                                style={{ marginTop: \"10px\", width: \"400px\", height: \"200px\" }} type=\"text\" id=\"input\" ></textarea>\n                            <button className=\"btn btn-primary\" style={{ marginLeft: \"10px\" }} id=\"button\" type=\"submit\">submit</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Chapter2","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/chapter3/Chapter3.jsx",["289","290","291"],[],"import React from 'react'\nimport Sidebar from '../../components/sidebar/Sidebar'\nimport Navsection from '../../components/navbar/Navsection'\nimport './chapter3.scss'\nimport { useNavigate } from \"react-router-dom\"\nimport  SyntaxHighlighter  from 'react-syntax-highlighter';\nimport {far} from 'react-syntax-highlighter/dist/esm/styles/hljs';\nconst Chapter3 = () => {\n    const obj1 = \n    ` public class Main {\n        static void aMethod() {\n          System.out.println(\"A Java Tutor!\");\n        }\n        public static void main(String[] args) {\n          myMethod();\n        }\n}`\nconst obj2 = \n` public class Main {\n    static void aMethod(String name, int age) {\n        System.out.println(name + \" is \" + age+ \"years Old!\");\n    }\n    public static void main(String[] args) {\n        aMethod(\"Xin\", 5);\n        aMethod(\"Hao\", 8);}\n    }\n}\n    output: \n    Xin is 5 years Old!\n    Hao is 8 years Old!\n\n`\n\nconst inputdefault  = \n  `\n  int myMethod(int a) {\n    return a;\n   }\n  System.out.print(myMethod())\n  ` \n\n    const Code = ({ children }) => (\n        <SyntaxHighlighter language=\"java\" style={far}>\n            { children }\n        </SyntaxHighlighter>\n      );\n\n\n\n    // ----------------\n    // const navigate = useNavigate();\n\n    // const transfer = (txt) => {\n    //     if (txt.includes(\":)\")) {\n    //         setTimeout(() => navigate('/'), 500);\n\n    //     }\n    // }\n    const submit = (e) => {\n        e.preventDefault();\n\n        const code = document.getElementById(\"input\").value;\n        const data = { code: code };\n        fetch('/api/code3', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.text())\n            .then(txt => alert(txt))\n            // .then(txt => transfer(txt))\n\n    }\n    return (\n        <div className='introduction'>\n            {/* <Sidebar /> */}\n            <div className=\"introductionContainer\">\n                {/* <Navsection /> */}\n                <div className=\"widgets\">\n                    <div className=\"left\">\n                        <span className=\"title\">\n                            <h1>Chapter 3: Java Methods</h1>\n                            <p >A method is a block of code which only runs when it is invoked.\n                                We can pass data (known as parameters) into a method.\n                                Methods are called to perform things, so we also call methods functions.\n                            </p>\n                            <p>                                It is much easier to define a method once and reuse it many times.\n</p>\n                            <p>Java has some build-in methods like System.out.println(),\n                                However, we can make our own methods.\n                            </p>\n                            <p style={{color:\"darkred\"}}>                                Note: a method must be declared within a class.\n</p>\n                            \n                        </span>\n                    </div>\n                </div>\n                <div className=\"widgets\">\n                    <h2>Call a Method:</h2>\n\n                    <p>Define a method and call it as follows:</p>\n                    <div className = \"example\">\n                          <h3>Example</h3>\n                           <pre className = \"code\" >\n                              <Code>{obj1}</Code>\n                           </pre>\n                           <p><strong>aMethod () </strong>is the name of this method </p>\n                                <p><strong>static</strong> means that this method belong to the Main class, and it is not a object of the Main class.\n                                </p><p><strong>void</strong> means that this method returns nothing.</p>\n                    <span style={{color:\"darkred\"}}>\n                         call the aMethod() method Inside a Main Class,\n                    </span>\n                </div>\n\n\n\n                    {/* <p style={{ color: \"green\" }}>\n\n                        <hr style={{ color: \"Background\" }} />\n\n                        public class Main {'{'}\n                        <hr style={{ color: \"Background\" }} />\n\n                        static void aMethod() {'{'}\n\n                        System.out.println(\"A Java Tutor!\");{'}'}\n                        <hr style={{ color: \"Background\" }} />\n                        public static void main(String[] args) {'{'}\n\n                        aMethod();\n                        {'}'}\n                        <hr style={{ color: \"Background\" }} />\n\n\n\n\n                        {'}'}\n\n                    </p> */}\n                    <p></p>\n                </div>\n                <div className=\"widgets\">\n                    <h2>Java Method Parameters</h2>\n                    <span>\n                        We can pass information to methods using parameter.\n                    </span>\n                    <div className = \"example\">\n                    <h3>Example</h3>\n\n                    <pre className = \"code\" >\n                              <Code>{obj2}</Code>\n                    </pre>\n                    </div>\n                    \n\n\n\n                </div>\n\n{/* \n                <div className=\"widgets\">\n                    <h3>A Tutorial Video about Java Methods:</h3>\n                    <div style={{ \"border-radius\": '30px' }} dangerouslySetInnerHTML={{ __html: \"<iframe src='https://www.youtube.com/embed/r0SewFmbCUI' frameborder='0' autoplay; allowfullscreen   />\" }} />\n                    <div className=\"\"></div>\n\n                </div> */}\n\n\n\n\n                <div className=\"widgets\">\n                <div className = \"exercise-div\">\n\n                    <h3 >Exercise: </h3>\n                \n\n                    <p>\n                        Complete this sinppet code below: to putput the value of \"8\"\n                    </p>\n\n                 \n                    <form onSubmit={(e) => { submit(e) }}>\n                        <textarea\n                            class=\"input shadow\"\n                            name=\"name\"\n                            rows=\"15\"\n                            cols=\"100\"\n                            defaultValue = {inputdefault}\n                            style={{ marginTop: \"10px\", width: \"400px\", height: \"200px\" }} type=\"text\" id=\"input\" >\n                        </textarea>\n                        <button className=\"btn btn-primary\" style={{ marginLeft: \"10px\" }} id=\"button\" type=\"submit\">submit</button>\n                    </form>\n                </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Chapter3","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/chapter4/Chapter4.jsx",["292","293","294"],[],"import React from 'react'\nimport Sidebar from '../../components/sidebar/Sidebar'\nimport Navsection from '../../components/navbar/Navsection'\nimport './chapter4.scss'\nimport { useNavigate } from \"react-router-dom\"\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { far } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nconst Chapter4 = () => {\n\n    const obj1 =\n        `\n    public class People {\n        int age = 18;\n    }\n    `\n    const obj2 =\n        `\n    public class People {\n        int age = 18;\n      \n        public static void main (String[] args) {\n          People Mike = new People ();\n          System.out.println(Mike.age);\n        }\n    }\n\n    output:\n    18\n    `\n\n    const obj3 =\n        `\n    public class People {\n        int height = 180;\n      \n        public static void main(String[] args) {\n          People kevin = new People();  // Object 1 called Kevin\n          People Danny = new People();  // Object 2 called Danny\n          System.out.println(Kevin.height);\n          System.out.println(Danyy.height);\n        }\n      }      \n    `\n\n    const inputdefault  = \n  `\n  class YourFirstClass {\n    int YourFirstAttribute = 100;\n}\n//add your code here//\nSystem.out.print(YourFirstObj.YourFirstAttribute);\n  ` \n\n\n\n    const Code = ({ children }) => (\n        <SyntaxHighlighter language=\"java\" style={far}>\n            {children}\n        </SyntaxHighlighter>\n    );\n    // ----------------\n    const navigate = useNavigate();\n\n    const transfer = (txt) => {\n        if (txt.includes(\":)\")) {\n            setTimeout(() => navigate('/'), 500);\n\n        }\n    }\n    const submit = (e) => {\n        e.preventDefault();\n\n        const code = document.getElementById(\"input\").value;\n        const data = { code: code };\n        fetch('/api/code4', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.text())\n            .then(txt => alert(txt))\n        // .then(txt => transfer(txt))\n\n    }\n    return (\n        <div className='introduction'>\n            {/* <Sidebar /> */}\n            <div className=\"introductionContainer\">\n                {/* <Navsection /> */}\n                <div className=\"widgets\">\n                    <div className=\"left\">\n                        <span className=\"title\">\n                            <h1>Chapter 4: Java Classes and Objects</h1>\n                            <p >Java is an object-oriented language.\n                                For example, a person is an object. This person has attributes, such as hair color, age, height, and methods, such as walk and sleep.\n                                A class is like an object generator, which is used for producing objects.\n\n                            </p>\n\n                        </span>\n\n                    </div>\n                </div>\n                <div className=\"widgets\">\n                    <h2>Create a Class</h2>\n                    <p>We use the keyword <strong>\"class\"</strong> to create a class: (this class has an attribute called “age”)</p>\n                    <p>Create a class named \"People\" with a variable “age”:</p>\n                    <div className = \"example\">\n                          <h3>Example</h3>\n                    <pre className=\"code\" >\n                        <Code>{obj1}</Code>\n                    </pre>\n                    </div>\n\n                </div>\n\n\n                <div className=\"widgets\">\n                    <h2>Create an Object</h2>\n                    <p>We use the key word <strong>\"new\"</strong> to create a object.</p>\n                    <p>An object is created from a class, which means an object is an <strong>instance</strong> of a class and an object has to be created after its class being created:</p>\n                    <p>Now we use the previous <strong>\"People\"</strong> class to create an object called <strong>\"Mike\"</strong> and print the value of this object’s attribute (age):</p>\n                    <div className = \"example\">\n                          <h3>Example</h3>\n                    <pre className=\"code\" >\n                        <Code>{obj2}</Code>\n                    </pre>\n                    </div>\n\n                </div>\n                <div className=\"widgets\">\n                    <h2>More Objects relating to one class</h2>\n                    <p>This example creates two people <strong>\"Kevin\"</strong> and <strong>\"Danny\"</strong>:</p>\n                    <p><strong>\"People\"</strong> is the class, <strong>\"Kevin\"</strong> and <strong>\"Danny\"</strong> are objects of the class <strong>\"People\"</strong>.</p>\n                    <div className = \"example\">\n                          <h3>Example</h3>\n                    <pre className=\"code\" >\n                        <Code>{obj3}</Code>\n                    </pre>\n                    </div>\n                    <p>This example can be explained as a group of people whose heights are the same as 180.\n                        And the group people contains two members: Kevin and Danny.\n                    </p>\n\n                </div>\n\n\n\n\n\n\n\n\n\n                {/* <div className=\"widgets\">\n                    <h3>A Tutorial Video about Java Classes and Objects:</h3>\n                    <div style={{ \"border-radius\": '30px' }} dangerouslySetInnerHTML={{ __html: \"<iframe src='https://www.youtube.com/embed/Mm06BuD3PlY' frameborder='0' autoplay; allowfullscreen   />\" }} />\n                    <div className=\"\"></div>\n\n                </div> */}\n\n\n\n\n                <div className=\"widgets\">\n                <div className = \"exercise-div\">\n\n                    <h3 >Exercise: </h3>\n\n\n                    <p>\n                        Now you can use what you learned to create an object of “YourFirstClass” called “YourFirstObj”:        </p>\n                       <p>Then Adding the attribute named “YourFirstAttribute” to this class and set its value to 100</p> \n                        <p>                        Then try to print out the value of “YourFirstAttribute” in the main method:\n</p>\n\n            \n\n\n                    <form onSubmit={(e) => { submit(e) }}>\n                        <textarea\n                            class=\"input shadow\"\n                            name=\"name\"\n                            rows=\"15\"\n                            cols=\"100\"\n                            defaultValue = {inputdefault}\n\n\n                            style={{ marginTop: \"10px\", width: \"400px\", height: \"200px\" }} type=\"text\" id=\"input\" ></textarea>\n                        <button className=\"btn btn-primary\" style={{ marginLeft: \"10px\" }} id=\"button\" type=\"submit\">submit</button>\n                    </form>\n                </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Chapter4","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/substitutability/Substitutability.jsx",["295"],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/inputAndOutput/InputAndOutput.jsx",["296","297"],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/fixedLayout/FixedLayout.jsx",[],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/overloading/Overloading.jsx",["298"],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/encapsulation/Encapsulation.jsx",["299"],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/constructor/Constructor.jsx",["300"],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/array/Array.jsx",["301"],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/methods/Methods.jsx",["302"],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/inheritance/Inheritance.jsx",["303"],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/collection/Collection.jsx",["304","305","306","307","308"],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/lateBinding/LateBinding.jsx",[],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/fileHandling/FileHandling.jsx",[],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/overriding/Overriding.jsx",["309"],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/components/login/Login.jsx",["310","311"],[],"import \"./login.scss\"\r\n\r\nconst Login = ({login,register,timerContent}) =>{\r\n   return(\r\n    <div id = \"login-page\">\r\n        <div onClick = {() => {document.getElementById(\"login-page\").style.display = \"none\";document.getElementById(\"covering\").style.display = \"none\"}}\r\n             className = \"close-btn\">\r\n            <a ><i className=\"fa fa-times-circle\" aria-hidden=\"true\"></i></a>\r\n        </div>\r\n        <div className = \"login-title\">\r\n            Log in\r\n        \r\n        </div>\r\n\r\n\r\n        <div className = \"login-form\">\r\n            \r\n                <div className = \"login-input\">\r\n                {/* <label>User Name:</label> */}\r\n                <input id = \"name\" className =\"username\" type = \"text\"  placeholder=\"username\"/>\r\n                \r\n                </div>\r\n                \r\n\r\n                <div className = \"login-input\">\r\n                {/* <label>Password: </label> */}\r\n                <input id = \"passport\" className = \"password\" type = \"password\"  placeholder=\"password\"/>\r\n               \r\n                </div>\r\n                <div id = \"reminder\">{timerContent}</div>\r\n                <div className=\"login-btn-div\">\r\n                <button className = \"login-btn\" id = \"login\" \r\n                        onClick={()=> login(document.getElementsByClassName(\"username\").value, document.getElementsByClassName(\"password\").value)}>\r\n                    Log in\r\n                </button>\r\n                <button className = \"register\" id = \"register\"\r\n                        onClick={()=> register(document.getElementsByClassName(\"username\").value, document.getElementsByClassName(\"password\").value)}>\r\n                    register\r\n                </button>\r\n                </div>\r\n           \r\n        </div>\r\n\r\n    </div>\r\n\r\n   ) \r\n}\r\n\r\nexport default Login\r\n\r\n\r\n","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/chapter5/Chapter5.jsx",["312","313","314","315"],[],"import React from 'react'\nimport Sidebar from '../../components/sidebar/Sidebar'\nimport Navsection from '../../components/navbar/Navsection'\nimport './chapter4.scss'\nimport { useNavigate } from \"react-router-dom\"\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { far } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nconst Chapter5 = () => {\n\n    const obj1 =\n        `\n    public class People {\n        int age;  // Create a class attribute\n      \n        // Create a class constructor for the People class\n        public People() {\n          age = 17;  // Set the initial value for the class attribute age\n        }\n      \n        public static void main(String[] args) {\n          People Kevin = new People(); // Create an object of class People (This will call the constructor immediately)\n          System.out.println(Kevin.age); // Print the value of age\n        }\n      }\n      \n      // Outputs:\n       17\n    `\n    const obj2 =\n        `\n public class Car {\n  int modelYear;\n  String modelName;\n\n  public Car(int year, String name) {\n    modelYear = year;\n    modelName = name;\n  }\n\n  public static void main(String[] args) {\n    Car KevinCar = new Car(2022, \"Dream\");\n    System.out.println(KevinCar.modelYear + \" \" + KevinCar.modelName);\n  }\n}\n\n// Outputs:\n2022 Dream\n    `\n\n    const obj3 =\n        `\n    public class People {\n        int height = 180;\n      \n        public static void main(String[] args) {\n          People kevin = new People();  // Object 1 called Kevin\n          People Danny = new People();  // Object 2 called Danny\n          System.out.println(Kevin.age);\n          System.out.println(Danyy.age);\n        }\n      }      \n    `\n    const inputdefault =\n        `\n    public class Tool {\n        String color;\n      \n        public Tool(String name) {\n          //put your code here//\n      \n      \n        }\n      }\n        \n    Tool knife = new Tool( \"Black\");     \n    System.out.println(knife.color);\n    `\n\n    const Code = ({ children }) => (\n        <SyntaxHighlighter language=\"java\" style={far}>\n            {children}\n        </SyntaxHighlighter>\n    );\n    // ----------------\n    const navigate = useNavigate();\n\n    const transfer = (txt) => {\n        if (txt.includes(\":)\")) {\n            setTimeout(() => navigate('/'), 500);\n\n        }\n    }\n    const submit = (e) => {\n        e.preventDefault();\n\n        const code = document.getElementById(\"input\").value;\n        const data = { code: code };\n        fetch('/api/code5', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.text())\n            .then(txt => alert(txt))\n        // .then(txt => transfer(txt))\n\n    }\n    return (\n        <div className='introduction'>\n            {/* <Sidebar /> */}\n            <div className=\"introductionContainer\">\n                {/* <Navsection /> */}\n                <div className=\"widgets\">\n                    <div className=\"left\">\n                        <span className=\"title\">\n                            <h1>Chapter 5: Java Constructors</h1>\n                            <p >A constructor is one kind of method which is created for the goal of initializing objects (setting the initial value of attributes).\n\n                            </p>\n                            <p>Constructor is called immediately once an object of a class is created.</p>\n\n                        </span>\n\n                    </div>\n                </div>\n                <div className=\"widgets\">\n                    <h2>Create a constructor:</h2>\n                    <p>We have leanred to use the keyword “class” to create a class: </p>\n                    <p>In the previous chapter, we create a class named <strong>\"People\"</strong> with a variable <strong>“age”</strong></p>\n                    <p>Now we create a constructor to the class \"People\" and initialize the age value to 17:</p>\n                    <div className=\"example\">\n                        <h3>Example</h3>\n                        <pre className=\"code\" >\n                            <Code>{obj1}</Code>\n                        </pre>\n                    </div>\n\n                </div>\n\n\n                <div className=\"widgets\">\n                    <h2>Note</h2>\n                    <p>A constructor’s name must match with the class name </p>\n                    <p>In this case:  public class <strong>\"People\"</strong> match with constructor public <strong>\"People()\"</strong></p>\n                    <p>Moreover, the constructor cannot have a return type and it is called once the object is created.</p>\n                </div>\n                <div className=\"widgets\">\n                    <h2>Constructor Parameters</h2>\n                    <p>Constructors can also take parameters, which is used to initialize attributes.\n\n                    </p>                    <p>This example creates a class <strong>\"Car\"</strong> with two attributes and we pass two parameter to the constructor:</p>\n                    <div className=\"example\">\n                        <h3>Example</h3>\n                        <pre className=\"code\" >\n                            <Code>{obj2}</Code>\n                        </pre>\n                    </div>\n\n\n                </div>\n\n\n\n\n\n\n\n\n\n                {/* <div className=\"widgets\">\n                    <h3>A Tutorial Video about Java Constructor:</h3>\n                    <div style={{ \"border-radius\": '30px' }} dangerouslySetInnerHTML={{ __html: \"<iframe src='https://www.youtube.com/embed/jbcng9VhaSY' frameborder='0' autoplay; allowfullscreen   />\" }} />\n                    <div className=\"\"></div>\n\n                </div> */}\n\n\n\n\n                <div className=\"widgets\">\n                    <div className=\"exercise-div\">\n\n                        <h3 >Exercise: </h3>\n\n\n                        <p>\n                            1.Create a class called <strong>“Tool”</strong> with an String attribute called<strong>“color”</strong>.\n\n                        </p>\n                        <p>2.Create a constructor with a parameter called name.</p>\n                        <p>3.Then create an object called “Knife” with parameter value: “black”.</p>\n                        <p>4.Then use the main method of this class to output knife’s color value.\n                        </p>\n\n\n                        <form onSubmit={(e) => { submit(e) }}>\n                            <textarea\n                                class=\"input shadow\"\n                                name=\"name\"\n                                rows=\"15\"\n                                cols=\"100\"\n                                defaultValue={inputdefault}\n\n\n                                style={{ marginTop: \"10px\", width: \"400px\", height: \"200px\" }} type=\"text\" id=\"input\" ></textarea>\n                            <button className=\"btn btn-primary\" style={{ marginLeft: \"10px\" }} id=\"button\" type=\"submit\">submit</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Chapter5","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/chapter6/Chapter6.jsx",["316","317","318"],[],"import React from 'react'\nimport Sidebar from '../../components/sidebar/Sidebar'\nimport Navsection from '../../components/navbar/Navsection'\nimport './chapter4.scss'\nimport { useNavigate } from \"react-router-dom\"\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { far } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nconst Chapter6 = () => {\n\n    const obj1 =\n    `\n    public class People {\n            final int age = 18; \n            public static void main(String[] args) {\n              People Kevin = new People();\n              Kevin.age = 50; //this will cause this error: cannot assign a value to a final variable\n              System.out.println(Kevin.age);\n            }\n    }\n    `\n          \n      \n    \n    const obj2 =\n        `\n        public class People {\n            // this is a Static method\n            static void aBreatheMethod() {\n              System.out.println(\"Static method is being called without creating objects\");\n            }\n            // this is a Public method\n            public void aAngryMethod() {\n              System.out.println(\"this Public method has to be called by creating objects\");\n            }\n          \n            // Main method\n            public static void main(String[ ] args) {\n              aBreatheMethod();// Call the static method which is correct!\n              // aAngryMethod();This is wrong and would output an error!\n          \n              People Kevin = new People(); // Create an object called Kevin of People\n              Kevin. aAngryMethod (); // Call the public method after creating this object\n            }\n          }\n          \n    `\n\n    const obj3 =\n        `\n        // Code from filename: People.java\n        // this is an abstract class\n        abstract class People {\n          public String fname = \"Kevin\";\n          public int age = 18;\n          public abstract void study(); // abstract method\n        }\n        \n        // Subclass (inherit from People)\n        class Student extends People {\n          public int graduationYear = 2023;\n          public void study() { // the body of the abstract method is provided here\n            System.out.println(\"He is studying now\");\n          }\n        }\n        // End code from filename: People.java\n        \n        // Code from filename: Second.java\n        class Second {\n          public static void main(String[] args) {\n            // create an object of the Student class (which inherits attributes and methods from People)\n            Student myObj = new Student();\n        \n            System.out.println(\"Name: \" + myObj.fname);\n            System.out.println(\"Age: \" + myObj.age);\n            System.out.println(\"Graduation Year: \" + myObj.graduationYear);\n            myObj.study(); // call abstract method\n          }\n        }\n           \n    `\n    const inputdefault  = \n    `\n    public class Animal {\n        //put your code here//\n        }\n        Animal cat = new Animal();\n        System.out.println(cat.color);\n    ` \n    const Code = ({ children }) => (\n        <SyntaxHighlighter language=\"java\" style={far}>\n            {children}\n        </SyntaxHighlighter>\n    );\n    // ----------------\n    const navigate = useNavigate();\n\n    const transfer = (txt) => {\n        if (txt.includes(\":)\")) {\n            setTimeout(() => navigate('/'), 500);\n\n        }\n    }\n    const submit = (e) => {\n        e.preventDefault();\n\n        const code = document.getElementById(\"input\").value;\n        const data = { code: code };\n        fetch('/api/code6', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.text())\n            .then(txt => alert(txt))\n        // .then(txt => transfer(txt))\n\n    }\n    return (\n        <div className='introduction'>\n            {/* <Sidebar /> */}\n            <div className=\"introductionContainer\">\n                {/* <Navsection /> */}\n                <div className=\"widgets\">\n                    <div className=\"left\">\n                        <span className=\"title\">\n                            <h1>Chapter 6: Java Modifiers</h1>\n                            <p>We have seen the key world <strong>“public”</strong> in previous chapters.</p>\n                            <p>The <strong>“public”</strong> keyword is an access modifier, it is used to set the access level for classes, attributes, methods, and constructors.</p>\n                            <strong>We have two types of modifiers in Java:</strong>\n                            <ul>\n                                <li>access modifiers: define the access level</li>\n                                <li>non-access modifiers: other functionality instead of define the access level.</li>\n                            </ul>\n                        </span>\n\n                    </div>\n                </div>\n                <div className=\"widgets\">\n                    <h2>Access Modifiers</h2>\n                    <strong>For classes, you can use either public or default:</strong>\n                    <table class=\"demo\">\n                        <thead>\n                            <tr>\n                                <th>KeyWord</th>\n                                <th>Access Range</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>&nbsp;public</td>\n                                <td>&nbsp;The class is accessible by every class.<span ></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >default</span></em><span ></span></td>\n                                <td>&nbsp;The class is only accessible by classes which are located in the same package. This happens when you don't specify a modifier.&nbsp;<span></span></td>\n                            </tr>\n                        </tbody>\n                    </table>\n\n                    <strong>For attributes, methods and constructors, you can use the following keyword to control access:</strong>\n                    <table class=\"demo\">\n                        <thead>\n                            <tr>\n                                <th>KeyWord</th>\n                                <th>Access Range</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>&nbsp;public</td>\n                                <td>&nbsp;The code is accessible for all classes in the java file.<span ></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >private</span></em><span ></span></td>\n                                <td>&nbsp;The code is just and only accessible within the declared class.\n                                    &nbsp;<span></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >default</span></em><span ></span></td>\n                                <td>&nbsp;The class is only accessible by classes which are located in the same package. This happens when you don't specify a modifier. \n                                    &nbsp;<span></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >protected</span></em><span ></span></td>\n                                <td>&nbsp;The code is only accessible in the same package and subclasses.\n                                    &nbsp;<span></span></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n\n                <div className=\"widgets\">\n                    <h2>Non-Access Modifiers</h2>\n                    <strong>For classes, you can use final / abstract:</strong>\n                    <table class=\"demo\">\n                        <thead>\n                            <tr>\n                                <th>KeyWord</th>\n                                <th>Access Range</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>&nbsp;final</td>\n                                <td>&nbsp;It means this class cannot be inherited by other classes.<span ></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >abstract</span></em><span ></span></td>\n                                <td>&nbsp;It means this class cannot be utilized to create objects.\n                                    &nbsp;<span></span></td>\n                            </tr>\n                        </tbody>\n                    </table>\n\n                    <strong>For attributes and methods, you can use the one of the following:</strong>\n                    <table class=\"demo\">\n                        <thead>\n                            <tr>\n                                <th>KeyWord</th>\n                                <th>Access Range</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>&nbsp;final</td>\n                                <td>&nbsp;Attributes and methods cannot be overridden or changed.<span ></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >static</span></em><span ></span></td>\n                                <td>&nbsp;Attributes and methods belong to the class, rather than an object.\n                                    &nbsp;<span></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >abstract</span></em><span ></span></td>\n                                <td>&nbsp;Can only be used in an abstract class and can only be used on methods. \n                                    &nbsp;<span></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >transient</span></em><span ></span></td>\n                                <td>&nbsp;Attributes and methods are skipped when serializing \n                                    the object containing them.\n                                    &nbsp;<span></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >synchronized</span></em><span ></span></td>\n                                <td>&nbsp;Methods can only be accessed by one thread at a time.\n                                    &nbsp;<span></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >volatile</span></em><span ></span></td>\n                                <td>&nbsp;The value of an attribute is not cached thread-locally, and is always read from the \"main memory\".\n                                    &nbsp;<span></span></td>\n                            </tr>\n                            \n\n                            \n\n                        </tbody>\n                    </table>\n                </div>\n\n\n                <div className=\"widgets\">\n                    <h2>Follow Up</h2>\n                    <p>Next three examples will explain more precisely.</p>\n                \n                </div>\n\n\n                <div className=\"widgets\">\n                    <h2>final</h2>\n                    <p>When you want to declare an attribute with constancy, which means we don't want to change the attribute value, you can declare these attributes using <strong>\"final\"</strong>.</p>\n                    <p>In this example we declare the attribute age using the keyword <strong>\"final\"</strong>.</p>\n                    <div className = \"example\">\n                          <h3>Example</h3>\n                    <pre className=\"code\" >\n                        <Code>{obj1}</Code>\n                    </pre>\n                    </div>\n                </div>\n\n\n                <div className=\"widgets\">\n                    <h2>static</h2>\n                    <p>A static method ensures that this method can be accessed without\n                         creating an object of the class, which is quite different from public:</p>\n                         <p>An example to show the differences between static and public methods:</p>\n                         <div className = \"example\">\n                          <h3>Example</h3>\n                    <pre className=\"code\" >\n                        <Code>{obj2}</Code>\n                    </pre>\n                    </div>\n                </div>\n\n\n                <div className=\"widgets\">\n                    <h2>abstract</h2>\n                    <p>An abstract method belongs to an abstract class, and it does not own a body. Because the body is provided by the subclass:</p>\n                    <div className = \"example\">\n                          <h3>Example</h3>\n                    <pre className=\"code\" >\n                        <Code>{obj3}</Code>\n                    </pre>\n                    </div>\n                </div>\n\n\n\n\n\n\n{/* \n                <div className=\"widgets\">\n                    <h3>A Tutorial Video about Java Modifiers:</h3>\n                    <div style={{ \"border-radius\": '30px' }} dangerouslySetInnerHTML={{ __html: \"<iframe src='https://www.youtube.com/embed/L3N2CyYUR5c' frameborder='0' autoplay; allowfullscreen   />\" }} />\n                    <div className=\"\"></div>\n\n                </div> */}\n\n\n\n\n                <div className=\"widgets\">\n                <div className = \"exercise-div\">\n\n                    <h3 >Exercise: </h3>\n\n\n                    <p>\n                    We want to create a class called <strong>\"Animals\"</strong>with an unchangable attribute<strong>\"color\"</strong>.\n\n\n                    </p>\n                    <p>Then we use the keyword <strong>\"final\"</strong> to declare the attribute color.\n</p>\n<p>Initialize the attribute value: \"black\"</p>\n<p>Then print out this attribute value in the main method\n</p>\n\n\n                    <form onSubmit={(e) => { submit(e) }}>\n                        <textarea\n                            class=\"input shadow\"\n                            name=\"name\"\n                            rows=\"15\"\n                            cols=\"100\"\n                            defaultValue = {inputdefault}\n\n\n                            style={{ marginTop: \"10px\", width: \"400px\", height: \"200px\" }} type=\"text\" id=\"input\" ></textarea>\n                        <button className=\"btn btn-primary\" style={{ marginLeft: \"10px\" }} id=\"button\" type=\"submit\">submit</button>\n                    </form>\n                </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Chapter6","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/chapter7/Chapter7.jsx",["319","320","321","322","323"],[],"import React from 'react'\nimport Sidebar from '../../components/sidebar/Sidebar'\nimport Navsection from '../../components/navbar/Navsection'\nimport './chapter4.scss'\nimport { useNavigate } from \"react-router-dom\"\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { far } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nconst Chapter7 = () => {\n\n    const obj1 =\n        `\n    import package.name.Class;   // Import a single class which is from a package\n    import package.name.*;   // Import the whole package\n        \n    `\n\n\n\n    const obj2 =\n        `\n    import java.util.Scanner;\n    //import the a class called “Scanner” from the “java.util” package          \n    `\n\n    const obj3 =\n        `\n    import java.util.Scanner;\n\n    class People {\n            public static void main(String[] args){\n                Scanner myObj = new Scanner(System.in);\n                System.out.println(\"Enter name, age and salary:\");\n        \n                String name = myObj.nextLine();\n                int age = myObj.nextInt();\n                double salary = myObj.nextDouble();\n        \n                System.out.println(\"name: \"+ name);\n                System.out.println(\"Age: \"+age);\n                System.out.println(\"salary:\"+salary);\n        \n            }\n            \n    }\n\noutput//\nEnter name, age and salary:\nKevin\n18\n3000\nname: Kevin\nAge: 18\nsalary:3000.0          \n    `\n    const obj4 =\n        `\n    package myspecialpack;\n    class MySpecialPackageClass {\n        public static void main(String[] args) {\n        System.out.println(\"This is a package of my own!\");\n        }\n    }\n\n`\n    const obj5 =\n        `\nC:\\Users\\Your Name>java myspecialpack.MySpecialPackageClass\n`\n    const obj6 =\n        `\nThis is a package of my own!\n`\n\nconst inputdefault  = \n`\nimport java.lang.*;\nint a = 100, b = 200,maxi;\n//PUT YOUR CODE HERE//      \nSystem.out.print(maxi);\n` \n\n    const Code = ({ children }) => (\n        <SyntaxHighlighter language=\"java\" style={far}>\n            {children}\n        </SyntaxHighlighter>\n    );\n    // ----------------\n    const navigate = useNavigate();\n\n    const transfer = (txt) => {\n        if (txt.includes(\":)\")) {\n            setTimeout(() => navigate('/'), 500);\n\n        }\n    }\n    const submit = (e) => {\n        e.preventDefault();\n\n        const code = document.getElementById(\"input\").value;\n        const data = { code: code };\n        fetch('/api/code7', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.text())\n            .then(txt => alert(txt))\n        // .then(txt => transfer(txt))\n\n    }\n    return (\n        <div className='introduction'>\n            {/* <Sidebar /> */}\n            <div className=\"introductionContainer\">\n                {/* <Navsection /> */}\n                <div className=\"widgets\">\n                    <div className=\"left\">\n                        <span className=\"title\">\n                            <h1>Chapter 7: Java Packages</h1>\n                            <p>A Java package is like a file repository that contains all related classes.\n                                It is an excellent way to avoid same-name overlaps.\n                            </p>\n                            <strong>Two categories of packages:</strong>\n                            <ul>\n                                <li>Built-in Packages</li>\n                                <li>User defined Packages</li>\n                            </ul>\n                        </span>\n\n                    </div>\n                </div>\n                <div className=\"widgets\">\n                    <h2>Built-in Packages</h2>\n                    <p>There are many built-in packages in the Java API:\n                        The entire packages list are shown at <a href='https://docs.oracle.com/javase/8/docs/api/'>Oracles Official website</a>\n                    </p>\n                </div>\n\n\n                {/* <div className=\"widgets\">\n                    <h2>Non-Access Modifiers</h2>\n                    <strong>For classes, you can use final / abstract:</strong>\n                    <table class=\"demo\">\n                        <thead>\n                            <tr>\n                                <th>KeyWord</th>\n                                <th>Access Range</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>&nbsp;final</td>\n                                <td>&nbsp;It means this class cannot be inherited by other classes.<span ></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >abstract</span></em><span ></span></td>\n                                <td>&nbsp;It means this class cannot be utilized to create objects.\n                                    &nbsp;<span></span></td>\n                            </tr>\n                        </tbody>\n                    </table>\n\n                    <strong>For attributes and methods, you can use the one of the following:</strong>\n                    <table class=\"demo\">\n                        <thead>\n                            <tr>\n                                <th>KeyWord</th>\n                                <th>Access Range</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>&nbsp;final</td>\n                                <td>&nbsp;Attributes and methods cannot be overridden or changed.<span ></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >static</span></em><span ></span></td>\n                                <td>&nbsp;Attributes and methods belong to the class, rather than an object.\n                                    &nbsp;<span></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >abstract</span></em><span ></span></td>\n                                <td>&nbsp;Can only be used in an abstract class and can only be used on methods.\n                                    &nbsp;<span></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >transient</span></em><span ></span></td>\n                                <td>&nbsp;Attributes and methods are skipped when serializing\n                                    the object containing them.\n                                    &nbsp;<span></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >synchronized</span></em><span ></span></td>\n                                <td>&nbsp;Methods can only be accessed by one thread at a time.\n                                    &nbsp;<span></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >volatile</span></em><span ></span></td>\n                                <td>&nbsp;The value of an attribute is not cached thread-locally, and is always read from the \"main memory\".\n                                    &nbsp;<span></span></td>\n                            </tr>\n\n\n\n\n                        </tbody>\n                    </table>\n                </div> */}\n\n\n                {/* <div className=\"widgets\">\n                    <h2>Follow Up</h2>\n                    <p>Next three examples will explain more precisely</p>\n\n                </div> */}\n\n\n                <div className=\"widgets\">\n                    <h2>Syntax</h2>\n                    <div className = \"example\">\n                          <h3>Example</h3>\n                    <pre className=\"code\" >\n                        <Code>{obj1}</Code>\n                    </pre>\n                    </div>\n                </div>\n\n\n                <div className=\"widgets\">\n                <div className = \"example\">\n                          <h3>Example</h3>\n                    <pre className=\"code\" >\n                        <Code>{obj2}</Code>\n                    </pre>\n                    </div>\n                </div>\n\n\n                <div className=\"widgets\">\n                    <h2>One More Example</h2>\n                    <p>Using the Scanner class to get user input:</p>\n                    <div className = \"example\">\n                          <h3>Example</h3>\n                    <pre className=\"code\" >\n                        <Code>{obj3}</Code>\n                    </pre>\n                    </div>\n                </div>\n                <div className=\"widgets\">\n                    <h2>User-defined Packages</h2>\n                    <p>MySpecialPackageClass.java</p>\n                    <div className = \"example\">\n                          <h3>Example</h3>\n                    <pre className=\"code\" >\n                        <Code>{obj4}</Code>\n                    </pre>\n                    </div>\n                    <strong>This let the compiler to generate the \"myspecialpack\" package.\n                        The package name should be written in lower case to avoid conflict with exact the same name of class names.\n                    </strong>\n                    <p>To run the MySpecialPackageClass.java file, write the following:</p>\n                    <div className = \"example\">\n                          <h3>Example</h3>\n                    <pre className=\"code\" >\n                        <Code>{obj5}</Code>\n                    </pre>\n                    </div>\n                    <p>The output will be:</p>\n                    <div className = \"example\">\n                          <h3>Example</h3>\n                    <pre className=\"code\" >\n                        <Code>{obj6}</Code>\n                    </pre>\n                    </div>\n                </div>\n\n\n\n\n\n\n{/* \n                <div className=\"widgets\">\n                    <h3>A Tutorial Video about Java Packages:</h3>\n                    <div style={{ \"border-radius\": '30px' }} dangerouslySetInnerHTML={{ __html: \"<iframe src='https://www.youtube.com/embed/ipMdsje9J6s' frameborder='0' autoplay; allowfullscreen   />\" }} />\n                    <div className=\"\"></div>\n\n                </div> */}\n\n\n\n\n                <div className=\"widgets\">\n                <div className = \"exercise-div\">\n\n                    <h3 >Exercise: </h3>\n\n\n                    <p> 1.Declare three integer variables a =100, b=200, maxi;\n                 </p>\n<p>2.Import the build-in Java Package : lang</p>\n<p>3.Use its Math.max() method to output the greater one between a and b  </p>\n\n\n                    <form onSubmit={(e) => { submit(e) }}>\n                        <textarea\n                            class=\"input shadow\"\n                            name=\"name\"\n                            rows=\"15\"\n                            cols=\"100\"\n                            defaultValue = {inputdefault}\n\n\n                            style={{ marginTop: \"10px\", width: \"400px\", height: \"200px\" }} type=\"text\" id=\"input\" ></textarea>\n                        <button className=\"btn btn-primary\" style={{ marginLeft: \"10px\" }} id=\"button\" type=\"submit\">submit</button>\n                    </form>\n                </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Chapter7","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/chapter8/Chapter8.jsx",["324","325","326","327","328","329","330","331"],[],"import React from 'react'\nimport Sidebar from '../../components/sidebar/Sidebar'\nimport Navsection from '../../components/navbar/Navsection'\nimport './chapter4.scss'\nimport { useNavigate } from \"react-router-dom\"\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { far } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nconst Chapter8 = () => {\n\n    const obj1 =\n        `\n        if (statement) {\n            // block of code to be executed if the value of this statement is true\n        }\n        `\n\n\n\n    const obj2 =\n        `\n        if (statement) {\n            // block of code to be executed if the the value of this statement is true\n          } else {\n            // block of code to be executed if the value of this statement is false\n          }         \n    `\n    const obj20 =\n    `\n    if (statement) {\n        System.out.print(\"statement is true\")// block of code to be executed if the the value of this statement is true\n      } else {\n        System.out.print(\"statement is false\")// block of code to be executed if the value of this statement is false\n      }         \n`\n\n    const obj3 =\n        `\n        import java.io.IOException;\n        import java.io.File;\n        \n        public class CreateFile {\n            public static void main(String[] args){\n                try{\n                    File myObj =new File(\"/Users/kuidou/Documents/filename_kuidou.txt\");\n                    if (myObj.createNewFile()){\n                        System.out.println(\"File created: \"+ myObj.getName());\n                    }else{\n                        System.out.println(\"File already exists.\");\n                    }\n                } catch(IOException e){\n                    System.out.println(\"An error ocurred.\");\n                    e.printStackTrace();\n        \n                }\n            }\n        }\n        `\n    const obj4 =\n        `\n    package myspecialpack;\n    class MySpecialPackageClass {\n        public static void main(String[] args) {\n        System.out.println(\"This is a package of my own!\");\n        }\n    }\n\n`\n    const obj5 =\n        `\nC:\\Users\\Your Name>java myspecialpack.MySpecialPackageClass\n`\n    const obj6 =\n        `\nThis is a package of my own!\n`\n\nconst inputdefault  = \n`\nint a=1,b=2,c=3,d=4,e=5,f=6,g=7,day;\n\nString Day(int day){\n//finish your code here//\n\n    if (           ) {\n        return(\"Today is Monday\");\n      } else if(day==b) {\n        return(\"Today is Tuesday\");\n      } else if(day==c) {\n        return(\"Today is Wednesday\");\n      } else if(day==d) {\n        return(\"Today is Thursday\");\n      } else if(day==e) {\n        return(\"Today is Friday\");\n      } else if(day==f) {\n        return(\"Today is Saturday\");\n      } else{\n        return(\"Today is Sunday\");\n      } \n}\nSystem.out.print(Day(7))\n` \n\n    const Code = ({ children }) => (\n        <SyntaxHighlighter language=\"java\" style={far}>\n            {children}\n        </SyntaxHighlighter>\n    );\n    // ----------------\n    const navigate = useNavigate();\n\n    const transfer = (txt) => {\n        if (txt.includes(\":)\")) {\n            setTimeout(() => navigate('/'), 500);\n\n        }\n    }\n    const submit = (e) => {\n        e.preventDefault();\n\n        const code = document.getElementById(\"input\").value;\n        const data = { code: code };\n        fetch('/api/code8', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.text())\n            .then(txt => alert(txt))\n        // .then(txt => transfer(txt))\n\n    }\n    return (\n        <div className='introduction'>\n            {/* <Sidebar /> */}\n            <div className=\"introductionContainer\">\n                {/* <Navsection /> */}\n                <div className=\"widgets\">\n                    <div className=\"left\">\n                        <span className=\"title\">\n                            <h1>Chapter 8: Java Conditional Statements</h1>\n                            <strong>Java supports the usual logical conditions from mathematics:\n\n                            </strong>\n\n\n                            <ul>\n                                <li>Less than: x &lt;\t y </li>\n                                <li>Less than or equal to: x &le;\n                                    y\n                                </li>\n                                <li>Greater than: x &gt;\t y\n                                </li>\n                                <li>Greater than or equal to: x &ge;\n                                    y\n                                </li>\n                                <li>Equal to x == y\n                                </li>\n                                <li>Not Equal to: x != y\n                                </li>\n\n                            </ul>\n                            <strong>Java has the following conditional statements:</strong>\n                                <ul>\n                                    <li>Use \"if\" to let a piece of code to be executed, if a specified statement is true</li>\n                                    <li>Use \"else\" to let a piece of code to be executed, if the first statement is false</li>\n                                    <li>Use \"else\" if to let a new condition to test, if the first condition is false</li>\n                                    <li>Use \"switch\" to let one of several alternative pieces of code to be executed</li>\n                                </ul>\n\n\n                        </span>\n\n                    </div>\n                </div>\n                <div className=\"widgets\">\n                    <h2>The if Statement\n</h2>\n<strong>Syntax</strong>\n<div className = \"example\">\n                          <h3>Example</h3>\n<pre className=\"code\" >\n                        <Code>{obj1}</Code>\n                    </pre>\n                    </div>\n\n                \n                </div>\n\n\n                {/* <div className=\"widgets\">\n                    <h2>Non-Access Modifiers</h2>\n                    <strong>For classes, you can use final / abstract:</strong>\n                    <table class=\"demo\">\n                        <thead>\n                            <tr>\n                                <th>KeyWord</th>\n                                <th>Access Range</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>&nbsp;final</td>\n                                <td>&nbsp;It means this class cannot be inherited by other classes.<span ></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >abstract</span></em><span ></span></td>\n                                <td>&nbsp;It means this class cannot be utilized to create objects.\n                                    &nbsp;<span></span></td>\n                            </tr>\n                        </tbody>\n                    </table>\n\n                    <strong>For attributes and methods, you can use the one of the following:</strong>\n                    <table class=\"demo\">\n                        <thead>\n                            <tr>\n                                <th>KeyWord</th>\n                                <th>Access Range</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>&nbsp;final</td>\n                                <td>&nbsp;Attributes and methods cannot be overridden or changed.<span ></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >static</span></em><span ></span></td>\n                                <td>&nbsp;Attributes and methods belong to the class, rather than an object.\n                                    &nbsp;<span></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >abstract</span></em><span ></span></td>\n                                <td>&nbsp;Can only be used in an abstract class and can only be used on methods.\n                                    &nbsp;<span></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >transient</span></em><span ></span></td>\n                                <td>&nbsp;Attributes and methods are skipped when serializing\n                                    the object containing them.\n                                    &nbsp;<span></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >synchronized</span></em><span ></span></td>\n                                <td>&nbsp;Methods can only be accessed by one thread at a time.\n                                    &nbsp;<span></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >volatile</span></em><span ></span></td>\n                                <td>&nbsp;The value of an attribute is not cached thread-locally, and is always read from the \"main memory\".\n                                    &nbsp;<span></span></td>\n                            </tr>\n\n\n\n\n                        </tbody>\n                    </table>\n                </div> */}\n\n\n                {/* <div className=\"widgets\">\n                    <h2>Follow Up</h2>\n                    <p>Next three examples will explain more precisely</p>\n\n                </div> */}\n\n\n                <div className=\"widgets\">\n                    <h1>The else Statement</h1>\n                    <strong>Syntax</strong>\n                    <div className = \"example\">\n                          <h3>Example</h3>\n                    <pre className=\"code\" >\n                        <Code>{obj2}</Code>\n                    </pre>\n                    </div>\n                </div>\n\n\n                <div className=\"widgets\">\n                <div className = \"example\">\n                          <h3>Example</h3>\n                    <pre className=\"code\" >\n                        <Code>{obj20}</Code>\n                    </pre>\n                    </div>\n                </div>\n\n\n                <div className=\"widgets\">\n                    <h2>One More Example</h2>\n                    <p>Import the package and use it to create files in the if statements:</p>\n                    <div className = \"example\">\n                          <h3>Example</h3>\n                    <pre className=\"code\" >\n                        <Code>{obj3}</Code>\n                    </pre>\n                    </div>\n                </div>\n                {/* <div className=\"widgets\">\n                    <h2>User-defined Packages</h2>\n                    <p>MySpecialPackageClass.java</p>\n                    <pre className=\"code\" >\n                        <Code>{obj4}</Code>\n                    </pre>\n                    <strong>This let the compiler to generate the \"myspecialpack\" package.\n                        The package name should be written in lower case to avoid conflict with exact the same name of class names.\n                    </strong>\n                    <p>To run the MySpecialPackageClass.java file, write the following:</p>\n                    <pre className=\"code\" >\n                        <Code>{obj5}</Code>\n                    </pre>\n                    <p>The output will be:</p>\n                    <pre className=\"code\" >\n                        <Code>{obj6}</Code>\n                    </pre>\n                </div> */}\n\n\n\n\n\n\n\n                {/* <div className=\"widgets\">\n                    <h3>A Tutorial Video about Java Conditional Statements:</h3>\n                    <div style={{ \"border-radius\": '30px' }} dangerouslySetInnerHTML={{ __html: \"<iframe src='https://www.youtube.com/embed/WxKuolkQoPo' frameborder='0' autoplay; allowfullscreen   />\" }} />\n                    <div className=\"\"></div>\n\n                </div> */}\n\n\n\n\n                <div className=\"widgets\">\n                <div className = \"exercise-div\">\n\n                    <h3 >Exercise: </h3>\n\n\n                    <p>\n                        Follow the steps in this chapter and try to create a java file that take a integer input from 1 to 7, and output \"Monday to Sunday\" according to this input integer.\n                    </p>\n\n\n                    <form onSubmit={(e) => { submit(e) }}>\n                        <textarea\n                            class=\"input shadow\"\n                            name=\"name\"\n                            rows=\"15\"\n                            cols=\"100\"\n                            defaultValue = {inputdefault}\n\n\n                            style={{ marginTop: \"10px\", width: \"400px\", height: \"200px\" }} type=\"text\" id=\"input\" ></textarea>\n                        <button className=\"btn btn-primary\" style={{ marginLeft: \"10px\" }} id=\"button\" type=\"submit\">submit</button>\n                    </form>\n                </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Chapter8","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/chapter9/Chapter9.jsx",["332","333","334","335","336","337","338","339","340","341","342"],[],"import React from 'react'\nimport Sidebar from '../../components/sidebar/Sidebar'\nimport Navsection from '../../components/navbar/Navsection'\nimport './chapter4.scss'\nimport { useNavigate } from \"react-router-dom\"\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { far } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nconst Chapter9 = () => {\n\n    const obj1 =\n        `\n        // this is an Abstract class\n        abstract class Creature {\n          // Abstract method (does not have a body)\n          public abstract void creatureSound();\n          // Regular method\n          public void eat() {\n            System.out.println(\"yammmy\");\n          }\n        }\n        \n        // Subclass (inherit from Animal)\n        class dog extends Creature {\n          public void creatureSound() {\n            // The body of creatureSound() is provided here\n            System.out.println(\"The pig says: wee wee\");\n          }\n        }\n        class Main {\n          public static void main(String[] args) {\n            Dog mDog = new Dog(); // Create a Dog object\n            myDog.creatureSound();\n            myDog.eat();\n          }\n        }\n        \n        `\n\n\n\nconst obj2 =\n`\nif (statement) {\n                    // block of code to be executed if the value of this statement is true\n} else {\n                    // block of code to be executed if the value of this statement is false\n}         \n`\n\n    const obj3 =\n        `\n        import java.io.IOException;\n        import java.io.File;\n        \n        public class CreateFile {\n            public static void main(String[] args){\n                try{\n                    File myObj =new File(\"/Users/kuidou/Documents/filename_kuidou.txt\");\n                    if (myObj.createNewFile()){\n                        System.out.println(\"File created: \"+ myObj.getName());\n                    }else{\n                        System.out.println(\"File already exists.\");\n                    }\n                } catch(IOException e){\n                    System.out.println(\"An error ocurred.\");\n                    e.printStackTrace();\n        \n                }\n            }\n        }\n        `\n    const obj4 =\n        `\n    package myspecialpack;\n    class MySpecialPackageClass {\n        public static void main(String[] args) {\n        System.out.println(\"This is a package of my own!\");\n        }\n    }\n\n`\n    const obj5 =\n        `\nC:\\Users\\Your Name>java myspecialpack.MySpecialPackageClass\n`\n    const obj6 =\n        `\nThis is a package of my own!\n`\n\nconst obj15=\n`\nabstract class Animal {\n    public abstract void animalSound();\n    public void sleep() {\n      System.out.println(\"Zzz\");\n    }\n  }\n`\nconst obj16=\n`\nAnimal newObj = new Animal(); // this will produce an error\n`\n    const Code = ({ children }) => (\n        <SyntaxHighlighter language=\"java\" style={far}>\n            {children}\n        </SyntaxHighlighter>\n    );\n    // ----------------\n    const navigate = useNavigate();\n\n    const transfer = (txt) => {\n        if (txt.includes(\":)\")) {\n            setTimeout(() => navigate('/'), 500);\n\n        }\n    }\n    const submit = (e) => {\n        e.preventDefault();\n\n        const code = document.getElementById(\"input\").value;\n        const data = { code: code };\n        fetch('/code4', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data)\n        })\n            .then(res => res.text())\n            .then(txt => alert(txt))\n        // .then(txt => transfer(txt))\n\n    }\n    return (\n        <div className='introduction'>\n            {/* <Sidebar /> */}\n            <div className=\"introductionContainer\">\n                {/* <Navsection /> */}\n                <div className=\"widgets\">\n                    <div className=\"left\">\n                        <span className=\"title\">\n                            <h1>Chapter 9: Java Abstraction</h1>\n                            <p>Abstract Classes and Methods:</p>\n                            <p>Data abstraction is the process of hiding certain details and showing only essential information to the user.\nAbstraction can be achieved with either abstract classes or interfaces.</p>\n                            <p></p>\n                            <p style={{color:\"darkred\"}}>The abstract keyword is a non-access modifier, applied by classes and methods:\n\n                            </p>\n\n                            <ul>\n                                <li><strong>Abstract class:</strong> is a restricted class that cannot be used to create objects (to access it, it must be inherited from another class).\n\n                                </li>\n                                <li><strong>Abstract method:</strong> can only be used in an abstract class, and it does not have a body. The body is provided by the subclass (inherited from).</li>\n                            </ul>\n                        </span>\n\n                    </div>\n                </div>\n\n                <div className=\"widgets\">\n                    <h2>Example\n                    </h2>\n                    <strong>An abstract class can have both abstract and regular methods:\n\n</strong>\n                    <div className = \"example\">\n                    <pre className=\"code\" >\n                        <Code>{obj15}</Code>\n                    </pre>\n                    <p>From this example above, it is impossible to create an object of the Animal class:\n\n</p>\n<pre className=\"code\" >\n                        <Code>{obj16}</Code>\n                    </pre>\n                    </div>\n\n\n                </div>\n\n                <div className=\"widgets\">\n                    <h2>To access the abstract class, it must be inherited from another class. </h2>\n\n                    <div className = \"example\">\n                          <h3>Example</h3>\n                    <pre className=\"code\" >\n                        <Code>{obj1}</Code>\n                    </pre>\n                    </div>\n\n\n                </div>\n\n\n                {/* <div className=\"widgets\">\n                    <h2>Non-Access Modifiers</h2>\n                    <strong>For classes, you can use final / abstract:</strong>\n                    <table class=\"demo\">\n                        <thead>\n                            <tr>\n                                <th>KeyWord</th>\n                                <th>Access Range</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>&nbsp;final</td>\n                                <td>&nbsp;It means this class cannot be inherited by other classes.<span ></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >abstract</span></em><span ></span></td>\n                                <td>&nbsp;It means this class cannot be utilized to create objects.\n                                    &nbsp;<span></span></td>\n                            </tr>\n                        </tbody>\n                    </table>\n\n                    <strong>For attributes and methods, you can use the one of the following:</strong>\n                    <table class=\"demo\">\n                        <thead>\n                            <tr>\n                                <th>KeyWord</th>\n                                <th>Access Range</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>&nbsp;final</td>\n                                <td>&nbsp;Attributes and methods cannot be overridden or changed.<span ></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >static</span></em><span ></span></td>\n                                <td>&nbsp;Attributes and methods belong to the class, rather than an object.\n                                    &nbsp;<span></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >abstract</span></em><span ></span></td>\n                                <td>&nbsp;Can only be used in an abstract class and can only be used on methods.\n                                    &nbsp;<span></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >transient</span></em><span ></span></td>\n                                <td>&nbsp;Attributes and methods are skipped when serializing\n                                    the object containing them.\n                                    &nbsp;<span></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >synchronized</span></em><span ></span></td>\n                                <td>&nbsp;Methods can only be accessed by one thread at a time.\n                                    &nbsp;<span></span></td>\n                            </tr>\n                            <tr>\n                                <td>&nbsp;<em ><span >volatile</span></em><span ></span></td>\n                                <td>&nbsp;The value of an attribute is not cached thread-locally, and is always read from the \"main memory\".\n                                    &nbsp;<span></span></td>\n                            </tr>\n\n\n\n\n                        </tbody>\n                    </table>\n                </div> */}\n\n\n                {/* <div className=\"widgets\">\n                    <h2>Follow Up</h2>\n                    <p>Next three examples will explain more precisely</p>\n\n                </div> */}\n\n\n               \n                {/* <div className=\"widgets\">\n                    <h2>User-defined Packages</h2>\n                    <p>MySpecialPackageClass.java</p>\n                    <pre className=\"code\" >\n                        <Code>{obj4}</Code>\n                    </pre>\n                    <strong>This let the compiler to generate the \"myspecialpack\" package.\n                        The package name should be written in lower case to avoid conflict with exact the same name of class names.\n                    </strong>\n                    <p>To run the MySpecialPackageClass.java file, write the following:</p>\n                    <pre className=\"code\" >\n                        <Code>{obj5}</Code>\n                    </pre>\n                    <p>The output will be:</p>\n                    <pre className=\"code\" >\n                        <Code>{obj6}</Code>\n                    </pre>\n                </div> */}\n\n\n\n\n\n{/* \n\n                <div className=\"widgets\">\n                    <h3>A Tutorial Video about Java Abstraction:</h3>\n                    <div style={{ \"border-radius\": '30px' }} dangerouslySetInnerHTML={{ __html: \"<iframe src='https://www.youtube.com/embed/SwAkGw4K8D4' frameborder='0' autoplay; allowfullscreen   />\" }} />\n                    <div className=\"\"></div>\n\n                </div> */}\n\n\n{/* \n\n                <div className=\"widgets\">\n                    <h3 >Exercise: </h3>\n\n\n                    <p>\n                        Follow the steps in this chapter and write a abstarct class and a abstract method\n                    </p>\n\n\n                    <form onSubmit={(e) => { submit(e) }}>\n                        <textarea\n                            class=\"input shadow\"\n                            name=\"name\"\n                            rows=\"15\"\n                            cols=\"100\"\n                            placeholder=\"please enter your Java code here:\"\n\n\n                            style={{ marginTop: \"10px\", width: \"400px\", height: \"200px\" }} type=\"text\" id=\"input\" ></textarea>\n                        <button className=\"btn btn-primary\" style={{ marginLeft: \"10px\" }} id=\"button\" type=\"submit\">submit</button>\n                    </form>\n                </div> */}\n            </div>\n        </div>\n    )\n}\nexport default Chapter9","/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/exercise1/Exercise1.jsx",[],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/exercise2/Exercise2.jsx",[],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/exercise3/Exercise3.jsx",[],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/exercise4/Exercise4.jsx",[],[],"/Users/kuidou/Documents/CS/5098/demo-a-java-tutor copy/frontend/src/Pages/exercise5/Exercise5.jsx",["343","344"],[],"import './home.scss';\nimport Sidebar from '../../components/sidebar/Sidebar';\nimport Navsection from '../../components/navbar/Navsection';\nimport { useNavigate } from 'react-router-dom';\n\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { far } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\n\nconst Exercise5 = () => {\n\n\n  const obj100 =\n    `\n1+2=3\n    `\n\n  const Code = ({ children }) => (\n    <SyntaxHighlighter language=\"java\" style={far}>\n      {children}\n    </SyntaxHighlighter>\n  );\n\n  const navigate = useNavigate();\n\n  const transfer = (res) => {\n    if (res.includes(\":)\")) {\n      alert(\"You would go to the Chapter Introduction to enhance your knowledge!\")\n      setTimeout(() => navigate('/introduction'), 500);\n\n    }\n  }\n  const submit = (e) => {\n    e.preventDefault();\n\n    const code = document.getElementById(\"input\").value;\n    const data = { code: code };\n\n\n    fetch('/api/home/codehome5', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.text())\n      .then(res => alert(res))\n\n\n\n\n    fetch('/api/home/codehome5', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      // .then(ans=>{\n      //   document.getElementById(\"hint\").style.display=\"block\"\n      //   document.getElementById(\"hint\").innerText=ans.getkey()\n\n      // })\n      .then(res => { transfer(res) })\n\n  }\n\n  return (\n    <div className='home'>\n\n      <div className=\"homecontainer\">\n     \n    \n\n        <div className=\"widgets\">\n        <div className = \"exercise-div\">\n\n          <h3 >Exercise5: </h3>\n          <p>Please try to output the below putput by using the basic Syntax (System.out.println())</p>\n          <pre className=\"code\" >\n              <Code>{obj100}</Code>\n            </pre>\n\n          <form onSubmit={(e) => { submit(e) }}>\n            <textarea\n              class=\"input shadow\"\n              name=\"name\"\n              rows=\"15\"\n              cols=\"100\"\n              placeholder=\"please enter your Java code here:\"\n\n\n              style={{ marginTop: \"10px\", width: \"400px\", height: \"200px\" }} type=\"text\" id=\"input\" ></textarea>\n            <button className=\"btn btn-primary\" style={{ marginLeft: \"10px\" }} id=\"button\" type=\"submit\">submit</button>\n          </form>\n        </div>\n        </div>\n \n\n      </div>\n\n    </div>\n  )\n}\n\nexport default Exercise5",{"ruleId":"345","severity":1,"message":"346","line":6,"column":10,"nodeType":"347","messageId":"348","endLine":6,"endColumn":16},{"ruleId":"345","severity":1,"message":"349","line":64,"column":10,"nodeType":"347","messageId":"348","endLine":64,"endColumn":14},{"ruleId":"350","severity":1,"message":"351","line":94,"column":28,"nodeType":"352","messageId":"353","endLine":94,"endColumn":30},{"ruleId":"350","severity":1,"message":"351","line":200,"column":39,"nodeType":"352","messageId":"353","endLine":200,"endColumn":41},{"ruleId":"345","severity":1,"message":"354","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":15},{"ruleId":"345","severity":1,"message":"355","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":18},{"ruleId":"345","severity":1,"message":"356","line":43,"column":9,"nodeType":"347","messageId":"348","endLine":43,"endColumn":15},{"ruleId":"345","severity":1,"message":"354","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":15},{"ruleId":"345","severity":1,"message":"355","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":18},{"ruleId":"345","severity":1,"message":"357","line":26,"column":11,"nodeType":"347","messageId":"348","endLine":26,"endColumn":19},{"ruleId":"345","severity":1,"message":"358","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":25},{"ruleId":"345","severity":1,"message":"359","line":7,"column":8,"nodeType":"347","messageId":"348","endLine":7,"endColumn":21},{"ruleId":"345","severity":1,"message":"360","line":8,"column":8,"nodeType":"347","messageId":"348","endLine":8,"endColumn":18},{"ruleId":"345","severity":1,"message":"361","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":31},{"ruleId":"345","severity":1,"message":"362","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":26},{"ruleId":"345","severity":1,"message":"363","line":4,"column":8,"nodeType":"347","messageId":"348","endLine":4,"endColumn":28},{"ruleId":"345","severity":1,"message":"364","line":5,"column":8,"nodeType":"347","messageId":"348","endLine":5,"endColumn":28},{"ruleId":"345","severity":1,"message":"365","line":6,"column":8,"nodeType":"347","messageId":"348","endLine":6,"endColumn":37},{"ruleId":"345","severity":1,"message":"354","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":15},{"ruleId":"345","severity":1,"message":"355","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":18},{"ruleId":"345","severity":1,"message":"357","line":61,"column":11,"nodeType":"347","messageId":"348","endLine":61,"endColumn":19},{"ruleId":"345","severity":1,"message":"354","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":15},{"ruleId":"345","severity":1,"message":"355","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":18},{"ruleId":"345","severity":1,"message":"354","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":15},{"ruleId":"345","severity":1,"message":"355","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":18},{"ruleId":"345","severity":1,"message":"366","line":5,"column":10,"nodeType":"347","messageId":"348","endLine":5,"endColumn":21},{"ruleId":"345","severity":1,"message":"354","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":15},{"ruleId":"345","severity":1,"message":"355","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":18},{"ruleId":"345","severity":1,"message":"367","line":64,"column":11,"nodeType":"347","messageId":"348","endLine":64,"endColumn":19},{"ruleId":"345","severity":1,"message":"368","line":49,"column":8,"nodeType":"347","messageId":"348","endLine":49,"endColumn":12},{"ruleId":"369","severity":1,"message":"370","line":8,"column":12,"nodeType":"347","messageId":"371","endLine":8,"endColumn":18},{"ruleId":"372","severity":1,"message":"373","line":57,"column":7,"nodeType":"374","messageId":"375","endLine":57,"endColumn":21},{"ruleId":"369","severity":1,"message":"370","line":7,"column":16,"nodeType":"347","messageId":"371","endLine":7,"endColumn":22},{"ruleId":"369","severity":1,"message":"370","line":7,"column":12,"nodeType":"347","messageId":"371","endLine":7,"endColumn":18},{"ruleId":"369","severity":1,"message":"370","line":7,"column":16,"nodeType":"347","messageId":"371","endLine":7,"endColumn":22},{"ruleId":"369","severity":1,"message":"370","line":9,"column":12,"nodeType":"347","messageId":"371","endLine":9,"endColumn":18},{"ruleId":"369","severity":1,"message":"370","line":7,"column":21,"nodeType":"347","messageId":"371","endLine":7,"endColumn":27},{"ruleId":"369","severity":1,"message":"370","line":9,"column":17,"nodeType":"347","messageId":"371","endLine":9,"endColumn":23},{"ruleId":"345","severity":1,"message":"376","line":9,"column":13,"nodeType":"347","messageId":"348","endLine":9,"endColumn":19},{"ruleId":"345","severity":1,"message":"368","line":69,"column":9,"nodeType":"347","messageId":"348","endLine":69,"endColumn":13},{"ruleId":"345","severity":1,"message":"377","line":72,"column":9,"nodeType":"347","messageId":"348","endLine":72,"endColumn":13},{"ruleId":"345","severity":1,"message":"378","line":78,"column":9,"nodeType":"347","messageId":"348","endLine":78,"endColumn":13},{"ruleId":"345","severity":1,"message":"379","line":119,"column":9,"nodeType":"347","messageId":"348","endLine":119,"endColumn":17},{"ruleId":"369","severity":1,"message":"370","line":7,"column":16,"nodeType":"347","messageId":"371","endLine":7,"endColumn":22},{"ruleId":"380","severity":1,"message":"381","line":8,"column":13,"nodeType":"382","endLine":8,"endColumn":17},{"ruleId":"383","severity":1,"message":"384","line":8,"column":13,"nodeType":"382","endLine":8,"endColumn":17},{"ruleId":"345","severity":1,"message":"354","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":15},{"ruleId":"345","severity":1,"message":"355","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":18},{"ruleId":"345","severity":1,"message":"385","line":50,"column":11,"nodeType":"347","messageId":"348","endLine":50,"endColumn":15},{"ruleId":"345","severity":1,"message":"367","line":87,"column":11,"nodeType":"347","messageId":"348","endLine":87,"endColumn":19},{"ruleId":"345","severity":1,"message":"354","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":15},{"ruleId":"345","severity":1,"message":"355","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":18},{"ruleId":"345","severity":1,"message":"367","line":97,"column":11,"nodeType":"347","messageId":"348","endLine":97,"endColumn":19},{"ruleId":"345","severity":1,"message":"354","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":15},{"ruleId":"345","severity":1,"message":"355","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":18},{"ruleId":"386","severity":1,"message":"387","line":67,"column":3,"nodeType":"388","messageId":"389","endLine":67,"endColumn":4,"suggestions":"390"},{"ruleId":"386","severity":1,"message":"391","line":67,"column":9,"nodeType":"388","messageId":"389","endLine":67,"endColumn":10,"suggestions":"392"},{"ruleId":"345","severity":1,"message":"367","line":90,"column":11,"nodeType":"347","messageId":"348","endLine":90,"endColumn":19},{"ruleId":"345","severity":1,"message":"354","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":15},{"ruleId":"345","severity":1,"message":"355","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":18},{"ruleId":"345","severity":1,"message":"393","line":58,"column":11,"nodeType":"347","messageId":"348","endLine":58,"endColumn":15},{"ruleId":"345","severity":1,"message":"394","line":68,"column":11,"nodeType":"347","messageId":"348","endLine":68,"endColumn":15},{"ruleId":"386","severity":1,"message":"387","line":70,"column":3,"nodeType":"388","messageId":"389","endLine":70,"endColumn":4,"suggestions":"395"},{"ruleId":"386","severity":1,"message":"391","line":70,"column":9,"nodeType":"388","messageId":"389","endLine":70,"endColumn":10,"suggestions":"396"},{"ruleId":"345","severity":1,"message":"397","line":72,"column":11,"nodeType":"347","messageId":"348","endLine":72,"endColumn":15},{"ruleId":"345","severity":1,"message":"367","line":111,"column":11,"nodeType":"347","messageId":"348","endLine":111,"endColumn":19},{"ruleId":"345","severity":1,"message":"354","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":15},{"ruleId":"345","severity":1,"message":"355","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":18},{"ruleId":"345","severity":1,"message":"398","line":41,"column":7,"nodeType":"347","messageId":"348","endLine":41,"endColumn":11},{"ruleId":"345","severity":1,"message":"385","line":50,"column":11,"nodeType":"347","messageId":"348","endLine":50,"endColumn":15},{"ruleId":"345","severity":1,"message":"393","line":72,"column":11,"nodeType":"347","messageId":"348","endLine":72,"endColumn":15},{"ruleId":"345","severity":1,"message":"394","line":82,"column":11,"nodeType":"347","messageId":"348","endLine":82,"endColumn":15},{"ruleId":"386","severity":1,"message":"387","line":84,"column":3,"nodeType":"388","messageId":"389","endLine":84,"endColumn":4,"suggestions":"399"},{"ruleId":"386","severity":1,"message":"391","line":84,"column":9,"nodeType":"388","messageId":"389","endLine":84,"endColumn":10,"suggestions":"400"},{"ruleId":"345","severity":1,"message":"397","line":86,"column":11,"nodeType":"347","messageId":"348","endLine":86,"endColumn":15},{"ruleId":"345","severity":1,"message":"367","line":112,"column":11,"nodeType":"347","messageId":"348","endLine":112,"endColumn":19},{"ruleId":"345","severity":1,"message":"356","line":118,"column":11,"nodeType":"347","messageId":"348","endLine":118,"endColumn":17},{"ruleId":"345","severity":1,"message":"354","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":15},{"ruleId":"345","severity":1,"message":"355","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":18},"no-unused-vars","'orange' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Sidebar' is defined but never used.","'Navsection' is defined but never used.","'submit' is assigned a value but never used.","'navigate' is assigned a value but never used.","'AccountCircleIcon' is defined but never used.","'PersonAddIcon' is defined but never used.","'LogoutIcon' is defined but never used.","'FindReplaceOutlinedIcon' is defined but never used.","'PublicOutlinedIcon' is defined but never used.","'DarkModeOutlinedIcon' is defined but never used.","'CampaignOutlinedIcon' is defined but never used.","'ChatBubbleOutlineOutlinedIcon' is defined but never used.","'useNavigate' is defined but never used.","'transfer' is assigned a value but never used.","'obj7' is assigned a value but never used.","no-redeclare","'submit' is already defined.","redeclared","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'submit' is defined but never used.","'obj9' is assigned a value but never used.","'obj8' is assigned a value but never used.","'answerID' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'obj3' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\U.","TemplateElement","unnecessaryEscape",["401","402"],"Unnecessary escape character: \\Y.",["403","404"],"'obj4' is assigned a value but never used.","'obj5' is assigned a value but never used.",["405","406"],["407","408"],"'obj6' is assigned a value but never used.","'obj2' is assigned a value but never used.",["409","410"],["411","412"],{"messageId":"413","fix":"414","desc":"415"},{"messageId":"416","fix":"417","desc":"418"},{"messageId":"413","fix":"419","desc":"415"},{"messageId":"416","fix":"420","desc":"418"},{"messageId":"413","fix":"421","desc":"415"},{"messageId":"416","fix":"422","desc":"418"},{"messageId":"413","fix":"423","desc":"415"},{"messageId":"416","fix":"424","desc":"418"},{"messageId":"413","fix":"425","desc":"415"},{"messageId":"416","fix":"426","desc":"418"},{"messageId":"413","fix":"427","desc":"415"},{"messageId":"416","fix":"428","desc":"418"},"removeEscape",{"range":"429","text":"430"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"431","text":"432"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"433","text":"430"},{"range":"434","text":"432"},{"range":"435","text":"430"},{"range":"436","text":"432"},{"range":"437","text":"430"},{"range":"438","text":"432"},{"range":"439","text":"430"},{"range":"440","text":"432"},{"range":"441","text":"430"},{"range":"442","text":"432"},[1652,1653],"",[1652,1652],"\\",[1658,1659],[1658,1658],[2100,2101],[2100,2100],[2106,2107],[2106,2106],[2413,2414],[2413,2413],[2419,2420],[2419,2419]]